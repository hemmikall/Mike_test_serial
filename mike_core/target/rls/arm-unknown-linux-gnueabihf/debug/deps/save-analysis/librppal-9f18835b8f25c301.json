{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1","program":"/home/dpop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rppal","--edition=2018","/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=9f18835b8f25c301","-C","extra-filename=-9f18835b8f25c301","--out-dir","/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/arm-unknown-linux-gnueabihf/debug/deps","--target","arm-unknown-linux-gnueabihf","-C","linker=arm-linux-gnueabihf-gcc","-L","dependency=/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/arm-unknown-linux-gnueabihf/debug/deps","-L","dependency=/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/debug/deps","--extern","lazy_static=/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/arm-unknown-linux-gnueabihf/debug/deps/liblazy_static-5c62149a8c1bb994.rmeta","--extern","libc=/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/arm-unknown-linux-gnueabihf/debug/deps/liblibc-e626dd5dafc0c113.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dpop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dpop/Documents/GitHub/Mike-core/mike_core/target/rls/arm-unknown-linux-gnueabihf/debug/deps/librppal-9f18835b8f25c301.rmeta"},"prelude":{"crate_id":{"name":"rppal","disambiguator":[15238261067153292492,0]},"crate_root":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src","external_crates":[{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2558183281071091734,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17930309289214527112,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14518270914441242570,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2056816703833760926,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[263592133389127902,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6313592986850129274,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7908042851433273054,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5268474705390357542,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8222606895523886667,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17159437771487188998,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5160849031503779362,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1560058580958982372,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[5684491273208024030,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15935281598191349318,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[225184955421101349,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10703373693846501830,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[12954411982148612715,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[3970742854248919223,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3211155878155126720,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","num":20,"id":{"name":"lazy_static","disambiguator":[8274507222854603115,0]}},{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","num":21,"id":{"name":"libc","disambiguator":[9851869757410333131,0]}}],"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1121,"byte_end":2167,"line_start":21,"line_end":48,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12115,"byte_end":12123,"line_start":160,"line_end":160,"column_start":21,"column_end":29},"alias_span":null,"name":"InputPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1877},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12125,"byte_end":12130,"line_start":160,"line_end":160,"column_start":31,"column_end":36},"alias_span":null,"name":"IoPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12132,"byte_end":12141,"line_start":160,"line_end":160,"column_start":38,"column_end":47},"alias_span":null,"name":"OutputPin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12143,"byte_end":12146,"line_start":160,"line_end":160,"column_start":49,"column_end":52},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102511,"byte_end":102523,"line_start":153,"line_end":153,"column_start":22,"column_end":34},"alias_span":null,"name":"Capabilities","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":2229},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174762,"byte_end":174769,"line_start":170,"line_end":170,"column_start":24,"column_end":31},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":1031}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1121,"byte_end":2167,"line_start":21,"line_end":48,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":702},{"krate":0,"index":913},{"krate":0,"index":1031},{"krate":0,"index":1219},{"krate":0,"index":1266}],"decl_id":null,"docs":" RPPAL provides access to the Raspberry Pi's GPIO, I2C, PWM, SPI and UART\n peripherals through a user-friendly interface. In addition to peripheral\n access, RPPAL also offers support for USB to serial adapters.","sig":null,"attributes":[{"value":"/ RPPAL provides access to the Raspberry Pi's GPIO, I2C, PWM, SPI and UART","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1121,"byte_end":1197,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ peripherals through a user-friendly interface. In addition to peripheral","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1198,"byte_end":1274,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ access, RPPAL also offers support for USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1275,"byte_end":1340,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1341,"byte_end":1344,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The library can be used in conjunction with a variety of platform-agnostic","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1345,"byte_end":1423,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ drivers through its `embedded-hal` trait implementations. Both `embedded-hal`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1424,"byte_end":1505,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ v0.2.6 and v1.0.0-alpha.5 are supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1506,"byte_end":1550,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1551,"byte_end":1554,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ RPPAL requires Raspberry Pi OS or any similar, recent, Linux distribution.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1555,"byte_end":1633,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ Both `gnu` and `musl` libc targets are supported. RPPAL is compatible with the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1634,"byte_end":1716,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Raspberry Pi A, A+, B, B+, 2B, 3A+, 3B, 3B+, 4B, CM, CM 3, CM 3+, CM 4, 400,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1717,"byte_end":1797,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ Zero, Zero W and Zero 2 W. Backwards compatibility for minor revisions isn't","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1798,"byte_end":1878,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ guaranteed until v1.0.0.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":1879,"byte_end":1907,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":121},{"krate":0,"index":205},{"krate":0,"index":378},{"krate":0,"index":497},{"krate":0,"index":579},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":1934},{"krate":0,"index":1948},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":1950},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":676},{"krate":0,"index":1986},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":2004},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":685},{"krate":0,"index":2025},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":695},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":697}],"decl_id":null,"docs":" Interface for the GPIO peripheral.","sig":null,"attributes":[{"value":"/ Interface for the GPIO peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":5816,"byte_end":5854,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":5855,"byte_end":5858,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To ensure fast performance, RPPAL controls the GPIO peripheral by directly","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":5859,"byte_end":5937,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ accessing the registers through either `/dev/gpiomem` or `/dev/mem`. GPIO interrupts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":5938,"byte_end":6026,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ are configured using the `gpiochip` character device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6027,"byte_end":6084,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6085,"byte_end":6088,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Pins","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6089,"byte_end":6100,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6101,"byte_end":6104,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ GPIO pins are retrieved from a [`Gpio`] instance by their BCM GPIO pin number by calling","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6105,"byte_end":6197,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/ [`Gpio::get`]. The returned unconfigured [`Pin`] can be used to read the pin's","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6198,"byte_end":6280,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ mode and logic level. Converting the [`Pin`] to an [`InputPin`], [`OutputPin`] or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6281,"byte_end":6366,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"/ [`IoPin`] through the various `into_` methods available on [`Pin`] configures the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6367,"byte_end":6452,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ appropriate mode, and provides access to additional methods relevant to the selected pin mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6453,"byte_end":6551,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6552,"byte_end":6555,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Retrieving a GPIO pin with [`Gpio::get`] grants access to the pin through an owned [`Pin`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6556,"byte_end":6650,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ instance. If the pin is already in use, or the GPIO peripheral doesn't expose a pin with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6651,"byte_end":6743,"line_start":36,"line_end":36,"column_start":1,"column_end":93}},{"value":"/ the specified number, [`Gpio::get`] returns `Err(`[`Error::PinNotAvailable`]`)`. After a [`Pin`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6744,"byte_end":6844,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/ (or a derived [`InputPin`], [`OutputPin`] or [`IoPin`]) goes out of scope, it can be","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6845,"byte_end":6933,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"/ retrieved again through another [`Gpio::get`] call.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6934,"byte_end":6989,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6990,"byte_end":6993,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ By default, pins are reset to their original state when they go out of scope.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":6994,"byte_end":7075,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/ Use [`InputPin::set_reset_on_drop(false)`], [`OutputPin::set_reset_on_drop(false)`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7076,"byte_end":7163,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ or [`IoPin::set_reset_on_drop(false)`], respectively, to disable this behavior.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7164,"byte_end":7247,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/ Note that `drop` methods aren't called when a process is abnormally terminated (for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7248,"byte_end":7335,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ instance when a `SIGINT` signal isn't caught).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7336,"byte_end":7386,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7387,"byte_end":7390,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Interrupts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7391,"byte_end":7408,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7409,"byte_end":7412,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`InputPin`] supports both synchronous and asynchronous interrupt handlers.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7413,"byte_end":7492,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7493,"byte_end":7496,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Synchronous (blocking) interrupt triggers are configured using [`InputPin::set_interrupt`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7497,"byte_end":7592,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ An interrupt trigger for a single pin can be polled with [`InputPin::poll_interrupt`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7593,"byte_end":7683,"line_start":52,"line_end":52,"column_start":1,"column_end":91}},{"value":"/ which blocks the current thread until a trigger event occurs, or until the timeout period","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7684,"byte_end":7777,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/ elapses. [`Gpio::poll_interrupts`] should be used when multiple pins have been configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7778,"byte_end":7871,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"/ for synchronous interrupt triggers, and need to be polled simultaneously.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7872,"byte_end":7949,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7950,"byte_end":7953,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Asynchronous interrupt triggers are configured using [`InputPin::set_async_interrupt`]. The","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":7954,"byte_end":8049,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"/ specified callback function will be executed on a separate thread when a trigger event occurs.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8050,"byte_end":8148,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8149,"byte_end":8152,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ## Software-based PWM","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8153,"byte_end":8178,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8179,"byte_end":8182,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`OutputPin`] and [`IoPin`] feature a software-based PWM implementation. The PWM signal is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8183,"byte_end":8277,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/ emulated by toggling the pin's output state on a separate thread, combined with sleep and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8278,"byte_end":8371,"line_start":63,"line_end":63,"column_start":1,"column_end":94}},{"value":"/ busy-waiting.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8372,"byte_end":8389,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8390,"byte_end":8393,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Software-based PWM is inherently inaccurate on a multi-threaded OS due to scheduling/preemption.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8394,"byte_end":8494,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"/ If an accurate or faster PWM signal is required, use the hardware [`Pwm`] peripheral instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8495,"byte_end":8592,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8593,"byte_end":8596,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ PWM threads may occasionally sleep longer than needed. If the active or inactive part of the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8597,"byte_end":8693,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ signal is shorter than 250 µs, only busy-waiting is used, which will increase CPU usage. Due to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8694,"byte_end":8794,"line_start":70,"line_end":70,"column_start":1,"column_end":100}},{"value":"/ function call overhead, typical jitter is expected to be up to 10 µs on debug builds, and up to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8795,"byte_end":8895,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"/ 2 µs on release builds.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8896,"byte_end":8924,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8925,"byte_end":8928,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8929,"byte_end":8944,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8945,"byte_end":8948,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8949,"byte_end":8967,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8968,"byte_end":8971,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8972,"byte_end":8979,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":8980,"byte_end":9000,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9001,"byte_end":9029,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9030,"byte_end":9033,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ use rppal::gpio::Gpio;","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9034,"byte_end":9060,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9061,"byte_end":9064,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> rppal::gpio::Result<()> {","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9065,"byte_end":9109,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ let gpio = Gpio::new()?;","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9110,"byte_end":9138,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ let mut pin = gpio.get(23)?.into_output();","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9139,"byte_end":9185,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9186,"byte_end":9189,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ pin.set_high();","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9190,"byte_end":9209,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9210,"byte_end":9252,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"/ pin.set_low();","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9253,"byte_end":9271,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ # Ok(())","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9272,"byte_end":9284,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9285,"byte_end":9292,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9293,"byte_end":9300,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9301,"byte_end":9304,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Additional examples can be found in the `examples` directory.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9305,"byte_end":9370,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9371,"byte_end":9374,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## Troubleshooting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9375,"byte_end":9397,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9398,"byte_end":9401,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ### Permission denied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9402,"byte_end":9427,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9428,"byte_end":9431,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ In recent releases of Raspberry Pi OS (December 2017 or later), users that are part of the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9432,"byte_end":9526,"line_start":101,"line_end":101,"column_start":1,"column_end":95}},{"value":"/ `gpio` group (like the default `pi` user) can access `/dev/gpiomem` and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9527,"byte_end":9602,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ `/dev/gpiochipN` (N = 0-2) without needing additional permissions. If you encounter any","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9603,"byte_end":9694,"line_start":103,"line_end":103,"column_start":1,"column_end":92}},{"value":"/ [`PermissionDenied`] errors when constructing a new [`Gpio`] instance, either the current","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9695,"byte_end":9788,"line_start":104,"line_end":104,"column_start":1,"column_end":94}},{"value":"/ user isn't a member of the `gpio` group, or your Raspberry Pi OS distribution isn't","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9789,"byte_end":9876,"line_start":105,"line_end":105,"column_start":1,"column_end":88}},{"value":"/ up-to-date and doesn't automatically configure permissions for the above-mentioned","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9877,"byte_end":9963,"line_start":106,"line_end":106,"column_start":1,"column_end":87}},{"value":"/ files. Updating Raspberry Pi OS to the latest release should fix any permission issues.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":9964,"byte_end":10055,"line_start":107,"line_end":107,"column_start":1,"column_end":92}},{"value":"/ Alternatively, although not recommended, you can run your application with superuser","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10056,"byte_end":10144,"line_start":108,"line_end":108,"column_start":1,"column_end":89}},{"value":"/ privileges by using `sudo`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10145,"byte_end":10176,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10177,"byte_end":10180,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ If you're unable to update Raspberry Pi OS and its packages (namely `raspberrypi-sys-mods`) to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10181,"byte_end":10279,"line_start":111,"line_end":111,"column_start":1,"column_end":99}},{"value":"/ the latest available release, or updating hasn't fixed the issue, you might be able to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10280,"byte_end":10370,"line_start":112,"line_end":112,"column_start":1,"column_end":91}},{"value":"/ manually update your `udev` rules to set the appropriate permissions. More information","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10371,"byte_end":10461,"line_start":113,"line_end":113,"column_start":1,"column_end":91}},{"value":"/ can be found at [raspberrypi/linux#1225] and [raspberrypi/linux#2289].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10462,"byte_end":10536,"line_start":114,"line_end":114,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`Error::PinNotAvailable`]: enum.Error.html#variant.PinNotAvailable","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10541,"byte_end":10612,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/ [`PermissionDenied`]: enum.Error.html#variant.PermissionDenied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10613,"byte_end":10679,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"/ [raspberrypi/linux#1225]: https://github.com/raspberrypi/linux/issues/1225","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10680,"byte_end":10758,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/ [raspberrypi/linux#2289]: https://github.com/raspberrypi/linux/issues/2289","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10759,"byte_end":10837,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ [`Gpio`]: struct.Gpio.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10838,"byte_end":10868,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/ [`Gpio::get`]: struct.Gpio.html#method.get","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10869,"byte_end":10915,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/ [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10916,"byte_end":10986,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":10987,"byte_end":11015,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11016,"byte_end":11054,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/ [`InputPin::set_reset_on_drop(false)`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11055,"byte_end":11144,"line_start":125,"line_end":125,"column_start":1,"column_end":90}},{"value":"/ [`InputPin::set_interrupt`]: struct.InputPin.html#method.set_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11145,"byte_end":11219,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ [`InputPin::poll_interrupt`]: struct.InputPin.html#method.poll_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11220,"byte_end":11296,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/ [`InputPin::set_async_interrupt`]: struct.InputPin.html#method.set_async_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11297,"byte_end":11383,"line_start":128,"line_end":128,"column_start":1,"column_end":87}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11384,"byte_end":11424,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/ [`OutputPin::set_reset_on_drop(false)`]: struct.OutputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11425,"byte_end":11516,"line_start":130,"line_end":130,"column_start":1,"column_end":92}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11517,"byte_end":11549,"line_start":131,"line_end":131,"column_start":1,"column_end":33}},{"value":"/ [`IoPin::set_reset_on_drop(false)`]: struct.IoPin.html#method.set_reset_on_drop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11550,"byte_end":11633,"line_start":132,"line_end":132,"column_start":1,"column_end":84}},{"value":"/ [`Pwm`]: ../pwm/struct.Pwm.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":11634,"byte_end":11669,"line_start":133,"line_end":133,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1809},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72488,"byte_end":72491,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"Pin","qualname":"::gpio::pin::Pin","value":"Pin {  }","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811}],"decl_id":null,"docs":" Unconfigured GPIO pin.","sig":null,"attributes":[{"value":"/ Unconfigured GPIO pin.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71580,"byte_end":71606,"line_start":266,"line_end":266,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71607,"byte_end":71610,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ `Pin`s are constructed by retrieving them using [`Gpio::get`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71611,"byte_end":71677,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71678,"byte_end":71681,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ An unconfigured `Pin` can be used to read the pin's mode and logic level.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71682,"byte_end":71759,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"/ Converting the `Pin` to an [`InputPin`], [`OutputPin`] or [`IoPin`] through the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71760,"byte_end":71843,"line_start":271,"line_end":271,"column_start":1,"column_end":84}},{"value":"/ various `into_` methods available on `Pin` configures the appropriate mode, and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71844,"byte_end":71927,"line_start":272,"line_end":272,"column_start":1,"column_end":84}},{"value":"/ provides access to additional methods relevant to the selected pin mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":71928,"byte_end":72004,"line_start":273,"line_end":273,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72005,"byte_end":72008,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`] trait implementation for `Pin` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72009,"byte_end":72110,"line_start":275,"line_end":275,"column_start":1,"column_end":102}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72111,"byte_end":72198,"line_start":276,"line_end":276,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72199,"byte_end":72221,"line_start":277,"line_end":277,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72222,"byte_end":72225,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72226,"byte_end":72299,"line_start":279,"line_end":279,"column_start":1,"column_end":74}},{"value":"/ [`Gpio::get`]: struct.Gpio.html#method.get","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72300,"byte_end":72346,"line_start":280,"line_end":280,"column_start":1,"column_end":47}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72347,"byte_end":72385,"line_start":281,"line_end":281,"column_start":1,"column_end":39}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72386,"byte_end":72426,"line_start":282,"line_end":282,"column_start":1,"column_end":41}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72427,"byte_end":72459,"line_start":283,"line_end":283,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72841,"byte_end":72844,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"pin","qualname":"<Pin>::pin","value":"pub fn pin(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the GPIO pin number.","sig":null,"attributes":[{"value":"/ Returns the GPIO pin number.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72689,"byte_end":72721,"line_start":296,"line_end":296,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72726,"byte_end":72729,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Pins are addressed by their BCM numbers, rather than their physical location.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72734,"byte_end":72815,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72820,"byte_end":72829,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72941,"byte_end":72945,"line_start":306,"line_end":306,"column_start":12,"column_end":16},"name":"mode","qualname":"<Pin>::mode","value":"pub fn mode(&Self) -> Mode","parent":null,"children":[],"decl_id":null,"docs":" Returns the pin's mode.\n","sig":null,"attributes":[{"value":"/ Returns the pin's mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72888,"byte_end":72915,"line_start":304,"line_end":304,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72920,"byte_end":72929,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73080,"byte_end":73084,"line_start":312,"line_end":312,"column_start":12,"column_end":16},"name":"read","qualname":"<Pin>::read","value":"pub fn read(&Self) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Reads the pin's logic level.\n","sig":null,"attributes":[{"value":"/ Reads the pin's logic level.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73022,"byte_end":73054,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73059,"byte_end":73068,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73435,"byte_end":73445,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"into_input","qualname":"<Pin>::into_input","value":"pub fn into_input(Self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]\n and disables the pin's built-in pull-up/pull-down resistors.","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73163,"byte_end":73241,"line_start":316,"line_end":316,"column_start":5,"column_end":83}},{"value":"/ and disables the pin's built-in pull-up/pull-down resistors.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73246,"byte_end":73310,"line_start":317,"line_end":317,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73315,"byte_end":73318,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73323,"byte_end":73361,"line_start":319,"line_end":319,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73366,"byte_end":73409,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73414,"byte_end":73423,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73999,"byte_end":74018,"line_start":336,"line_end":336,"column_start":12,"column_end":31},"name":"into_input_pulldown","qualname":"<Pin>::into_input_pulldown","value":"pub fn into_input_pulldown(Self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]\n and enables the pin's built-in pull-down resistor.","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73522,"byte_end":73600,"line_start":326,"line_end":326,"column_start":5,"column_end":83}},{"value":"/ and enables the pin's built-in pull-down resistor.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73605,"byte_end":73659,"line_start":327,"line_end":327,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73664,"byte_end":73667,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The pull-down resistor is disabled when `InputPin` goes out of scope if [`reset_on_drop`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73672,"byte_end":73765,"line_start":329,"line_end":329,"column_start":5,"column_end":98}},{"value":"/ is set to `true` (default).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73770,"byte_end":73801,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73806,"byte_end":73809,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73814,"byte_end":73852,"line_start":332,"line_end":332,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73857,"byte_end":73900,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/ [`reset_on_drop`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73905,"byte_end":73973,"line_start":334,"line_end":334,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":73978,"byte_end":73987,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74573,"byte_end":74590,"line_start":350,"line_end":350,"column_start":12,"column_end":29},"name":"into_input_pullup","qualname":"<Pin>::into_input_pullup","value":"pub fn into_input_pullup(Self) -> InputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]\n and enables the pin's built-in pull-up resistor.","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`InputPin`]. Sets the mode to [`Input`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74100,"byte_end":74178,"line_start":340,"line_end":340,"column_start":5,"column_end":83}},{"value":"/ and enables the pin's built-in pull-up resistor.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74183,"byte_end":74235,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74240,"byte_end":74243,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The pull-up resistor is disabled when `InputPin` goes out of scope if [`reset_on_drop`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74248,"byte_end":74339,"line_start":343,"line_end":343,"column_start":5,"column_end":96}},{"value":"/ is set to `true` (default).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74344,"byte_end":74375,"line_start":344,"line_end":344,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74380,"byte_end":74383,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74388,"byte_end":74426,"line_start":346,"line_end":346,"column_start":5,"column_end":43}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74431,"byte_end":74474,"line_start":347,"line_end":347,"column_start":5,"column_end":48}},{"value":"/ [`reset_on_drop`]: struct.InputPin.html#method.set_reset_on_drop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74479,"byte_end":74547,"line_start":348,"line_end":348,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74552,"byte_end":74561,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74828,"byte_end":74839,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"into_output","qualname":"<Pin>::into_output","value":"pub fn into_output(Self) -> OutputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`OutputPin`]. Sets the mode to [`Mode::Output`]\n and leaves the logic level unchanged.\n","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`OutputPin`]. Sets the mode to [`Mode::Output`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74670,"byte_end":74756,"line_start":354,"line_end":354,"column_start":5,"column_end":91}},{"value":"/ and leaves the logic level unchanged.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74761,"byte_end":74802,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74807,"byte_end":74816,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75073,"byte_end":75088,"line_start":364,"line_end":364,"column_start":12,"column_end":27},"name":"into_output_low","qualname":"<Pin>::into_output_low","value":"pub fn into_output_low(Self) -> OutputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`OutputPin`]. Changes the logic level to\n [`Level::Low`] and then sets the mode to [`Mode::Output`].\n","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`OutputPin`]. Changes the logic level to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74901,"byte_end":74980,"line_start":361,"line_end":361,"column_start":5,"column_end":84}},{"value":"/ [`Level::Low`] and then sets the mode to [`Mode::Output`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":74985,"byte_end":75047,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75052,"byte_end":75061,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75352,"byte_end":75368,"line_start":373,"line_end":373,"column_start":12,"column_end":28},"name":"into_output_high","qualname":"<Pin>::into_output_high","value":"pub fn into_output_high(Self) -> OutputPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`OutputPin`]. Changes the logic level to\n [`Level::High`] and then sets the mode to [`Mode::Output`].\n","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`OutputPin`]. Changes the logic level to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75179,"byte_end":75258,"line_start":370,"line_end":370,"column_start":5,"column_end":84}},{"value":"/ [`Level::High`] and then sets the mode to [`Mode::Output`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75263,"byte_end":75326,"line_start":371,"line_end":371,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75331,"byte_end":75340,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75649,"byte_end":75656,"line_start":384,"line_end":384,"column_start":12,"column_end":19},"name":"into_io","qualname":"<Pin>::into_io","value":"pub fn into_io(Self, Mode) -> IoPin","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Pin` and returns an [`IoPin`]. Sets the mode to the specified mode.","sig":null,"attributes":[{"value":"/ Consumes the `Pin` and returns an [`IoPin`]. Sets the mode to the specified mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75460,"byte_end":75545,"line_start":379,"line_end":379,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75550,"byte_end":75553,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75558,"byte_end":75590,"line_start":381,"line_end":381,"column_start":5,"column_end":37}},{"value":"/ [`Mode`]: enum.Mode.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75595,"byte_end":75623,"line_start":382,"line_end":382,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":75628,"byte_end":75637,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77579,"byte_end":77587,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"InputPin","qualname":"::gpio::pin::InputPin","value":"InputPin {  }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828}],"decl_id":null,"docs":" GPIO pin configured as input.","sig":null,"attributes":[{"value":"/ GPIO pin configured as input.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76608,"byte_end":76641,"line_start":426,"line_end":426,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76642,"byte_end":76645,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ `InputPin`s are constructed by converting a [`Pin`] using [`Pin::into_input`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76646,"byte_end":76728,"line_start":428,"line_end":428,"column_start":1,"column_end":83}},{"value":"/ [`Pin::into_input_pullup`] or [`Pin::into_input_pulldown`]. The pin's mode is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76729,"byte_end":76810,"line_start":429,"line_end":429,"column_start":1,"column_end":82}},{"value":"/ automatically set to [`Input`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76811,"byte_end":76846,"line_start":430,"line_end":430,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76847,"byte_end":76850,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ An `InputPin` can be used to read a pin's logic level, or (a)synchronously poll for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76851,"byte_end":76938,"line_start":432,"line_end":432,"column_start":1,"column_end":88}},{"value":"/ interrupt trigger events.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76939,"byte_end":76968,"line_start":433,"line_end":433,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76969,"byte_end":76972,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`] trait implementation for `InputPin` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76973,"byte_end":77079,"line_start":435,"line_end":435,"column_start":1,"column_end":107}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77080,"byte_end":77167,"line_start":436,"line_end":436,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77168,"byte_end":77190,"line_start":437,"line_end":437,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77191,"byte_end":77194,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77195,"byte_end":77268,"line_start":439,"line_end":439,"column_start":1,"column_end":74}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77269,"byte_end":77297,"line_start":440,"line_end":440,"column_start":1,"column_end":29}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77298,"byte_end":77341,"line_start":441,"line_end":441,"column_start":1,"column_end":44}},{"value":"/ [`Pin::into_input`]: struct.Pin.html#method.into_input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77342,"byte_end":77400,"line_start":442,"line_end":442,"column_start":1,"column_end":59}},{"value":"/ [`Pin::into_input_pullup`]: struct.Pin.html#method.into_input_pullup","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77401,"byte_end":77473,"line_start":443,"line_end":443,"column_start":1,"column_end":73}},{"value":"/ [`Pin::into_input_pulldown`]: struct.Pin.html#method.into_input_pulldown","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77474,"byte_end":77550,"line_start":444,"line_end":444,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78739,"byte_end":78752,"line_start":488,"line_end":488,"column_start":12,"column_end":25},"name":"set_interrupt","qualname":"<InputPin>::set_interrupt","value":"pub fn set_interrupt(&mut Self, Trigger) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures a synchronous interrupt trigger.","sig":null,"attributes":[{"value":"/ Configures a synchronous interrupt trigger.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78281,"byte_end":78328,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78333,"byte_end":78336,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ After configuring a synchronous interrupt trigger, call [`poll_interrupt`] or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78341,"byte_end":78422,"line_start":481,"line_end":481,"column_start":5,"column_end":86}},{"value":"/ [`Gpio::poll_interrupts`] to block while waiting for a trigger event.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78427,"byte_end":78500,"line_start":482,"line_end":482,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78505,"byte_end":78508,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Any previously configured (a)synchronous interrupt triggers will be cleared.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78513,"byte_end":78593,"line_start":484,"line_end":484,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78598,"byte_end":78601,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`poll_interrupt`]: #method.poll_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78606,"byte_end":78652,"line_start":486,"line_end":486,"column_start":5,"column_end":51}},{"value":"/ [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":78657,"byte_end":78727,"line_start":487,"line_end":487,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79094,"byte_end":79109,"line_start":496,"line_end":496,"column_start":12,"column_end":27},"name":"clear_interrupt","qualname":"<InputPin>::clear_interrupt","value":"pub fn clear_interrupt(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a previously configured synchronous interrupt trigger.\n","sig":null,"attributes":[{"value":"/ Removes a previously configured synchronous interrupt trigger.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79016,"byte_end":79082,"line_start":495,"line_end":495,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80548,"byte_end":80562,"line_start":520,"line_end":520,"column_start":12,"column_end":26},"name":"poll_interrupt","qualname":"<InputPin>::poll_interrupt","value":"pub fn poll_interrupt(&mut Self, bool, Option<Duration>)\n-> Result<Option<Level>>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until an interrupt is triggered on the pin, or a timeout occurs.","sig":null,"attributes":[{"value":"/ Blocks until an interrupt is triggered on the pin, or a timeout occurs.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79239,"byte_end":79314,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79319,"byte_end":79322,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This only works after the pin has been configured for synchronous interrupts using","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79327,"byte_end":79413,"line_start":502,"line_end":502,"column_start":5,"column_end":91}},{"value":"/ [`set_interrupt`]. Asynchronous interrupt triggers are automatically polled on a separate thread.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79418,"byte_end":79519,"line_start":503,"line_end":503,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79524,"byte_end":79527,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Calling `poll_interrupt` blocks any other calls to `poll_interrupt` (including on other `InputPin`s) or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79532,"byte_end":79639,"line_start":505,"line_end":505,"column_start":5,"column_end":112}},{"value":"/ [`Gpio::poll_interrupts`] until it returns. If you need to poll multiple pins simultaneously, use","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79644,"byte_end":79745,"line_start":506,"line_end":506,"column_start":5,"column_end":106}},{"value":"/ [`Gpio::poll_interrupts`] to block while waiting for any of the interrupts to trigger, or switch to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79750,"byte_end":79853,"line_start":507,"line_end":507,"column_start":5,"column_end":108}},{"value":"/ using asynchronous interrupts with [`set_async_interrupt`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79858,"byte_end":79921,"line_start":508,"line_end":508,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79926,"byte_end":79929,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Setting `reset` to `false` returns any cached interrupt trigger events if available. Setting `reset` to `true`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":79934,"byte_end":80048,"line_start":510,"line_end":510,"column_start":5,"column_end":119}},{"value":"/ clears all cached events before polling for new events.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80053,"byte_end":80112,"line_start":511,"line_end":511,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80117,"byte_end":80120,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ The `timeout` duration indicates how long the call will block while waiting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80125,"byte_end":80204,"line_start":513,"line_end":513,"column_start":5,"column_end":84}},{"value":"/ for interrupt trigger events, after which an `Ok(None))` is returned.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80209,"byte_end":80282,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ `timeout` can be set to `None` to wait indefinitely.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80287,"byte_end":80343,"line_start":515,"line_end":515,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80348,"byte_end":80351,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ [`set_interrupt`]: #method.set_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80356,"byte_end":80400,"line_start":517,"line_end":517,"column_start":5,"column_end":49}},{"value":"/ [`Gpio::poll_interrupts`]: struct.Gpio.html#method.poll_interrupts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80405,"byte_end":80475,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ [`set_async_interrupt`]: #method.set_async_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80480,"byte_end":80536,"line_start":519,"line_end":519,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81463,"byte_end":81482,"line_start":545,"line_end":545,"column_start":12,"column_end":31},"name":"set_async_interrupt","qualname":"<InputPin>::set_async_interrupt","value":"pub fn set_async_interrupt<C>(&mut Self, Trigger, C) -> Result<()> where\nC: FnMut(Level) -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Configures an asynchronous interrupt trigger, which executes the callback on a\n separate thread when the interrupt is triggered.","sig":null,"attributes":[{"value":"/ Configures an asynchronous interrupt trigger, which executes the callback on a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":80918,"byte_end":81000,"line_start":535,"line_end":535,"column_start":5,"column_end":87}},{"value":"/ separate thread when the interrupt is triggered.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81005,"byte_end":81057,"line_start":536,"line_end":536,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81062,"byte_end":81065,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The callback closure or function pointer is called with a single [`Level`] argument.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81070,"byte_end":81158,"line_start":538,"line_end":538,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81163,"byte_end":81166,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Any previously configured (a)synchronous interrupt triggers for this pin are cleared","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81171,"byte_end":81259,"line_start":540,"line_end":540,"column_start":5,"column_end":93}},{"value":"/ when `set_async_interrupt` is called, or when `InputPin` goes out of scope.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81264,"byte_end":81343,"line_start":541,"line_end":541,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81348,"byte_end":81351,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ [`clear_async_interrupt`]: #method.clear_async_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81356,"byte_end":81416,"line_start":543,"line_end":543,"column_start":5,"column_end":65}},{"value":"/ [`Level`]: enum.Level.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81421,"byte_end":81451,"line_start":544,"line_end":544,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81966,"byte_end":81987,"line_start":563,"line_end":563,"column_start":12,"column_end":33},"name":"clear_async_interrupt","qualname":"<InputPin>::clear_async_interrupt","value":"pub fn clear_async_interrupt(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a previously configured asynchronous interrupt trigger.\n","sig":null,"attributes":[{"value":"/ Removes a previously configured asynchronous interrupt trigger.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":81887,"byte_end":81954,"line_start":562,"line_end":562,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83526,"byte_end":83535,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"OutputPin","qualname":"::gpio::pin::OutputPin","value":"OutputPin {  }","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853}],"decl_id":null,"docs":" GPIO pin configured as output.","sig":null,"attributes":[{"value":"/ GPIO pin configured as output.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82219,"byte_end":82253,"line_start":577,"line_end":577,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82254,"byte_end":82257,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ `OutputPin`s are constructed by converting a [`Pin`] using [`Pin::into_output`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82258,"byte_end":82342,"line_start":579,"line_end":579,"column_start":1,"column_end":85}},{"value":"/ [`Pin::into_output_low`] or [`Pin::into_output_high`]. The pin's mode is automatically set to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82343,"byte_end":82440,"line_start":580,"line_end":580,"column_start":1,"column_end":98}},{"value":"/ [`Mode::Output`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82441,"byte_end":82462,"line_start":581,"line_end":581,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82463,"byte_end":82466,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ An `OutputPin` can be used to change a pin's output state.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82467,"byte_end":82529,"line_start":583,"line_end":583,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82530,"byte_end":82533,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`digital::OutputPin`] and [`PwmPin`] trait implementations for `OutputPin`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82534,"byte_end":82632,"line_start":585,"line_end":585,"column_start":1,"column_end":99}},{"value":"/ can be enabled by specifying the optional `hal` feature in the dependency","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82633,"byte_end":82710,"line_start":586,"line_end":586,"column_start":1,"column_end":78}},{"value":"/ declaration for the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82711,"byte_end":82749,"line_start":587,"line_end":587,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82750,"byte_end":82753,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`], [`digital::StatefulOutputPin`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82754,"byte_end":82842,"line_start":589,"line_end":589,"column_start":1,"column_end":89}},{"value":"/ [`digital::ToggleableOutputPin`] and [`Pwm`] trait implementations for `OutputPin` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82843,"byte_end":82944,"line_start":590,"line_end":590,"column_start":1,"column_end":102}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":82945,"byte_end":83032,"line_start":591,"line_end":591,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83033,"byte_end":83055,"line_start":592,"line_end":592,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83056,"byte_end":83059,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83060,"byte_end":83133,"line_start":594,"line_end":594,"column_start":1,"column_end":74}},{"value":"/ [`digital::StatefulOutputPin`]: ../../embedded_hal/digital/trait.StatefulOutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83134,"byte_end":83225,"line_start":595,"line_end":595,"column_start":1,"column_end":92}},{"value":"/ [`digital::ToggleableOutputPin`]: ../../embedded_hal/digital/trait.ToggleableOutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83226,"byte_end":83321,"line_start":596,"line_end":596,"column_start":1,"column_end":96}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83322,"byte_end":83368,"line_start":597,"line_end":597,"column_start":1,"column_end":47}},{"value":"/ [`digital::OutputPin`]: ../../embedded_hal/digital/trait.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83369,"byte_end":83444,"line_start":598,"line_end":598,"column_start":1,"column_end":76}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83445,"byte_end":83497,"line_start":599,"line_end":599,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84677,"byte_end":84687,"line_start":645,"line_end":645,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<OutputPin>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pin's output state is set to [`Low`].","sig":null,"attributes":[{"value":"/ Returns `true` if the pin's output state is set to [`Low`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84535,"byte_end":84598,"line_start":641,"line_end":641,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84603,"byte_end":84606,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ [`Low`]: enum.Level.html#variant.Low","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84611,"byte_end":84651,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84656,"byte_end":84665,"line_start":644,"line_end":644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84899,"byte_end":84910,"line_start":653,"line_end":653,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<OutputPin>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pin's output state is set to [`High`].","sig":null,"attributes":[{"value":"/ Returns `true` if the pin's output state is set to [`High`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84754,"byte_end":84818,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84823,"byte_end":84826,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [`High`]: enum.Level.html#variant.High","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84831,"byte_end":84873,"line_start":651,"line_end":651,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":84878,"byte_end":84887,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1877},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86670,"byte_end":86675,"line_start":693,"line_end":693,"column_start":12,"column_end":17},"name":"IoPin","qualname":"::gpio::pin::IoPin","value":"IoPin {  }","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883}],"decl_id":null,"docs":" GPIO pin that can be (re)configured for any mode or alternate function.","sig":null,"attributes":[{"value":"/ GPIO pin that can be (re)configured for any mode or alternate function.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85069,"byte_end":85144,"line_start":664,"line_end":664,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85145,"byte_end":85148,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ `IoPin`s are constructed by converting a [`Pin`] using [`Pin::into_io`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85149,"byte_end":85225,"line_start":666,"line_end":666,"column_start":1,"column_end":77}},{"value":"/ The pin's mode is automatically set to the specified mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85226,"byte_end":85288,"line_start":667,"line_end":667,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85289,"byte_end":85292,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ An `IoPin` can be reconfigured for any available mode. Depending on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85293,"byte_end":85368,"line_start":669,"line_end":669,"column_start":1,"column_end":76}},{"value":"/ mode, some methods may not have any effect. For instance, calling a method that","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85369,"byte_end":85452,"line_start":670,"line_end":670,"column_start":1,"column_end":84}},{"value":"/ alters the pin's output state won't cause any changes when the pin's mode is set","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85453,"byte_end":85537,"line_start":671,"line_end":671,"column_start":1,"column_end":85}},{"value":"/ to [`Input`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85538,"byte_end":85555,"line_start":672,"line_end":672,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85556,"byte_end":85559,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`digital::OutputPin`] and [`PwmPin`] trait implementations for `IoPin`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85560,"byte_end":85654,"line_start":674,"line_end":674,"column_start":1,"column_end":95}},{"value":"/ can be enabled by specifying the optional `hal` feature in the dependency","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85655,"byte_end":85732,"line_start":675,"line_end":675,"column_start":1,"column_end":78}},{"value":"/ declaration for the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85733,"byte_end":85771,"line_start":676,"line_end":676,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85772,"byte_end":85775,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`digital::InputPin`], [`digital::StatefulOutputPin`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85776,"byte_end":85864,"line_start":678,"line_end":678,"column_start":1,"column_end":89}},{"value":"/ [`digital::ToggleableOutputPin`] and [`Pwm`] trait implementations for `IoPin` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85865,"byte_end":85962,"line_start":679,"line_end":679,"column_start":1,"column_end":98}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":85963,"byte_end":86050,"line_start":680,"line_end":680,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86051,"byte_end":86073,"line_start":681,"line_end":681,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86074,"byte_end":86077,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ [`digital::InputPin`]: ../../embedded_hal/digital/trait.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86078,"byte_end":86151,"line_start":683,"line_end":683,"column_start":1,"column_end":74}},{"value":"/ [`digital::StatefulOutputPin`]: ../../embedded_hal/digital/trait.StatefulOutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86152,"byte_end":86243,"line_start":684,"line_end":684,"column_start":1,"column_end":92}},{"value":"/ [`digital::ToggleableOutputPin`]: ../../embedded_hal/digital/trait.ToggleableOutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86244,"byte_end":86339,"line_start":685,"line_end":685,"column_start":1,"column_end":96}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86340,"byte_end":86386,"line_start":686,"line_end":686,"column_start":1,"column_end":47}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86387,"byte_end":86415,"line_start":687,"line_end":687,"column_start":1,"column_end":29}},{"value":"/ [`Input`]: enum.Mode.html#variant.Input","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86416,"byte_end":86459,"line_start":688,"line_end":688,"column_start":1,"column_end":44}},{"value":"/ [`Pin::into_io`]: struct.Pin.html#method.into_io","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86460,"byte_end":86512,"line_start":689,"line_end":689,"column_start":1,"column_end":53}},{"value":"/ [`digital::OutputPin`]: ../../embedded_hal/digital/trait.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86513,"byte_end":86588,"line_start":690,"line_end":690,"column_start":1,"column_end":76}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":86589,"byte_end":86641,"line_start":691,"line_end":691,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87746,"byte_end":87750,"line_start":737,"line_end":737,"column_start":12,"column_end":16},"name":"mode","qualname":"<IoPin>::mode","value":"pub fn mode(&Self) -> Mode","parent":null,"children":[],"decl_id":null,"docs":" Returns the pin's mode.\n","sig":null,"attributes":[{"value":"/ Returns the pin's mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87693,"byte_end":87720,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87725,"byte_end":87734,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87853,"byte_end":87861,"line_start":743,"line_end":743,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<IoPin>::set_mode","value":"pub fn set_mode(&mut Self, Mode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the pin's mode.\n","sig":null,"attributes":[{"value":"/ Sets the pin's mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87803,"byte_end":87827,"line_start":741,"line_end":741,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87832,"byte_end":87841,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":88378,"byte_end":88392,"line_start":757,"line_end":757,"column_start":12,"column_end":26},"name":"set_pullupdown","qualname":"<IoPin>::set_pullupdown","value":"pub fn set_pullupdown(&mut Self, PullUpDown)","parent":null,"children":[],"decl_id":null,"docs":" Configures the built-in pull-up/pull-down resistors.\n","sig":null,"attributes":[{"value":"/ Configures the built-in pull-up/pull-down resistors.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":88296,"byte_end":88352,"line_start":755,"line_end":755,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":88357,"byte_end":88366,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1935},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12730,"byte_end":12742,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::gpio::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12250,"byte_end":12268,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12273,"byte_end":12276,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi model or SoC can't be identified. Support for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12281,"byte_end":12347,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ new models is usually added shortly after they are officially","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12352,"byte_end":12417,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ announced and available to the public. Make sure you're using","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12422,"byte_end":12487,"line_start":169,"line_end":169,"column_start":5,"column_end":70}},{"value":"/ the latest release of RPPAL.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12492,"byte_end":12524,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12529,"byte_end":12532,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12537,"byte_end":12601,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12606,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12677,"byte_end":12725,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1937},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13272,"byte_end":13287,"line_start":187,"line_end":187,"column_start":5,"column_end":20},"name":"PinNotAvailable","qualname":"::gpio::Error::PinNotAvailable","value":"Error::PinNotAvailable(u8)","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":" Pin is not available.","sig":null,"attributes":[{"value":"/ Pin is not available.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12748,"byte_end":12773,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12778,"byte_end":12781,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The pin is already in use elsewhere in your application, or the GPIO peripheral","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12786,"byte_end":12869,"line_start":178,"line_end":178,"column_start":5,"column_end":88}},{"value":"/ doesn't expose a pin with the specified number. If the pin is currently in use, you","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12874,"byte_end":12961,"line_start":179,"line_end":179,"column_start":5,"column_end":92}},{"value":"/ can retrieve it again after the [`Pin`] (or a derived [`InputPin`], [`OutputPin`] or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12966,"byte_end":13054,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ [`IoPin`]) instance goes out of scope.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13059,"byte_end":13101,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13106,"byte_end":13109,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13114,"byte_end":13142,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13147,"byte_end":13185,"line_start":184,"line_end":184,"column_start":5,"column_end":43}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13190,"byte_end":13230,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13235,"byte_end":13267,"line_start":186,"line_end":186,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1940},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13555,"byte_end":13571,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::gpio::Error::PermissionDenied","value":"Error::PermissionDenied(String)","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":" Permission denied when opening `/dev/gpiomem`, `/dev/mem` or `/dev/gpiochipN` for\n read/write access.","sig":null,"attributes":[{"value":"/ Permission denied when opening `/dev/gpiomem`, `/dev/mem` or `/dev/gpiochipN` for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13297,"byte_end":13382,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/ read/write access.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13387,"byte_end":13409,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13414,"byte_end":13417,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ More information on possible causes for this error can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13422,"byte_end":13497,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13502,"byte_end":13505,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#permission-denied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13510,"byte_end":13550,"line_start":193,"line_end":193,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1943},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13604,"byte_end":13606,"line_start":196,"line_end":196,"column_start":5,"column_end":7},"name":"Io","qualname":"::gpio::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13585,"byte_end":13599,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1946},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13648,"byte_end":13659,"line_start":198,"line_end":198,"column_start":5,"column_end":16},"name":"ThreadPanic","qualname":"::gpio::Error::ThreadPanic","value":"Error::ThreadPanic","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":" Thread panicked.\n","sig":null,"attributes":[{"value":"/ Thread panicked.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13623,"byte_end":13643,"line_start":197,"line_end":197,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1934},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12238,"byte_end":12243,"line_start":164,"line_end":164,"column_start":10,"column_end":15},"name":"Error","qualname":"::gpio::Error","value":"pub enum Error {\n    UnknownModel,\n    PinNotAvailable(u8),\n    PermissionDenied(String),\n    Io(io::Error),\n    ThreadPanic,\n}","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946}],"decl_id":null,"docs":" Errors that can occur when accessing the GPIO peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the GPIO peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":12150,"byte_end":12211,"line_start":162,"line_end":162,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":674},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14520,"byte_end":14526,"line_start":228,"line_end":228,"column_start":10,"column_end":16},"name":"Result","qualname":"::gpio::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `rppal::gpio::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `rppal::gpio::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14436,"byte_end":14510,"line_start":227,"line_end":227,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1951},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14651,"byte_end":14656,"line_start":234,"line_end":234,"column_start":5,"column_end":10},"name":"Input","qualname":"::gpio::Mode::Input","value":"Mode::Input","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14670,"byte_end":14676,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Output","qualname":"::gpio::Mode::Output","value":"Mode::Output","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1957},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14690,"byte_end":14694,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Alt0","qualname":"::gpio::Mode::Alt0","value":"Mode::Alt0","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1960},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14708,"byte_end":14712,"line_start":237,"line_end":237,"column_start":5,"column_end":9},"name":"Alt1","qualname":"::gpio::Mode::Alt1","value":"Mode::Alt1","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1963},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14726,"byte_end":14730,"line_start":238,"line_end":238,"column_start":5,"column_end":9},"name":"Alt2","qualname":"::gpio::Mode::Alt2","value":"Mode::Alt2","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14744,"byte_end":14748,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Alt3","qualname":"::gpio::Mode::Alt3","value":"Mode::Alt3","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1969},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14762,"byte_end":14766,"line_start":240,"line_end":240,"column_start":5,"column_end":9},"name":"Alt4","qualname":"::gpio::Mode::Alt4","value":"Mode::Alt4","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14780,"byte_end":14784,"line_start":241,"line_end":241,"column_start":5,"column_end":9},"name":"Alt5","qualname":"::gpio::Mode::Alt5","value":"Mode::Alt5","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1950},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14640,"byte_end":14644,"line_start":233,"line_end":233,"column_start":10,"column_end":14},"name":"Mode","qualname":"::gpio::Mode","value":"pub enum Mode {\n    Input = ,\n    Output = ,\n    Alt0 = ,\n    Alt1 = ,\n    Alt2 = ,\n    Alt3 = ,\n    Alt4 = ,\n    Alt5 = ,\n}","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972}],"decl_id":null,"docs":" Pin modes.\n","sig":null,"attributes":[{"value":"/ Pin modes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14559,"byte_end":14573,"line_start":230,"line_end":230,"column_start":1,"column_end":15}},{"value":"repr(u8)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14619,"byte_end":14630,"line_start":232,"line_end":232,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1987},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15390,"byte_end":15393,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Low","qualname":"::gpio::Level::Low","value":"Level::Low","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1990},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15403,"byte_end":15407,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"High","qualname":"::gpio::Level::High","value":"Level::High","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1986},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15378,"byte_end":15383,"line_start":262,"line_end":262,"column_start":10,"column_end":15},"name":"Level","qualname":"::gpio::Level","value":"pub enum Level { Low = , High = , }","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1990}],"decl_id":null,"docs":" Pin logic levels.\n","sig":null,"attributes":[{"value":"/ Pin logic levels.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15290,"byte_end":15311,"line_start":259,"line_end":259,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15357,"byte_end":15368,"line_start":261,"line_end":261,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16118,"byte_end":16121,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"Off","qualname":"::gpio::PullUpDown::Off","value":"PullUpDown::Off","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16134,"byte_end":16142,"line_start":301,"line_end":301,"column_start":5,"column_end":13},"name":"PullDown","qualname":"::gpio::PullUpDown::PullDown","value":"PullUpDown::PullDown","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2011},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16155,"byte_end":16161,"line_start":302,"line_end":302,"column_start":5,"column_end":11},"name":"PullUp","qualname":"::gpio::PullUpDown::PullUp","value":"PullUpDown::PullUp","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2004},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16101,"byte_end":16111,"line_start":299,"line_end":299,"column_start":10,"column_end":20},"name":"PullUpDown","qualname":"::gpio::PullUpDown","value":"pub enum PullUpDown { Off = , PullDown = , PullUp = , }","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011}],"decl_id":null,"docs":" Built-in pull-up/pull-down resistor states.\n","sig":null,"attributes":[{"value":"/ Built-in pull-up/pull-down resistor states.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15999,"byte_end":16046,"line_start":297,"line_end":297,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16577,"byte_end":16585,"line_start":318,"line_end":318,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::gpio::Trigger::Disabled","value":"Trigger::Disabled","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2029},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16595,"byte_end":16605,"line_start":319,"line_end":319,"column_start":5,"column_end":15},"name":"RisingEdge","qualname":"::gpio::Trigger::RisingEdge","value":"Trigger::RisingEdge","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16615,"byte_end":16626,"line_start":320,"line_end":320,"column_start":5,"column_end":16},"name":"FallingEdge","qualname":"::gpio::Trigger::FallingEdge","value":"Trigger::FallingEdge","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2035},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16636,"byte_end":16640,"line_start":321,"line_end":321,"column_start":5,"column_end":9},"name":"Both","qualname":"::gpio::Trigger::Both","value":"Trigger::Both","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2025},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16563,"byte_end":16570,"line_start":317,"line_end":317,"column_start":10,"column_end":17},"name":"Trigger","qualname":"::gpio::Trigger","value":"pub enum Trigger { Disabled = , RisingEdge = , FallingEdge = , Both = , }","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035}],"decl_id":null,"docs":" Interrupt trigger conditions.\n","sig":null,"attributes":[{"value":"/ Interrupt trigger conditions.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16475,"byte_end":16508,"line_start":315,"line_end":315,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":18059,"byte_end":18063,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"Gpio","qualname":"::gpio::Gpio","value":"Gpio {  }","parent":null,"children":[{"krate":0,"index":2061}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's GPIO peripheral.\n","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's GPIO peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":17965,"byte_end":18023,"line_start":362,"line_end":362,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":18152,"byte_end":18155,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<Gpio>::new","value":"pub fn new() -> Result<Gpio>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Gpio`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Gpio`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":18112,"byte_end":18140,"line_start":369,"line_end":369,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20006,"byte_end":20009,"line_start":414,"line_end":414,"column_start":12,"column_end":15},"name":"get","qualname":"<Gpio>::get","value":"pub fn get(&Self, u8) -> Result<Pin>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Pin`] for the specified BCM GPIO pin number.","sig":null,"attributes":[{"value":"/ Returns a [`Pin`] for the specified BCM GPIO pin number.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19265,"byte_end":19325,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19330,"byte_end":19333,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Retrieving a GPIO pin grants access to the pin through an owned [`Pin`] instance.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19338,"byte_end":19423,"line_start":403,"line_end":403,"column_start":5,"column_end":90}},{"value":"/ If the pin is already in use, or the GPIO peripheral doesn't expose a pin with the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19428,"byte_end":19514,"line_start":404,"line_end":404,"column_start":5,"column_end":91}},{"value":"/ specified number, `get` returns `Err(`[`Error::PinNotAvailable`]`)`. After a [`Pin`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19519,"byte_end":19607,"line_start":405,"line_end":405,"column_start":5,"column_end":93}},{"value":"/ (or a derived [`InputPin`], [`OutputPin`] or [`IoPin`]) goes out of scope, it","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19612,"byte_end":19693,"line_start":406,"line_end":406,"column_start":5,"column_end":86}},{"value":"/ can be retrieved again through another `get` call.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19698,"byte_end":19752,"line_start":407,"line_end":407,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19757,"byte_end":19760,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [`Pin`]: struct.Pin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19765,"byte_end":19793,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19798,"byte_end":19836,"line_start":410,"line_end":410,"column_start":5,"column_end":43}},{"value":"/ [`OutputPin`]: struct.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19841,"byte_end":19881,"line_start":411,"line_end":411,"column_start":5,"column_end":45}},{"value":"/ [`IoPin`]: struct.IoPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19886,"byte_end":19918,"line_start":412,"line_end":412,"column_start":5,"column_end":37}},{"value":"/ [`Error::PinNotAvailable`]: enum.Error.html#variant.PinNotAvailable","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":19923,"byte_end":19994,"line_start":413,"line_end":413,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22420,"byte_end":22435,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"poll_interrupts","qualname":"<Gpio>::poll_interrupts","value":"pub fn poll_interrupts<'a>(&Self, &[&'a InputPin], bool, Option<Duration>)\n-> Result<Option<(&'a InputPin, Level)>>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until an interrupt is triggered on any of the specified pins, or until a timeout occurs.","sig":null,"attributes":[{"value":"/ Blocks until an interrupt is triggered on any of the specified pins, or until a timeout occurs.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20598,"byte_end":20697,"line_start":432,"line_end":432,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20702,"byte_end":20705,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Only pins that have been previously configured for synchronous interrupts using [`InputPin::set_interrupt`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20710,"byte_end":20821,"line_start":434,"line_end":434,"column_start":5,"column_end":116}},{"value":"/ can be polled. Asynchronous interrupt triggers are automatically polled on a separate thread.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20826,"byte_end":20923,"line_start":435,"line_end":435,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20928,"byte_end":20931,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Calling `poll_interrupts` blocks any other calls to `poll_interrupts` or [`InputPin::poll_interrupt`] until","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":20936,"byte_end":21047,"line_start":437,"line_end":437,"column_start":5,"column_end":116}},{"value":"/ it returns. If you need to poll multiple pins simultaneously on different threads, consider using","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21052,"byte_end":21153,"line_start":438,"line_end":438,"column_start":5,"column_end":106}},{"value":"/ asynchronous interrupts with [`InputPin::set_async_interrupt`] instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21158,"byte_end":21233,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21238,"byte_end":21241,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Setting `reset` to `false` returns any cached interrupt trigger events if available. Setting `reset` to `true`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21246,"byte_end":21360,"line_start":441,"line_end":441,"column_start":5,"column_end":119}},{"value":"/ clears all cached events before polling for new events.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21365,"byte_end":21424,"line_start":442,"line_end":442,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21429,"byte_end":21432,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The `timeout` duration indicates how long the call to `poll_interrupts` will block while waiting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21437,"byte_end":21537,"line_start":444,"line_end":444,"column_start":5,"column_end":105}},{"value":"/ for interrupt trigger events, after which an `Ok(None)` is returned.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21542,"byte_end":21614,"line_start":445,"line_end":445,"column_start":5,"column_end":77}},{"value":"/ `timeout` can be set to `None` to wait indefinitely.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21619,"byte_end":21675,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21680,"byte_end":21683,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ When an interrupt event is triggered, `poll_interrupts` returns","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21688,"byte_end":21755,"line_start":448,"line_end":448,"column_start":5,"column_end":72}},{"value":"/ `Ok((&`[`InputPin`]`, `[`Level`]`))` containing the corresponding pin and logic level. If multiple events trigger","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21760,"byte_end":21877,"line_start":449,"line_end":449,"column_start":5,"column_end":122}},{"value":"/ at the same time, only the first one is returned. The remaining events are cached and will be returned","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21882,"byte_end":21988,"line_start":450,"line_end":450,"column_start":5,"column_end":111}},{"value":"/ the next time [`InputPin::poll_interrupt`] or `poll_interrupts` is called.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":21993,"byte_end":22071,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22076,"byte_end":22079,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`InputPin::set_interrupt`]: struct.InputPin.html#method.set_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22084,"byte_end":22158,"line_start":453,"line_end":453,"column_start":5,"column_end":79}},{"value":"/ [`InputPin::poll_interrupt`]: struct.InputPin.html#method.poll_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22163,"byte_end":22239,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ [`InputPin::set_async_interrupt`]: struct.InputPin.html#method.set_async_interrupt","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22244,"byte_end":22330,"line_start":455,"line_end":455,"column_start":5,"column_end":91}},{"value":"/ [`InputPin`]: struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22335,"byte_end":22373,"line_start":456,"line_end":456,"column_start":5,"column_end":43}},{"value":"/ [`Level`]: enum.Level.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":22378,"byte_end":22408,"line_start":457,"line_end":457,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":869},{"krate":0,"index":2162},{"krate":0,"index":2173},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":2175},{"krate":0,"index":2182},{"krate":0,"index":881},{"krate":0,"index":912}],"decl_id":null,"docs":" Interface for the I2C peripheral.","sig":null,"attributes":[{"value":"/ Interface for the I2C peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97598,"byte_end":97635,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97636,"byte_end":97639,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The Broadcom Serial Controller (BSC) peripheral controls a proprietary bus","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97640,"byte_end":97718,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ compliant with the I2C bus/interface. RPPAL communicates with the BSC","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97719,"byte_end":97792,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ using the `i2cdev` device interface.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97793,"byte_end":97833,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97834,"byte_end":97837,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## I2C buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97838,"byte_end":97854,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97855,"byte_end":97858,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi 3 B+ and earlier models support three hardware I2C buses,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97859,"byte_end":97937,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ however only the I2C bus on physical pins 3 and 5 should be used to communicate","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":97938,"byte_end":98021,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ with slave devices. The other two buses are used internally as an HDMI","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98022,"byte_end":98096,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ interface, and for HAT identification.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98097,"byte_end":98139,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98140,"byte_end":98143,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ On the Raspberry Pi 4 B and 400, three additional I2C buses are available,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98144,"byte_end":98222,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ depending on your configuration, as explained below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98223,"byte_end":98279,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98280,"byte_end":98283,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ### I2C0 / I2C1","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98284,"byte_end":98303,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98304,"byte_end":98307,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ On the Raspberry Pi B Rev 1, physical pins 3 (SDA) and 5 (SCL) are tied to I2C0.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98308,"byte_end":98392,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ On every other Raspberry Pi model, they're connected to I2C1.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98393,"byte_end":98458,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98459,"byte_end":98462,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The I2C bus connected to these pins is disabled by","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98463,"byte_end":98517,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ default. You can enable it through `sudo raspi-config`, or by manually","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98518,"byte_end":98592,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ adding `dtparam=i2c_arm=on` to `/boot/config.txt`. Remember to reboot","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98593,"byte_end":98666,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ the Raspberry Pi afterwards.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98667,"byte_end":98699,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98700,"byte_end":98703,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ * SDA: BCM GPIO 2 (physical pin 3)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98704,"byte_end":98742,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ * SCL: BCM GPIO 3 (physical pin 5)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98743,"byte_end":98781,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98782,"byte_end":98785,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ### I2C3","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98786,"byte_end":98798,"line_start":50,"line_end":50,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98799,"byte_end":98802,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ I2C3 can be enabled by adding `dtoverlay=i2c3` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98803,"byte_end":98876,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98877,"byte_end":98880,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ * SDA: BCM GPIO 4 (physical pin 7)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98881,"byte_end":98919,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ * SCL: BCM GPIO 5 (physical pin 29)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98920,"byte_end":98959,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98960,"byte_end":98963,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ### I2C4","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98964,"byte_end":98976,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98977,"byte_end":98980,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ I2C4 can be enabled by adding `dtoverlay=i2c4` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":98981,"byte_end":99054,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99055,"byte_end":99058,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ * SDA: BCM GPIO 8 (physical pin 24)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99059,"byte_end":99098,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ * SCL: BCM GPIO 9 (physical pin 21)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99099,"byte_end":99138,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99139,"byte_end":99142,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### I2C5","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99143,"byte_end":99155,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99156,"byte_end":99159,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ I2C5 can be enabled by adding `dtoverlay=i2c5` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99160,"byte_end":99233,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99234,"byte_end":99237,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * SDA: BCM GPIO 12 (physical pin 32)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99238,"byte_end":99278,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ * SCL: BCM GPIO 13 (physical pin 33)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99279,"byte_end":99319,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99320,"byte_end":99323,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ### I2C6","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99324,"byte_end":99336,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99337,"byte_end":99340,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ I2C6 can be enabled by adding `dtoverlay=i2c6` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99341,"byte_end":99414,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99415,"byte_end":99418,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * SDA: BCM GPIO 22 (physical pin 15)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99419,"byte_end":99459,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/ * SCL: BCM GPIO 23 (physical pin 16)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99460,"byte_end":99500,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99501,"byte_end":99504,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Alternative pins","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99505,"byte_end":99529,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99530,"byte_end":99533,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The GPIO pin numbers mentioned above are part of the default configuration.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99534,"byte_end":99613,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ Some of their functionality can be moved to different pins. Read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99614,"byte_end":99682,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ `/boot/overlays/README` for more information.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99683,"byte_end":99732,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99733,"byte_end":99736,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ### Software I2C","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99737,"byte_end":99757,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99758,"byte_end":99761,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ In addition to the hardware I2C buses, it's possible to configure a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99762,"byte_end":99833,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/ bit-banged software I2C bus on any available GPIO pins through the `i2c-gpio`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99834,"byte_end":99915,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/ device tree overlay. More details on enabling and configuring `i2c-gpio`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99916,"byte_end":99992,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ can be found in `/boot/overlays/README`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":99993,"byte_end":100037,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100038,"byte_end":100041,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## Transmission speed","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100042,"byte_end":100067,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100068,"byte_end":100071,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The BSC supports I2C data transfer rates up to 400 kbit/s (Fast-mode).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100072,"byte_end":100146,"line_start":93,"line_end":93,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100147,"byte_end":100150,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ By default, the I2C bus clock speed is set to 100 kHz. Transferring","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100151,"byte_end":100222,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ 1 bit takes 1 clock cycle. You can change the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100223,"byte_end":100272,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/ transfer rate by adding `dtparam=i2c_arm_baudrate=X` to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100273,"byte_end":100332,"line_start":97,"line_end":97,"column_start":1,"column_end":60}},{"value":"/ `/boot/config.txt`, where `X` should be replaced with the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100333,"byte_end":100394,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/ clock frequency in hertz (Hz). Remember to reboot","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100395,"byte_end":100448,"line_start":99,"line_end":99,"column_start":1,"column_end":54}},{"value":"/ the Raspberry Pi afterwards.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100449,"byte_end":100481,"line_start":100,"line_end":100,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100482,"byte_end":100485,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Not supported","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100486,"byte_end":100506,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100507,"byte_end":100510,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Some I2C and SMBus features aren't fully supported by the `i2cdev` interface, the underlying driver or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100511,"byte_end":100617,"line_start":104,"line_end":104,"column_start":1,"column_end":107}},{"value":"/ the BCM283x SoC: 10-bit slave addresses, SMBus Block Read, SMBus Block Process Call, SMBus Host Notify,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100618,"byte_end":100725,"line_start":105,"line_end":105,"column_start":1,"column_end":108}},{"value":"/ SMBus Read/Write 32/64, and the SMBus Address Resolution Protocol.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100726,"byte_end":100796,"line_start":106,"line_end":106,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100797,"byte_end":100800,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ While clock stretching is supported, a bug exists in the implementation on the BCM283x SoC that will result","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100801,"byte_end":100912,"line_start":108,"line_end":108,"column_start":1,"column_end":112}},{"value":"/ in corrupted data when a slave device uses clock stretching at arbitrary points during the transfer.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":100913,"byte_end":101017,"line_start":109,"line_end":109,"column_start":1,"column_end":105}},{"value":"/ Clock stretching only works properly during read operations, directly after the ACK phase, when the additional","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101018,"byte_end":101132,"line_start":110,"line_end":110,"column_start":1,"column_end":115}},{"value":"/ delay is longer than half of a clock period. More information can be found [here](https://elinux.org/BCM2835_datasheet_errata#p35_I2C_clock_stretching).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101133,"byte_end":101289,"line_start":111,"line_end":111,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101290,"byte_end":101293,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A possible workaround for slave devices that require clock stretching at other points during the transfer is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101294,"byte_end":101406,"line_start":113,"line_end":113,"column_start":1,"column_end":113}},{"value":"/ to use a bit-banged software I2C bus by configuring the `i2c-gpio` device tree overlay as described in `/boot/overlays/README`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101407,"byte_end":101538,"line_start":114,"line_end":114,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101539,"byte_end":101542,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Troubleshooting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101543,"byte_end":101565,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101566,"byte_end":101569,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ### Permission denied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101570,"byte_end":101595,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101596,"byte_end":101599,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ If [`new`] or [`with_bus`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101600,"byte_end":101675,"line_start":120,"line_end":120,"column_start":1,"column_end":76}},{"value":"/ error, make sure the file permissions for `/dev/i2c-1` or `/dev/i2c-0`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101676,"byte_end":101750,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ are correct, and the current user is a member of the `i2c` group.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101751,"byte_end":101820,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101821,"byte_end":101824,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ### Timed out","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101825,"byte_end":101842,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101843,"byte_end":101846,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Transactions return an `io::ErrorKind::TimedOut` error when their duration","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101847,"byte_end":101925,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ exceeds the timeout value. You can change the timeout using [`set_timeout`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":101926,"byte_end":102006,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102007,"byte_end":102010,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`new`]: struct.I2c.html#method.new","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102011,"byte_end":102050,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ [`with_bus`]: struct.I2c.html#method.with_bus","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102051,"byte_end":102100,"line_start":130,"line_end":130,"column_start":1,"column_end":50}},{"value":"/ [`set_timeout`]: struct.I2c.html#method.set_timeout","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102101,"byte_end":102156,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"allow(dead_code)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102158,"byte_end":102178,"line_start":133,"line_end":133,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127099,"byte_end":127111,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::i2c::ioctl::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":2076}],"decl_id":null,"docs":" Lists the features supported by the underlying drivers.\n","sig":null,"attributes":[{"value":"/ Lists the features supported by the underlying drivers.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":126994,"byte_end":127053,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127645,"byte_end":127655,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"addr_10bit","qualname":"<Capabilities>::addr_10bit","value":"pub fn addr_10bit(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether 10-bit addresses are supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether 10-bit addresses are supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127580,"byte_end":127633,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127788,"byte_end":127802,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"i2c_block_read","qualname":"<Capabilities>::i2c_block_read","value":"pub fn i2c_block_read(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether I2C Block Read is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether I2C Block Read is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127726,"byte_end":127776,"line_start":88,"line_end":88,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127946,"byte_end":127961,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"i2c_block_write","qualname":"<Capabilities>::i2c_block_write","value":"pub fn i2c_block_write(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether I2C Block Write is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether I2C Block Write is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127883,"byte_end":127934,"line_start":93,"line_end":93,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128423,"byte_end":128442,"line_start":109,"line_end":109,"column_start":12,"column_end":31},"name":"smbus_quick_command","qualname":"<Capabilities>::smbus_quick_command","value":"pub fn smbus_quick_command(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Quick Command is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Quick Command is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128356,"byte_end":128411,"line_start":108,"line_end":108,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128580,"byte_end":128598,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"smbus_receive_byte","qualname":"<Capabilities>::smbus_receive_byte","value":"pub fn smbus_receive_byte(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Receive Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Receive Byte is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128514,"byte_end":128568,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128737,"byte_end":128752,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"smbus_send_byte","qualname":"<Capabilities>::smbus_send_byte","value":"pub fn smbus_send_byte(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Send Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Send Byte is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128674,"byte_end":128725,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128892,"byte_end":128907,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"smbus_read_byte","qualname":"<Capabilities>::smbus_read_byte","value":"pub fn smbus_read_byte(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Read Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Read Byte is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128829,"byte_end":128880,"line_start":123,"line_end":123,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129052,"byte_end":129068,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"smbus_write_byte","qualname":"<Capabilities>::smbus_write_byte","value":"pub fn smbus_write_byte(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Write Byte is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Write Byte is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":128988,"byte_end":129040,"line_start":128,"line_end":128,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129213,"byte_end":129228,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"smbus_read_word","qualname":"<Capabilities>::smbus_read_word","value":"pub fn smbus_read_word(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Read Word is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Read Word is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129150,"byte_end":129201,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129373,"byte_end":129389,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"smbus_write_word","qualname":"<Capabilities>::smbus_write_word","value":"pub fn smbus_write_word(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Write Word is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Write Word is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129309,"byte_end":129361,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129537,"byte_end":129555,"line_start":144,"line_end":144,"column_start":12,"column_end":30},"name":"smbus_process_call","qualname":"<Capabilities>::smbus_process_call","value":"pub fn smbus_process_call(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Process Call is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Process Call is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129471,"byte_end":129525,"line_start":143,"line_end":143,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129695,"byte_end":129711,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"smbus_block_read","qualname":"<Capabilities>::smbus_block_read","value":"pub fn smbus_block_read(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Read is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Read is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129631,"byte_end":129683,"line_start":148,"line_end":148,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129858,"byte_end":129875,"line_start":154,"line_end":154,"column_start":12,"column_end":29},"name":"smbus_block_write","qualname":"<Capabilities>::smbus_block_write","value":"pub fn smbus_block_write(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Write is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Write is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129793,"byte_end":129846,"line_start":153,"line_end":153,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130030,"byte_end":130054,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"smbus_block_process_call","qualname":"<Capabilities>::smbus_block_process_call","value":"pub fn smbus_block_process_call(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Block Process Call is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Block Process Call is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":129958,"byte_end":130018,"line_start":158,"line_end":158,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130211,"byte_end":130220,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"smbus_pec","qualname":"<Capabilities>::smbus_pec","value":"pub fn smbus_pec(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Packet Error Checking is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Packet Error Checking is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130136,"byte_end":130199,"line_start":163,"line_end":163,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130355,"byte_end":130372,"line_start":169,"line_end":169,"column_start":12,"column_end":29},"name":"smbus_host_notify","qualname":"<Capabilities>::smbus_host_notify","value":"pub fn smbus_host_notify(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether SMBus Host Notify is supported.\n","sig":null,"attributes":[{"value":"/ Indicates whether SMBus Host Notify is supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130290,"byte_end":130343,"line_start":168,"line_end":168,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102644,"byte_end":102646,"line_start":159,"line_end":159,"column_start":5,"column_end":7},"name":"Io","qualname":"::i2c::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102625,"byte_end":102639,"line_start":158,"line_end":158,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2166},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102817,"byte_end":102836,"line_start":164,"line_end":164,"column_start":5,"column_end":24},"name":"InvalidSlaveAddress","qualname":"::i2c::Error::InvalidSlaveAddress","value":"Error::InvalidSlaveAddress(u16)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" Invalid slave address.","sig":null,"attributes":[{"value":"/ Invalid slave address.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102663,"byte_end":102689,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102694,"byte_end":102697,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ I2C supports 7-bit and 10-bit addresses. Several 7-bit addresses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102702,"byte_end":102770,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ can't be used as slave addresses.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102775,"byte_end":102812,"line_start":163,"line_end":163,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2169},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102985,"byte_end":103004,"line_start":168,"line_end":168,"column_start":5,"column_end":24},"name":"FeatureNotSupported","qualname":"::i2c::Error::FeatureNotSupported","value":"Error::FeatureNotSupported","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" I2C/SMBus feature not supported.","sig":null,"attributes":[{"value":"/ I2C/SMBus feature not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102847,"byte_end":102883,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102888,"byte_end":102891,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The underlying drivers don't support the selected I2C feature or SMBus protocol.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102896,"byte_end":102980,"line_start":167,"line_end":167,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2171},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103490,"byte_end":103502,"line_start":179,"line_end":179,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::i2c::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103010,"byte_end":103028,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103033,"byte_end":103036,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi model or SoC can't be identified. Support for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103041,"byte_end":103107,"line_start":171,"line_end":171,"column_start":5,"column_end":71}},{"value":"/ new models is usually added shortly after they are officially","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103112,"byte_end":103177,"line_start":172,"line_end":172,"column_start":5,"column_end":70}},{"value":"/ announced and available to the public. Make sure you're using","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103182,"byte_end":103247,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/ the latest release of RPPAL.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103252,"byte_end":103284,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103289,"byte_end":103292,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103297,"byte_end":103361,"line_start":176,"line_end":176,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103366,"byte_end":103432,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103437,"byte_end":103485,"line_start":178,"line_end":178,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2162},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102613,"byte_end":102618,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"pub enum Error {\n    Io(io::Error),\n    InvalidSlaveAddress(u16),\n    FeatureNotSupported,\n    UnknownModel,\n}","parent":null,"children":[{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2171}],"decl_id":null,"docs":" Errors that can occur when accessing the I2C peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the I2C peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":102526,"byte_end":102586,"line_start":155,"line_end":155,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":879},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104302,"byte_end":104308,"line_start":208,"line_end":208,"column_start":10,"column_end":16},"name":"Result","qualname":"::i2c::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `i2c::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `i2c::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104226,"byte_end":104292,"line_start":207,"line_end":207,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105515,"byte_end":105518,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's I2C peripheral.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's I2C peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104341,"byte_end":104398,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104399,"byte_end":104402,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Before using `I2c`, make sure your Raspberry Pi has the necessary I2C buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104403,"byte_end":104482,"line_start":212,"line_end":212,"column_start":1,"column_end":80}},{"value":"/ enabled. More information can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104483,"byte_end":104533,"line_start":213,"line_end":213,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104534,"byte_end":104537,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Besides basic I2C communication through buffer reads and writes, `I2c` can","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104538,"byte_end":104616,"line_start":215,"line_end":215,"column_start":1,"column_end":79}},{"value":"/ also be used with devices that require SMBus (System Management Bus) support.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104617,"byte_end":104698,"line_start":216,"line_end":216,"column_start":1,"column_end":82}},{"value":"/ SMBus is based on I2C, and defines more structured message transactions","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104699,"byte_end":104774,"line_start":217,"line_end":217,"column_start":1,"column_end":76}},{"value":"/ through its various protocols. More details can be found in the latest SMBus","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104775,"byte_end":104855,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/ [specification].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104856,"byte_end":104876,"line_start":219,"line_end":219,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104877,"byte_end":104880,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`blocking::i2c::Read`], [`blocking::i2c::Write`] and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104881,"byte_end":104957,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ [`blocking::i2c::WriteRead`] trait implementations for `I2c` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104958,"byte_end":105037,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ by specifying the optional `hal`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105038,"byte_end":105074,"line_start":223,"line_end":223,"column_start":1,"column_end":37}},{"value":"/ feature in the dependency declaration for the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105075,"byte_end":105139,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105140,"byte_end":105143,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105144,"byte_end":105176,"line_start":226,"line_end":226,"column_start":1,"column_end":33}},{"value":"/ [specification]: http://smbus.org/specs/SMBus_3_1_20180319.pdf","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105177,"byte_end":105243,"line_start":227,"line_end":227,"column_start":1,"column_end":67}},{"value":"/ [`blocking::i2c::Read`]: ../../embedded_hal/blocking/i2c/trait.Read.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105244,"byte_end":105320,"line_start":228,"line_end":228,"column_start":1,"column_end":77}},{"value":"/ [`blocking::i2c::Write`]: ../../embedded_hal/blocking/i2c/trait.Write.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105321,"byte_end":105399,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ [`blocking::i2c::WriteRead`]: ../../embedded_hal/blocking/i2c/trait.WriteRead.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105400,"byte_end":105486,"line_start":230,"line_end":230,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106217,"byte_end":106220,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<I2c>::new","value":"pub fn new() -> Result<I2c>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `I2c`.","sig":null,"attributes":[{"value":"/ Constructs a new `I2c`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105906,"byte_end":105933,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105938,"byte_end":105941,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify which I2C bus is bound to physical pins 3 (SDA)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105946,"byte_end":106024,"line_start":247,"line_end":247,"column_start":5,"column_end":83}},{"value":"/ and 5 (SCL) based on the Raspberry Pi model.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106029,"byte_end":106077,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106082,"byte_end":106085,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ More information on configuring the I2C buses can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106090,"byte_end":106160,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106165,"byte_end":106168,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106173,"byte_end":106205,"line_start":252,"line_end":252,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107250,"byte_end":107258,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"with_bus","qualname":"<I2c>::with_bus","value":"pub fn with_bus(u8) -> Result<I2c>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `I2c` using the specified bus.","sig":null,"attributes":[{"value":"/ Constructs a new `I2c` using the specified bus.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106692,"byte_end":106743,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106748,"byte_end":106751,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ `bus` indicates the selected I2C bus. You'll typically want to select the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106756,"byte_end":106833,"line_start":268,"line_end":268,"column_start":5,"column_end":82}},{"value":"/ bus that's bound to physical pins 3 (SDA) and 5 (SCL). On the Raspberry","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106838,"byte_end":106913,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ Pi B Rev 1, those pins are tied to bus 0. On every other Raspberry","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106918,"byte_end":106988,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ Pi model, they're connected to bus 1. Additional I2C buses are available","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":106993,"byte_end":107069,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ on the Raspberry Pi 4 B and 400.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107074,"byte_end":107110,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107115,"byte_end":107118,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ More information on configuring the I2C buses can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107123,"byte_end":107193,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107198,"byte_end":107201,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#i2c-buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":107206,"byte_end":107238,"line_start":276,"line_end":276,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108379,"byte_end":108391,"line_start":313,"line_end":313,"column_start":12,"column_end":24},"name":"capabilities","qualname":"<I2c>::capabilities","value":"pub fn capabilities(&Self) -> Capabilities","parent":null,"children":[],"decl_id":null,"docs":" Returns information on the functionality supported by the underlying drivers.","sig":null,"attributes":[{"value":"/ Returns information on the functionality supported by the underlying drivers.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108120,"byte_end":108201,"line_start":307,"line_end":307,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108206,"byte_end":108209,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The returned [`Capabilities`] instance lists the available","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108214,"byte_end":108276,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/ I2C and SMBus features.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108281,"byte_end":108308,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108313,"byte_end":108316,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`Capabilities`]: struct.Capabilities.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108321,"byte_end":108367,"line_start":312,"line_end":312,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108486,"byte_end":108489,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"bus","qualname":"<I2c>::bus","value":"pub fn bus(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the I2C bus ID.\n","sig":null,"attributes":[{"value":"/ Returns the I2C bus ID.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108447,"byte_end":108474,"line_start":317,"line_end":317,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108591,"byte_end":108602,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<I2c>::clock_speed","value":"pub fn clock_speed(&Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the clock frequency in hertz (Hz).\n","sig":null,"attributes":[{"value":"/ Returns the clock frequency in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":108533,"byte_end":108579,"line_start":322,"line_end":322,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109616,"byte_end":109633,"line_start":350,"line_end":350,"column_start":12,"column_end":29},"name":"set_slave_address","qualname":"<I2c>::set_slave_address","value":"pub fn set_slave_address(&mut Self, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a 7-bit or 10-bit slave address.","sig":null,"attributes":[{"value":"/ Sets a 7-bit or 10-bit slave address.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109001,"byte_end":109042,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109047,"byte_end":109050,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ `slave_address` refers to the slave device you're communicating with.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109055,"byte_end":109128,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ The specified address shouldn't include the R/W bit.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109133,"byte_end":109189,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109194,"byte_end":109197,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ By default, 10-bit addressing is disabled, which means","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109202,"byte_end":109260,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ `set_slave_address` only accepts 7-bit addresses. 10-bit addressing","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109265,"byte_end":109336,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ can be enabled with [`set_addr_10bit`]. Note that setting a 7-bit","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109341,"byte_end":109410,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ address when 10-bit addressing is enabled won't correctly target a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109415,"byte_end":109485,"line_start":346,"line_end":346,"column_start":5,"column_end":75}},{"value":"/ slave device that doesn't support 10-bit addresses.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109490,"byte_end":109545,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109550,"byte_end":109553,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`set_addr_10bit`]: #method.set_addr_10bit","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":109558,"byte_end":109604,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110374,"byte_end":110385,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"set_timeout","qualname":"<I2c>::set_timeout","value":"pub fn set_timeout(&Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum duration of a transaction in milliseconds (ms).","sig":null,"attributes":[{"value":"/ Sets the maximum duration of a transaction in milliseconds (ms).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110130,"byte_end":110198,"line_start":365,"line_end":365,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110203,"byte_end":110206,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Transactions that take longer than `timeout` return an","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110211,"byte_end":110269,"line_start":367,"line_end":367,"column_start":5,"column_end":63}},{"value":"/ `io::ErrorKind::TimedOut` error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110274,"byte_end":110310,"line_start":368,"line_end":368,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110315,"byte_end":110318,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ `timeout` has a resolution of 10ms.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110323,"byte_end":110362,"line_start":370,"line_end":370,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111304,"byte_end":111318,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"set_addr_10bit","qualname":"<I2c>::set_addr_10bit","value":"pub fn set_addr_10bit(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables 10-bit addressing.","sig":null,"attributes":[{"value":"/ Enables or disables 10-bit addressing.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110898,"byte_end":110940,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110945,"byte_end":110948,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ 10-bit addressing currently isn't supported on the Raspberry Pi. `set_addr_10bit` returns","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":110953,"byte_end":111046,"line_start":388,"line_end":388,"column_start":5,"column_end":98}},{"value":"/ `Err(`[`Error::FeatureNotSupported`]`)` unless underlying driver support is detected.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111051,"byte_end":111140,"line_start":389,"line_end":389,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111145,"byte_end":111148,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ By default, `addr_10bit` is set to `false`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111153,"byte_end":111200,"line_start":391,"line_end":391,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111205,"byte_end":111208,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ [`Error::FeatureNotSupported`]: enum.Error.html#variant.FeatureNotSupported","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111213,"byte_end":111292,"line_start":393,"line_end":393,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111907,"byte_end":111911,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"read","qualname":"<I2c>::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the slave device and writes it to `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the slave device and writes it to `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111620,"byte_end":111695,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111700,"byte_end":111703,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ `read` reads as many bytes as can fit in `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111708,"byte_end":111762,"line_start":408,"line_end":408,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111767,"byte_end":111770,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111775,"byte_end":111845,"line_start":410,"line_end":410,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111850,"byte_end":111853,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":111858,"byte_end":111895,"line_start":412,"line_end":412,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112229,"byte_end":112234,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"write","qualname":"<I2c>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `buffer` to the slave device.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `buffer` to the slave device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112010,"byte_end":112080,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112085,"byte_end":112088,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112093,"byte_end":112164,"line_start":419,"line_end":419,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112169,"byte_end":112172,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112177,"byte_end":112217,"line_start":421,"line_end":421,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113081,"byte_end":113091,"line_start":441,"line_end":441,"column_start":12,"column_end":22},"name":"write_read","qualname":"<I2c>::write_read","value":"pub fn write_read(&Self, &[u8], &mut [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `write_buffer` to the slave device, and\n then fills `read_buffer` with incoming data.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `write_buffer` to the slave device, and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112330,"byte_end":112410,"line_start":426,"line_end":426,"column_start":5,"column_end":85}},{"value":"/ then fills `read_buffer` with incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112415,"byte_end":112463,"line_start":427,"line_end":427,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112468,"byte_end":112471,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Compared to calling [`write`] and [`read`] separately, `write_read` doesn't","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112476,"byte_end":112555,"line_start":429,"line_end":429,"column_start":5,"column_end":84}},{"value":"/ issue a STOP condition in between the write and read operation. A repeated","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112560,"byte_end":112638,"line_start":430,"line_end":430,"column_start":5,"column_end":83}},{"value":"/ START is sent instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112643,"byte_end":112669,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112674,"byte_end":112677,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ `write_read` reads as many bytes as can fit in `read_buffer`. The maximum","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112682,"byte_end":112759,"line_start":433,"line_end":433,"column_start":5,"column_end":82}},{"value":"/ number of bytes in either `write_buffer` or `read_buffer` can't exceed 8192.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112764,"byte_end":112844,"line_start":434,"line_end":434,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112849,"byte_end":112852,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Bytes → Repeated START →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112857,"byte_end":112942,"line_start":436,"line_end":436,"column_start":5,"column_end":82}},{"value":"/ Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":112947,"byte_end":112997,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113002,"byte_end":113005,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113010,"byte_end":113038,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113043,"byte_end":113069,"line_start":440,"line_end":440,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114058,"byte_end":114068,"line_start":467,"line_end":467,"column_start":12,"column_end":22},"name":"block_read","qualname":"<I2c>::block_read","value":"pub fn block_read(&Self, u8, &mut [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and then fills a multi-byte `buffer` with\n incoming data.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and then fills a multi-byte `buffer` with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113373,"byte_end":113444,"line_start":453,"line_end":453,"column_start":5,"column_end":76}},{"value":"/ incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113449,"byte_end":113467,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113472,"byte_end":113475,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ `block_read` can read a maximum of 32 bytes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113480,"byte_end":113528,"line_start":456,"line_end":456,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113533,"byte_end":113536,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Although `block_read` isn't part of the SMBus protocol, it uses the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113541,"byte_end":113612,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ SMBus functionality to offer this commonly used I2C transaction format.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113617,"byte_end":113692,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ The difference between `block_read` and [`smbus_block_read`] is that the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113697,"byte_end":113773,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/ latter also expects a byte count from the slave device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113778,"byte_end":113837,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113842,"byte_end":113845,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113850,"byte_end":113924,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113929,"byte_end":113983,"line_start":464,"line_end":464,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113988,"byte_end":113991,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ [`smbus_block_read`]: #method.smbus_block_read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":113996,"byte_end":114046,"line_start":466,"line_end":466,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114894,"byte_end":114905,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"block_write","qualname":"<I2c>::block_write","value":"pub fn block_write(&Self, u8, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` followed by a multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` followed by a multi-byte `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114225,"byte_end":114288,"line_start":473,"line_end":473,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114293,"byte_end":114296,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ `block_write` can write a maximum of 32 bytes. Any additional data contained","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114301,"byte_end":114381,"line_start":475,"line_end":475,"column_start":5,"column_end":85}},{"value":"/ in `buffer` is ignored.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114386,"byte_end":114413,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114418,"byte_end":114421,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Although `block_write` isn't part of the SMBus protocol, it uses the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114426,"byte_end":114498,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ SMBus functionality to offer this commonly used I2C transaction format. The","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114503,"byte_end":114582,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ difference between `block_write` and [`smbus_block_write`] is that the latter","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114587,"byte_end":114668,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ also sends a byte count to the slave device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114673,"byte_end":114721,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114726,"byte_end":114729,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114734,"byte_end":114817,"line_start":483,"line_end":483,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114822,"byte_end":114825,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [`smbus_block_write`]: #method.smbus_block_write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":114830,"byte_end":114882,"line_start":485,"line_end":485,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115338,"byte_end":115357,"line_start":498,"line_end":498,"column_start":12,"column_end":31},"name":"smbus_quick_command","qualname":"<I2c>::smbus_quick_command","value":"pub fn smbus_quick_command(&Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a 1-bit `command` in place of the R/W bit.","sig":null,"attributes":[{"value":"/ Sends a 1-bit `command` in place of the R/W bit.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115207,"byte_end":115259,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115264,"byte_end":115267,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Command Bit → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115272,"byte_end":115326,"line_start":497,"line_end":497,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115616,"byte_end":115634,"line_start":507,"line_end":507,"column_start":12,"column_end":30},"name":"smbus_receive_byte","qualname":"<I2c>::smbus_receive_byte","value":"pub fn smbus_receive_byte(&Self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Receives an 8-bit value.","sig":null,"attributes":[{"value":"/ Receives an 8-bit value.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115494,"byte_end":115522,"line_start":504,"line_end":504,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115527,"byte_end":115530,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Read Bit → Incoming Byte → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115535,"byte_end":115604,"line_start":506,"line_end":506,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115855,"byte_end":115870,"line_start":514,"line_end":514,"column_start":12,"column_end":27},"name":"smbus_send_byte","qualname":"<I2c>::smbus_send_byte","value":"pub fn smbus_send_byte(&Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `value`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115733,"byte_end":115760,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115765,"byte_end":115768,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Outgoing Byte → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115773,"byte_end":115843,"line_start":513,"line_end":513,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116212,"byte_end":116227,"line_start":524,"line_end":524,"column_start":12,"column_end":27},"name":"smbus_read_byte","qualname":"<I2c>::smbus_read_byte","value":"pub fn smbus_read_byte(&Self, u8) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives an 8-bit value.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives an 8-bit value.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":115997,"byte_end":116055,"line_start":520,"line_end":520,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116060,"byte_end":116063,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116068,"byte_end":116142,"line_start":522,"line_end":522,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116147,"byte_end":116200,"line_start":523,"line_end":523,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116502,"byte_end":116518,"line_start":531,"line_end":531,"column_start":12,"column_end":28},"name":"smbus_write_byte","qualname":"<I2c>::smbus_write_byte","value":"pub fn smbus_write_byte(&Self, u8, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and an 8-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and an 8-bit `value`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116345,"byte_end":116395,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116400,"byte_end":116403,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116408,"byte_end":116490,"line_start":530,"line_end":530,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117313,"byte_end":117328,"line_start":548,"line_end":548,"column_start":12,"column_end":27},"name":"smbus_read_word","qualname":"<I2c>::smbus_read_word","value":"pub fn smbus_read_word(&Self, u8) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives a 16-bit value.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives a 16-bit value.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116668,"byte_end":116726,"line_start":537,"line_end":537,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116731,"byte_end":116734,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, the first byte received is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116739,"byte_end":116809,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ stored as the low byte of the 16-bit value, and the second byte as","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116814,"byte_end":116884,"line_start":540,"line_end":540,"column_start":5,"column_end":75}},{"value":"/ the high byte. Some devices may require you to swap these bytes. In those","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116889,"byte_end":116966,"line_start":541,"line_end":541,"column_start":5,"column_end":82}},{"value":"/ cases you can use the convenience method [`smbus_read_word_swapped`] instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":116971,"byte_end":117052,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117057,"byte_end":117060,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117065,"byte_end":117139,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte Low → Incoming Byte High → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117144,"byte_end":117224,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117229,"byte_end":117232,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ [`smbus_read_word_swapped`]: #method.smbus_read_word_swapped","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117237,"byte_end":117301,"line_start":547,"line_end":547,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118032,"byte_end":118055,"line_start":562,"line_end":562,"column_start":12,"column_end":35},"name":"smbus_read_word_swapped","qualname":"<I2c>::smbus_read_word_swapped","value":"pub fn smbus_read_word_swapped(&Self, u8) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and receives a 16-bit `value` in a non-standard swapped byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and receives a 16-bit `value` in a non-standard swapped byte order.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117447,"byte_end":117544,"line_start":552,"line_end":552,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117549,"byte_end":117552,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ `smbus_read_word_swapped` is a convenience method that works similarly to [`smbus_read_word`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117557,"byte_end":117655,"line_start":554,"line_end":554,"column_start":5,"column_end":103}},{"value":"/ but reverses the byte order of the incoming 16-bit value. The high byte is received first,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117660,"byte_end":117754,"line_start":555,"line_end":555,"column_start":5,"column_end":99}},{"value":"/ and the low byte second.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117759,"byte_end":117787,"line_start":556,"line_end":556,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117792,"byte_end":117795,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117800,"byte_end":117874,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ → Address + Read Bit → Incoming Byte High → Incoming Byte Low → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117879,"byte_end":117959,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117964,"byte_end":117967,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ [`smbus_read_word`]: #method.smbus_read_word","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":117972,"byte_end":118020,"line_start":561,"line_end":561,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118820,"byte_end":118836,"line_start":578,"line_end":578,"column_start":12,"column_end":28},"name":"smbus_write_word","qualname":"<I2c>::smbus_write_word","value":"pub fn smbus_write_word(&Self, u8, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118244,"byte_end":118294,"line_start":568,"line_end":568,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118299,"byte_end":118302,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, the first byte sent is the low byte","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118307,"byte_end":118386,"line_start":570,"line_end":570,"column_start":5,"column_end":84}},{"value":"/ of the 16-bit value, and the second byte is the high byte. Some devices may","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118391,"byte_end":118470,"line_start":571,"line_end":571,"column_start":5,"column_end":84}},{"value":"/ require you to swap these bytes. In those cases you can use the convenience method","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118475,"byte_end":118561,"line_start":572,"line_end":572,"column_start":5,"column_end":91}},{"value":"/ [`smbus_write_word_swapped`] instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118566,"byte_end":118607,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118612,"byte_end":118615,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Low → Outgoing Byte High → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118620,"byte_end":118729,"line_start":575,"line_end":575,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118734,"byte_end":118737,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`smbus_write_word_swapped`]: #method.smbus_write_word_swapped","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118742,"byte_end":118808,"line_start":577,"line_end":577,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119504,"byte_end":119528,"line_start":592,"line_end":592,"column_start":12,"column_end":36},"name":"smbus_write_word_swapped","qualname":"<I2c>::smbus_write_word_swapped","value":"pub fn smbus_write_word_swapped(&Self, u8, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value` in a non-standard swapped byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value` in a non-standard swapped byte order.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":118987,"byte_end":119074,"line_start":584,"line_end":584,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119079,"byte_end":119082,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ `smbus_write_word_swapped` is a convenience method that works similarly to [`smbus_write_word`], but reverses the byte","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119087,"byte_end":119209,"line_start":586,"line_end":586,"column_start":5,"column_end":127}},{"value":"/ order of the outgoing 16-bit value. The high byte is sent first, and the low byte second.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119214,"byte_end":119307,"line_start":587,"line_end":587,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119312,"byte_end":119315,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte High → Outgoing Byte Low → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119320,"byte_end":119429,"line_start":589,"line_end":589,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119434,"byte_end":119437,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ [`smbus_write_word`]: #method.smbus_write_word","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119442,"byte_end":119492,"line_start":591,"line_end":591,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120555,"byte_end":120573,"line_start":614,"line_end":614,"column_start":12,"column_end":30},"name":"smbus_process_call","qualname":"<I2c>::smbus_process_call","value":"pub fn smbus_process_call(&Self, u8, u16) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119768,"byte_end":119864,"line_start":602,"line_end":602,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119869,"byte_end":119872,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Based on the SMBus protocol definition, for both the outgoing and incoming 16-bit value,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119877,"byte_end":119969,"line_start":604,"line_end":604,"column_start":5,"column_end":97}},{"value":"/ the first byte transferred is the low byte of the 16-bit value, and the second byte is the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":119974,"byte_end":120068,"line_start":605,"line_end":605,"column_start":5,"column_end":99}},{"value":"/ high byte. Some devices may require you to swap these bytes. In those cases you can use the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120073,"byte_end":120168,"line_start":606,"line_end":606,"column_start":5,"column_end":100}},{"value":"/ convenience method [`smbus_process_call_swapped`] instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120173,"byte_end":120235,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120240,"byte_end":120243,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Low →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120248,"byte_end":120329,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ Outgoing Byte High → Repeated START → Address + Read Bit → Incoming Byte Low →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120334,"byte_end":120424,"line_start":610,"line_end":610,"column_start":5,"column_end":87}},{"value":"/ Incoming Byte High → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120429,"byte_end":120460,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120465,"byte_end":120468,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ [`smbus_process_call_swapped`]: #method.smbus_process_call_swapped","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120473,"byte_end":120543,"line_start":613,"line_end":613,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121464,"byte_end":121490,"line_start":634,"line_end":634,"column_start":12,"column_end":38},"name":"smbus_process_call_swapped","qualname":"<I2c>::smbus_process_call_swapped","value":"pub fn smbus_process_call_swapped(&Self, u8, u16) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response, in\n a non-standard byte order.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and a 16-bit `value`, and then receives a 16-bit value in response, in","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120761,"byte_end":120860,"line_start":622,"line_end":622,"column_start":5,"column_end":104}},{"value":"/ a non-standard byte order.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120865,"byte_end":120895,"line_start":623,"line_end":623,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120900,"byte_end":120903,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ `smbus_process_call_swapped` is a convenience method that works similarly to [`smbus_process_call`],","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":120908,"byte_end":121012,"line_start":625,"line_end":625,"column_start":5,"column_end":109}},{"value":"/ but reverses the byte order of the outgoing and incoming 16-bit value. The high byte is transferred","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121017,"byte_end":121120,"line_start":626,"line_end":626,"column_start":5,"column_end":108}},{"value":"/ first, and the low byte second.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121125,"byte_end":121160,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121165,"byte_end":121168,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte High →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121173,"byte_end":121255,"line_start":629,"line_end":629,"column_start":5,"column_end":79}},{"value":"/ Outgoing Byte Low → Repeated START → Address + Read Bit → Incoming Byte High →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121260,"byte_end":121350,"line_start":630,"line_end":630,"column_start":5,"column_end":87}},{"value":"/ Incoming Byte Low → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121355,"byte_end":121385,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121390,"byte_end":121393,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ [`smbus_process_call`]: #method.smbus_process_call","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121398,"byte_end":121452,"line_start":633,"line_end":633,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122900,"byte_end":122916,"line_start":665,"line_end":665,"column_start":12,"column_end":28},"name":"smbus_block_read","qualname":"<I2c>::smbus_block_read","value":"pub fn smbus_block_read(&Self, u8, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command`, and then receives an 8-bit byte count along with a\n multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command`, and then receives an 8-bit byte count along with a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121799,"byte_end":121879,"line_start":644,"line_end":644,"column_start":5,"column_end":85}},{"value":"/ multi-byte `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121884,"byte_end":121908,"line_start":645,"line_end":645,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121913,"byte_end":121916,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_read` currently isn't supported on the Raspberry Pi, and returns","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":121921,"byte_end":122002,"line_start":647,"line_end":647,"column_start":5,"column_end":86}},{"value":"/ `Err(`[`Error::FeatureNotSupported`]`)` unless underlying driver support is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122007,"byte_end":122086,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ detected. You might be able to emulate the `smbus_block_read` functionality","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122091,"byte_end":122170,"line_start":649,"line_end":649,"column_start":5,"column_end":84}},{"value":"/ with [`write_read`], [`block_read`] or [`read`] provided the length of the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122175,"byte_end":122253,"line_start":650,"line_end":650,"column_start":5,"column_end":83}},{"value":"/ expected incoming data is known beforehand, or the slave device allows the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122258,"byte_end":122336,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/ master to read more data than it needs to send.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122341,"byte_end":122392,"line_start":652,"line_end":652,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122397,"byte_end":122400,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_read` can read a maximum of 32 bytes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122405,"byte_end":122459,"line_start":654,"line_end":654,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122464,"byte_end":122467,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Repeated START →","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122472,"byte_end":122550,"line_start":656,"line_end":656,"column_start":5,"column_end":75}},{"value":"/ Address + Read Bit → Incoming Byte Count → Incoming Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122555,"byte_end":122629,"line_start":657,"line_end":657,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122634,"byte_end":122637,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122642,"byte_end":122679,"line_start":659,"line_end":659,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122684,"byte_end":122687,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`Error::FeatureNotSupported`]: enum.Error.html#variant.FeatureNotSupported","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122692,"byte_end":122771,"line_start":661,"line_end":661,"column_start":5,"column_end":84}},{"value":"/ [`write_read`]: #method.write_read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122776,"byte_end":122814,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/ [`block_read`]: #method.block_read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122819,"byte_end":122857,"line_start":663,"line_end":663,"column_start":5,"column_end":43}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":122862,"byte_end":122888,"line_start":664,"line_end":664,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123585,"byte_end":123602,"line_start":684,"line_end":684,"column_start":12,"column_end":29},"name":"smbus_block_write","qualname":"<I2c>::smbus_block_write","value":"pub fn smbus_block_write(&Self, u8, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an 8-bit `command` and an 8-bit byte count along with a multi-byte `buffer`.","sig":null,"attributes":[{"value":"/ Sends an 8-bit `command` and an 8-bit byte count along with a multi-byte `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123228,"byte_end":123314,"line_start":677,"line_end":677,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123319,"byte_end":123322,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ `smbus_block_write` can write a maximum of 32 bytes. Any additional data contained","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123327,"byte_end":123413,"line_start":679,"line_end":679,"column_start":5,"column_end":91}},{"value":"/ in `buffer` is ignored.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123418,"byte_end":123445,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123450,"byte_end":123453,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Sequence: START → Address + Write Bit → Command → Outgoing Byte Count","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123458,"byte_end":123537,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/ → Outgoing Bytes → STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123542,"byte_end":123573,"line_start":683,"line_end":683,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124158,"byte_end":124171,"line_start":698,"line_end":698,"column_start":12,"column_end":25},"name":"set_smbus_pec","qualname":"<I2c>::set_smbus_pec","value":"pub fn set_smbus_pec(&Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables SMBus Packet Error Checking.","sig":null,"attributes":[{"value":"/ Enables or disables SMBus Packet Error Checking.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123758,"byte_end":123810,"line_start":690,"line_end":690,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123815,"byte_end":123818,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Packet Error Checking inserts a CRC-8 Packet Error Code (PEC) byte before each STOP","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123823,"byte_end":123910,"line_start":692,"line_end":692,"column_start":5,"column_end":92}},{"value":"/ condition for all SMBus protocols, except Quick Command and Host Notify.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123915,"byte_end":123991,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":123996,"byte_end":123999,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The PEC is calculated on all message bytes except the START, STOP, ACK and NACK bits.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124004,"byte_end":124093,"line_start":695,"line_end":695,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124098,"byte_end":124101,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ By default, `pec` is set to `false`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124106,"byte_end":124146,"line_start":697,"line_end":697,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":913},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":998},{"krate":0,"index":2184},{"krate":0,"index":2188},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":2190},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":1006},{"krate":0,"index":2208},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":1008},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":1010},{"krate":0,"index":1029}],"decl_id":null,"docs":" Interface for the PWM peripheral.","sig":null,"attributes":[{"value":"/ Interface for the PWM peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143434,"byte_end":143471,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143472,"byte_end":143475,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ RPPAL controls the Raspberry Pi's PWM peripheral through the `pwm` sysfs","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143476,"byte_end":143552,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ interface.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143553,"byte_end":143567,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143568,"byte_end":143571,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## PWM channels","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143572,"byte_end":143591,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143592,"byte_end":143595,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The BCM283x SoC supports two hardware PWM channels. By default, both channels","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143596,"byte_end":143677,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ are disabled. To enable only PWM0 on its default pin (BCM GPIO 18, physical pin 12),","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143678,"byte_end":143766,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ add `dtoverlay=pwm` to `/boot/config.txt` on Raspberry Pi OS or `boot/firmware/usercfg.txt` on","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143767,"byte_end":143865,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/ Ubuntu. If you need both PWM channels, replace `pwm` with `pwm-2chan`, which enables PWM0 on BCM","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143866,"byte_end":143966,"line_start":31,"line_end":31,"column_start":1,"column_end":101}},{"value":"/ GPIO 18 (physical pin 12), and PWM1 on BCM GPIO 19 (physical pin 35). More details on enabling","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":143967,"byte_end":144065,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ and configuring PWM on other GPIO pins than the default ones can be found in","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144066,"byte_end":144146,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ `/boot/overlays/README`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144147,"byte_end":144175,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144176,"byte_end":144179,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi's analog audio output uses both PWM channels. Playing audio and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144180,"byte_end":144264,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/ simultaneously accessing a PWM channel may cause issues.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144265,"byte_end":144325,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144326,"byte_end":144329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Some of the GPIO pins capable of supporting hardware PWM can also be configured for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144330,"byte_end":144417,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"/ use with other peripherals. Be careful not to enable two peripherals on the same pin","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144418,"byte_end":144506,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/ at the same time.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144507,"byte_end":144528,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144529,"byte_end":144532,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Using PWM without superuser privileges (`sudo`)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144533,"byte_end":144587,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144588,"byte_end":144591,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ As of kernel version 4.14.34, released on April 16 2018, it's possible to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144592,"byte_end":144669,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ configure your Raspberry Pi to allow non-root access to PWM. 4.14.34 includes","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144670,"byte_end":144751,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ a [patch] that allows `udev` to change file permissions when a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144752,"byte_end":144818,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/ PWM channel is exported. This will let any user that's a member of the `gpio`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144819,"byte_end":144900,"line_start":48,"line_end":48,"column_start":1,"column_end":82}},{"value":"/ group configure PWM without having to use `sudo`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144901,"byte_end":144954,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144955,"byte_end":144958,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `udev` rules needed to make this work haven't been patched in yet as of","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":144959,"byte_end":145038,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ June 2018, but you can easily add them yourself. Make sure you're running","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145039,"byte_end":145116,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ 4.14.34 or later, and append the following snippet to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145117,"byte_end":145174,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ `/etc/udev/rules.d/99-com.rules`. Reboot the Raspberry Pi afterwards.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145175,"byte_end":145248,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145249,"byte_end":145252,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145253,"byte_end":145264,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ SUBSYSTEM==\"pwm*\", PROGRAM=\"/bin/sh -c '\\","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145265,"byte_end":145310,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/     chown -R root:gpio /sys/class/pwm && chmod -R 770 /sys/class/pwm;\\","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145311,"byte_end":145385,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/     chown -R root:gpio /sys/devices/platform/soc/*.pwm/pwm/pwmchip* &&\\","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145386,"byte_end":145461,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/     chmod -R 770 /sys/devices/platform/soc/*.pwm/pwm/pwmchip*\\","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145462,"byte_end":145528,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ '\"","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145529,"byte_end":145535,"line_start":61,"line_end":61,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145536,"byte_end":145543,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145544,"byte_end":145547,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Troubleshooting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145548,"byte_end":145570,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145571,"byte_end":145574,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ### Permission denied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145575,"byte_end":145600,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145601,"byte_end":145604,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ If [`new`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145605,"byte_end":145664,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ error, make sure `/sys/class/pwm` and all of its subdirectories","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145665,"byte_end":145732,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ are owned by `root:gpio`, the current user is a member of the `gpio` group","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145733,"byte_end":145811,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ and `udev` is properly configured as mentioned above. Alternatively, you can","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145812,"byte_end":145892,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ launch your application using `sudo`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145893,"byte_end":145934,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145935,"byte_end":145938,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ### Not found","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145939,"byte_end":145956,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145957,"byte_end":145960,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If [`new`] returns an `io::ErrorKind::NotFound` error, you may have","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":145961,"byte_end":146032,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/ forgotten to enable the selected PWM channel. The configuration options","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146033,"byte_end":146108,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ to enable either of the two PWM channels are listed above.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146109,"byte_end":146171,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146172,"byte_end":146175,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [patch]: https://github.com/raspberrypi/linux/issues/1983","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146176,"byte_end":146237,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/ [`new`]: struct.Pwm.html#method.new","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146238,"byte_end":146277,"line_start":81,"line_end":81,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146624,"byte_end":146626,"line_start":101,"line_end":101,"column_start":5,"column_end":7},"name":"Io","qualname":"::pwm::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":2184},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146605,"byte_end":146619,"line_start":100,"line_end":100,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":2184},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146593,"byte_end":146598,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"Error","qualname":"::pwm::Error","value":"pub enum Error { Io(io::Error), }","parent":null,"children":[{"krate":0,"index":2185}],"decl_id":null,"docs":" Errors that can occur when accessing the PWM peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the PWM peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146506,"byte_end":146566,"line_start":97,"line_end":97,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1004},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147055,"byte_end":147061,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"name":"Result","qualname":"::pwm::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `pwm::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `pwm::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146979,"byte_end":147045,"line_start":120,"line_end":120,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147302,"byte_end":147306,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Pwm0","qualname":"::pwm::Channel::Pwm0","value":"Channel::Pwm0","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147316,"byte_end":147320,"line_start":132,"line_end":132,"column_start":5,"column_end":9},"name":"Pwm1","qualname":"::pwm::Channel::Pwm1","value":"Channel::Pwm1","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2190},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147288,"byte_end":147295,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Channel","qualname":"::pwm::Channel","value":"pub enum Channel { Pwm0 = , Pwm1 = , }","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2194}],"decl_id":null,"docs":" PWM channels.","sig":null,"attributes":[{"value":"/ PWM channels.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147094,"byte_end":147111,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147112,"byte_end":147115,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ More information on enabling and configuring the PWM channels can be","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147116,"byte_end":147188,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147189,"byte_end":147206,"line_start":126,"line_end":126,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147207,"byte_end":147210,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147211,"byte_end":147233,"line_start":128,"line_end":128,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147653,"byte_end":147659,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Normal","qualname":"::pwm::Polarity::Normal","value":"Polarity::Normal","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147665,"byte_end":147672,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::pwm::Polarity::Inverse","value":"Polarity::Inverse","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2208},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147638,"byte_end":147646,"line_start":146,"line_end":146,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::pwm::Polarity","value":"pub enum Polarity { Normal, Inverse, }","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2211}],"decl_id":null,"docs":" Output polarities.\n","sig":null,"attributes":[{"value":"/ Output polarities.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147561,"byte_end":147583,"line_start":144,"line_end":144,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148664,"byte_end":148667,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"Pwm","qualname":"::pwm::Pwm","value":"Pwm {  }","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's PWM peripheral.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's PWM peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147922,"byte_end":147979,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147980,"byte_end":147983,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Before using `Pwm`, make sure the selected PWM channel has been configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147984,"byte_end":148062,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ and activated. More information can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148063,"byte_end":148119,"line_start":163,"line_end":163,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148120,"byte_end":148123,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`PwmPin`] trait implementation for `Pwm` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148124,"byte_end":148203,"line_start":165,"line_end":165,"column_start":1,"column_end":80}},{"value":"/ by specifying the optional `hal` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148204,"byte_end":148282,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148283,"byte_end":148305,"line_start":167,"line_end":167,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148306,"byte_end":148309,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ The `unproven` `embedded-hal` [`Pwm`] trait implementation for `Pwm` can be enabled","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148310,"byte_end":148397,"line_start":169,"line_end":169,"column_start":1,"column_end":88}},{"value":"/ by specifying the optional `hal-unproven` feature in the dependency declaration for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148398,"byte_end":148485,"line_start":170,"line_end":170,"column_start":1,"column_end":88}},{"value":"/ the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148486,"byte_end":148508,"line_start":171,"line_end":171,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148509,"byte_end":148512,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148513,"byte_end":148535,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"/ [`PwmPin`]: ../../embedded_hal/trait.PwmPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148536,"byte_end":148588,"line_start":174,"line_end":174,"column_start":1,"column_end":53}},{"value":"/ [`Pwm`]: ../../embedded_hal/trait.Pwm.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148589,"byte_end":148635,"line_start":175,"line_end":175,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148970,"byte_end":148973,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<Pwm>::new","value":"pub fn new(Channel) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm`.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148735,"byte_end":148762,"line_start":183,"line_end":183,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148767,"byte_end":148770,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ `new` doesn't change the channel's period, pulse width or polarity. The channel","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148775,"byte_end":148858,"line_start":185,"line_end":185,"column_start":5,"column_end":88}},{"value":"/ will remain disabled until [`enable`] is called.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148863,"byte_end":148915,"line_start":186,"line_end":186,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148920,"byte_end":148923,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148928,"byte_end":148958,"line_start":188,"line_end":188,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150245,"byte_end":150256,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"with_period","qualname":"<Pwm>::with_period","value":"pub fn with_period(Channel, Duration, Duration, Polarity, bool) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm` using the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm` using the specified settings.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149447,"byte_end":149503,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149508,"byte_end":149511,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ `period` indicates the time it takes for the PWM channel to complete one cycle.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149516,"byte_end":149599,"line_start":207,"line_end":207,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149604,"byte_end":149607,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ `pulse_width` indicates the amount of time the PWM channel is active during a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149612,"byte_end":149693,"line_start":209,"line_end":209,"column_start":5,"column_end":86}},{"value":"/ single period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149698,"byte_end":149716,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149721,"byte_end":149724,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high ([`Normal`])","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149729,"byte_end":149805,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ or low ([`Inverse`]).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149810,"byte_end":149835,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149840,"byte_end":149843,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ `enabled` enables PWM on the selected channel. If `enabled` is set to `false`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149848,"byte_end":149930,"line_start":215,"line_end":215,"column_start":5,"column_end":87}},{"value":"/ the channel will remain disabled until [`enable`] is called.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":149935,"byte_end":149999,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150004,"byte_end":150007,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `period` is shorter than `pulse_width`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150012,"byte_end":150080,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150085,"byte_end":150088,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150093,"byte_end":150142,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150147,"byte_end":150198,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":150203,"byte_end":150233,"line_start":222,"line_end":222,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":152022,"byte_end":152036,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"with_frequency","qualname":"<Pwm>::with_frequency","value":"pub fn with_frequency(Channel, f64, f64, Polarity, bool) -> Result<Pwm>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pwm` using the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Pwm` using the specified settings.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151189,"byte_end":151245,"line_start":255,"line_end":255,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151250,"byte_end":151253,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ `with_frequency` is a convenience method that converts `frequency` to a period,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151258,"byte_end":151341,"line_start":257,"line_end":257,"column_start":5,"column_end":88}},{"value":"/ and calculates the duty cycle as a percentage of the frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151346,"byte_end":151413,"line_start":258,"line_end":258,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151418,"byte_end":151421,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ `frequency` is specified in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151426,"byte_end":151469,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151474,"byte_end":151477,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151482,"byte_end":151574,"line_start":262,"line_end":262,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151579,"byte_end":151582,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high ([`Normal`])","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151587,"byte_end":151663,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ or low ([`Inverse`]).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151668,"byte_end":151693,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151698,"byte_end":151701,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ `enabled` enables PWM on the selected channel. If `enabled` is set to `false`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151706,"byte_end":151788,"line_start":267,"line_end":267,"column_start":5,"column_end":87}},{"value":"/ the channel will remain disabled until [`enable`] is called.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151793,"byte_end":151857,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151862,"byte_end":151865,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151870,"byte_end":151919,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151924,"byte_end":151975,"line_start":271,"line_end":271,"column_start":5,"column_end":56}},{"value":"/ [`enable`]: #method.enable","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":151980,"byte_end":152010,"line_start":272,"line_end":272,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153279,"byte_end":153285,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"period","qualname":"<Pwm>::period","value":"pub fn period(&Self) -> Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the period.\n","sig":null,"attributes":[{"value":"/ Returns the period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153244,"byte_end":153267,"line_start":313,"line_end":313,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153614,"byte_end":153624,"line_start":323,"line_end":323,"column_start":12,"column_end":22},"name":"set_period","qualname":"<Pwm>::set_period","value":"pub fn set_period(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the period.","sig":null,"attributes":[{"value":"/ Sets the period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153395,"byte_end":153415,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153420,"byte_end":153423,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ `period` indicates the time it takes for the PWM channel to complete one cycle.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153428,"byte_end":153511,"line_start":320,"line_end":320,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153516,"byte_end":153519,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `period` is shorter than the current pulse width.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153524,"byte_end":153602,"line_start":322,"line_end":322,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153937,"byte_end":153948,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"pulse_width","qualname":"<Pwm>::pulse_width","value":"pub fn pulse_width(&Self) -> Result<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the pulse width.\n","sig":null,"attributes":[{"value":"/ Returns the pulse width.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":153897,"byte_end":153925,"line_start":333,"line_end":333,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154330,"byte_end":154345,"line_start":346,"line_end":346,"column_start":12,"column_end":27},"name":"set_pulse_width","qualname":"<Pwm>::set_pulse_width","value":"pub fn set_pulse_width(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the pulse width.","sig":null,"attributes":[{"value":"/ Sets the pulse width.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154086,"byte_end":154111,"line_start":340,"line_end":340,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154116,"byte_end":154119,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ `pulse_width` indicates the amount of time the PWM channel is active during a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154124,"byte_end":154205,"line_start":342,"line_end":342,"column_start":5,"column_end":86}},{"value":"/ single period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154210,"byte_end":154228,"line_start":343,"line_end":343,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154233,"byte_end":154236,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method will fail if `pulse_width` is longer than the current period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154241,"byte_end":154318,"line_start":345,"line_end":345,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154812,"byte_end":154821,"line_start":360,"line_end":360,"column_start":12,"column_end":21},"name":"frequency","qualname":"<Pwm>::frequency","value":"pub fn frequency(&Self) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency.","sig":null,"attributes":[{"value":"/ Returns the frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154638,"byte_end":154664,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154669,"byte_end":154672,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ `frequency` is a convenience method that calculates the frequency in hertz (Hz)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154677,"byte_end":154760,"line_start":358,"line_end":358,"column_start":5,"column_end":88}},{"value":"/ based on the configured period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":154765,"byte_end":154800,"line_start":359,"line_end":359,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155417,"byte_end":155430,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Pwm>::set_frequency","value":"pub fn set_frequency(&Self, f64, f64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the frequency and duty cycle.","sig":null,"attributes":[{"value":"/ Sets the frequency and duty cycle.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155039,"byte_end":155077,"line_start":370,"line_end":370,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155082,"byte_end":155085,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ `set_frequency` is a convenience method that converts `frequency` to a period,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155090,"byte_end":155172,"line_start":372,"line_end":372,"column_start":5,"column_end":87}},{"value":"/ and calculates the duty cycle as a percentage of the frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155177,"byte_end":155244,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155249,"byte_end":155252,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ `frequency` is specified in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155257,"byte_end":155300,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155305,"byte_end":155308,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":155313,"byte_end":155405,"line_start":377,"line_end":377,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156295,"byte_end":156305,"line_start":401,"line_end":401,"column_start":12,"column_end":22},"name":"duty_cycle","qualname":"<Pwm>::duty_cycle","value":"pub fn duty_cycle(&Self) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the duty cycle.","sig":null,"attributes":[{"value":"/ Returns the duty cycle.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156046,"byte_end":156073,"line_start":396,"line_end":396,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156078,"byte_end":156081,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is a convenience method that calculates the duty cycle as a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156086,"byte_end":156162,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ floating point value between `0.0` (0%) and `1.0` (100%) based on the configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156167,"byte_end":156251,"line_start":399,"line_end":399,"column_start":5,"column_end":89}},{"value":"/ period and pulse width.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156256,"byte_end":156283,"line_start":400,"line_end":400,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156889,"byte_end":156903,"line_start":418,"line_end":418,"column_start":12,"column_end":26},"name":"set_duty_cycle","qualname":"<Pwm>::set_duty_cycle","value":"pub fn set_duty_cycle(&Self, f64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the duty cycle.","sig":null,"attributes":[{"value":"/ Sets the duty cycle.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156607,"byte_end":156631,"line_start":412,"line_end":412,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156636,"byte_end":156639,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ `set_duty_cycle` is a convenience method that converts `duty_cycle` to a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156644,"byte_end":156720,"line_start":414,"line_end":414,"column_start":5,"column_end":81}},{"value":"/ pulse width based on the configured period.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156725,"byte_end":156772,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156777,"byte_end":156780,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ `duty_cycle` is specified as a floating point value between `0.0` (0%) and `1.0` (100%).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":156785,"byte_end":156877,"line_start":417,"line_end":417,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157211,"byte_end":157219,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"polarity","qualname":"<Pwm>::polarity","value":"pub fn polarity(&Self) -> Result<Polarity>","parent":null,"children":[],"decl_id":null,"docs":" Returns the polarity.\n","sig":null,"attributes":[{"value":"/ Returns the polarity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157174,"byte_end":157199,"line_start":427,"line_end":427,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157580,"byte_end":157592,"line_start":439,"line_end":439,"column_start":12,"column_end":24},"name":"set_polarity","qualname":"<Pwm>::set_polarity","value":"pub fn set_polarity(&Self, Polarity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the polarity.","sig":null,"attributes":[{"value":"/ Sets the polarity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157309,"byte_end":157331,"line_start":432,"line_end":432,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157336,"byte_end":157339,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ `polarity` configures the active logic level as either high","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157344,"byte_end":157407,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ ([`Normal`]) or low ([`Inverse`]).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157412,"byte_end":157450,"line_start":435,"line_end":435,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157455,"byte_end":157458,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [`Normal`]: enum.Polarity.html#variant.Normal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157463,"byte_end":157512,"line_start":437,"line_end":437,"column_start":5,"column_end":54}},{"value":"/ [`Inverse`]: enum.Polarity.html#variant.Inverse","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157517,"byte_end":157568,"line_start":438,"line_end":438,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157784,"byte_end":157794,"line_start":446,"line_end":446,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Pwm>::is_enabled","value":"pub fn is_enabled(&Self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the PWM channel is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the PWM channel is enabled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157723,"byte_end":157772,"line_start":445,"line_end":445,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157919,"byte_end":157925,"line_start":451,"line_end":451,"column_start":12,"column_end":18},"name":"enable","qualname":"<Pwm>::enable","value":"pub fn enable(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables the PWM channel.\n","sig":null,"attributes":[{"value":"/ Enables the PWM channel.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":157879,"byte_end":157907,"line_start":450,"line_end":450,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158072,"byte_end":158079,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"disable","qualname":"<Pwm>::disable","value":"pub fn disable(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disables the PWM channel.\n","sig":null,"attributes":[{"value":"/ Disables the PWM channel.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158031,"byte_end":158060,"line_start":457,"line_end":457,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158239,"byte_end":158252,"line_start":465,"line_end":465,"column_start":12,"column_end":25},"name":"reset_on_drop","qualname":"<Pwm>::reset_on_drop","value":"pub fn reset_on_drop(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of `reset_on_drop`.\n","sig":null,"attributes":[{"value":"/ Returns the value of `reset_on_drop`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158186,"byte_end":158227,"line_start":464,"line_end":464,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158809,"byte_end":158826,"line_start":479,"line_end":479,"column_start":12,"column_end":29},"name":"set_reset_on_drop","qualname":"<Pwm>::set_reset_on_drop","value":"pub fn set_reset_on_drop(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" When enabled, disables the PWM channel when the `Pwm` instance\n goes out of scope. By default, this is set to `true`.","sig":null,"attributes":[{"value":"/ When enabled, disables the PWM channel when the `Pwm` instance","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158308,"byte_end":158374,"line_start":469,"line_end":469,"column_start":5,"column_end":71}},{"value":"/ goes out of scope. By default, this is set to `true`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158379,"byte_end":158436,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158441,"byte_end":158444,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158449,"byte_end":158460,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158465,"byte_end":158468,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Drop methods aren't called when a process is abnormally terminated, for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158473,"byte_end":158548,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ instance when a user presses <kbd>Ctrl</kbd> + <kbd>C</kbd>, and the `SIGINT` signal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158553,"byte_end":158641,"line_start":475,"line_end":475,"column_start":5,"column_end":93}},{"value":"/ isn't caught. You can catch those using crates such as [`simple_signal`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158646,"byte_end":158723,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158728,"byte_end":158731,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ [`simple_signal`]: https://crates.io/crates/simple-signal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158736,"byte_end":158797,"line_start":478,"line_end":478,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1031},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1148},{"krate":0,"index":1176},{"krate":0,"index":2266},{"krate":0,"index":2285},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":2287},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":1187},{"krate":0,"index":2320},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":1189},{"krate":0,"index":2380},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":1191},{"krate":0,"index":2398},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":1193},{"krate":0,"index":2422},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Interface for the main and auxiliary SPI peripherals.","sig":null,"attributes":[{"value":"/ Interface for the main and auxiliary SPI peripherals.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168642,"byte_end":168699,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168700,"byte_end":168703,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ RPPAL provides access to the available SPI buses by using the `spidev` device","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168704,"byte_end":168785,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ interface through `/dev/spidevB.S`, where B refers to an SPI bus, and S to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168786,"byte_end":168864,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ a Slave Select pin. Which buses and pins are available depends on your","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168865,"byte_end":168939,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ Raspberry Pi model and configuration, as explained below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":168940,"byte_end":169001,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169002,"byte_end":169005,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## SPI buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169006,"byte_end":169022,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169023,"byte_end":169026,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi's GPIO header exposes several SPI buses. SPI0 is available","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169027,"byte_end":169106,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ on all Raspberry Pi models. SPI1 is available on models with a 40-pin","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169107,"byte_end":169180,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ header. SPI2 is only available on the Compute and Compute 3. SPI3 through SPI6","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169181,"byte_end":169263,"line_start":32,"line_end":32,"column_start":1,"column_end":83}},{"value":"/ are only available on the Raspberry Pi 4 B and 400.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169264,"byte_end":169319,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169320,"byte_end":169323,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ### SPI0","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169324,"byte_end":169336,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169337,"byte_end":169340,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ SPI0 is disabled by default. You can enable it by running","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169341,"byte_end":169402,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ `sudo raspi-config`, or by manually adding `dtparam=spi=on` to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169403,"byte_end":169469,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ `/boot/config.txt`. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169470,"byte_end":169531,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169532,"byte_end":169535,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 9 (physical pin 21)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169536,"byte_end":169576,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ * MOSI: BCM GPIO 10 (physical pin 19)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169577,"byte_end":169618,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/ * SCLK: BCM GPIO 11 (physical pin 23)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169619,"byte_end":169660,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ * SS: [`Ss0`] BCM GPIO 8 (physical pin 24), [`Ss1`] BCM GPIO 7 (physical pin 26)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169661,"byte_end":169745,"line_start":44,"line_end":44,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169746,"byte_end":169749,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### SPI1","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169750,"byte_end":169762,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169763,"byte_end":169766,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ SPI1 is an auxiliary peripheral that's referred to as mini SPI. According","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169767,"byte_end":169844,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ to the BCM2835 documentation, using higher clock speeds on SPI1 requires","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169845,"byte_end":169921,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ additional CPU time compared to SPI0, caused by smaller FIFOs and no DMA","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169922,"byte_end":169998,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ support. It doesn't support [`Mode1`] or [`Mode3`]. SPI1 can be enabled by","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":169999,"byte_end":170077,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ adding `dtoverlay=spi1-1cs` to `/boot/config.txt`. Replace `1cs` with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170078,"byte_end":170151,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ either `2cs` or `3cs` if you require 2 or 3 Slave Select pins.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170152,"byte_end":170218,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170219,"byte_end":170260,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170261,"byte_end":170264,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 19 (physical pin 35)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170265,"byte_end":170306,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ * MOSI: BCM GPIO 20 (physical pin 38)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170307,"byte_end":170348,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ * SCLK: BCM GPIO 21 (physical pin 40)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170349,"byte_end":170390,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ * SS: [`Ss0`] BCM GPIO 18 (physical pin 12), [`Ss1`] BCM GPIO 17 (physical pin 11), [`Ss2`] BCM GPIO 16 (physical pin 36)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170391,"byte_end":170516,"line_start":59,"line_end":59,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170517,"byte_end":170520,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### SPI2","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170521,"byte_end":170533,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170534,"byte_end":170537,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ SPI2 shares the same characteristics and limitations as SPI1. It can be","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170538,"byte_end":170613,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ enabled by adding `dtoverlay=spi2-1cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170614,"byte_end":170687,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ `1cs` with either `2cs` or `3cs` if you require 2 or 3 Slave Select","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170688,"byte_end":170759,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ pins. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170760,"byte_end":170807,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170808,"byte_end":170811,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 40","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170812,"byte_end":170835,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/ * MOSI: BCM GPIO 41","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170836,"byte_end":170859,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ * SCLK: BCM GPIO 42","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170860,"byte_end":170883,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ * SS: [`Ss0`] BCM GPIO 43, [`Ss1`] BCM GPIO 44, [`Ss2`] BCM GPIO 45","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170884,"byte_end":170955,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170956,"byte_end":170959,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ### SPI3","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170960,"byte_end":170972,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170973,"byte_end":170976,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ SPI3 can be enabled by adding `dtoverlay=spi3-1cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":170977,"byte_end":171062,"line_start":75,"line_end":75,"column_start":1,"column_end":86}},{"value":"/ `1cs` with `2cs` if you require 2 Slave Select pins. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171063,"byte_end":171157,"line_start":76,"line_end":76,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171158,"byte_end":171161,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 1 (physical pin 28)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171162,"byte_end":171202,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ * MOSI: BCM GPIO 2 (physical pin 3)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171203,"byte_end":171242,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ * SCLK: BCM GPIO 3 (physical pin 5)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171243,"byte_end":171282,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ * SS: [`Ss0`] BCM GPIO 0 (physical pin 27), [`Ss1`] BCM GPIO 24 (physical pin 18)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171283,"byte_end":171368,"line_start":81,"line_end":81,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171369,"byte_end":171372,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ### SPI4","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171373,"byte_end":171385,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171386,"byte_end":171389,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ SPI4 can be enabled by adding `dtoverlay=spi4-1cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171390,"byte_end":171475,"line_start":85,"line_end":85,"column_start":1,"column_end":86}},{"value":"/ `1cs` with `2cs` if you require 2 Slave Select pins. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171476,"byte_end":171570,"line_start":86,"line_end":86,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171571,"byte_end":171574,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 5 (physical pin 29)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171575,"byte_end":171615,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ * MOSI: BCM GPIO 6 (physical pin 31)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171616,"byte_end":171656,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/ * SCLK: BCM GPIO 7 (physical pin 26)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171657,"byte_end":171697,"line_start":90,"line_end":90,"column_start":1,"column_end":41}},{"value":"/ * SS: [`Ss0`] BCM GPIO 4 (physical pin 7), [`Ss1`] BCM GPIO 25 (physical pin 22)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171698,"byte_end":171782,"line_start":91,"line_end":91,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171783,"byte_end":171786,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ### SPI5","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171787,"byte_end":171799,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171800,"byte_end":171803,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ SPI5 can be enabled by adding `dtoverlay=spi5-1cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171804,"byte_end":171889,"line_start":95,"line_end":95,"column_start":1,"column_end":86}},{"value":"/ `1cs` with `2cs` if you require 2 Slave Select pins. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171890,"byte_end":171984,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171985,"byte_end":171988,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 13 (physical pin 33)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":171989,"byte_end":172030,"line_start":98,"line_end":98,"column_start":1,"column_end":42}},{"value":"/ * MOSI: BCM GPIO 14 (physical pin 8)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172031,"byte_end":172071,"line_start":99,"line_end":99,"column_start":1,"column_end":41}},{"value":"/ * SCLK: BCM GPIO 15 (physical pin 10)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172072,"byte_end":172113,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ * SS: [`Ss0`] BCM GPIO 12 (physical pin 32), [`Ss1`] BCM GPIO 26 (physical pin 37)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172114,"byte_end":172200,"line_start":101,"line_end":101,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172201,"byte_end":172204,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### SPI6","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172205,"byte_end":172217,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172218,"byte_end":172221,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ SPI6 can be enabled by adding `dtoverlay=spi6-1cs` to `/boot/config.txt`. Replace","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172222,"byte_end":172307,"line_start":105,"line_end":105,"column_start":1,"column_end":86}},{"value":"/ `1cs` with `2cs` if you require 2 Slave Select pins. The associated pins are listed below.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172308,"byte_end":172402,"line_start":106,"line_end":106,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172403,"byte_end":172406,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ * MISO: BCM GPIO 19 (physical pin 35)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172407,"byte_end":172448,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ * MOSI: BCM GPIO 20 (physical pin 38)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172449,"byte_end":172490,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ * SCLK: BCM GPIO 21 (physical pin 40)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172491,"byte_end":172532,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ * SS: [`Ss0`] BCM GPIO 18 (physical pin 12), [`Ss1`] BCM GPIO 27 (physical pin 13)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172533,"byte_end":172619,"line_start":111,"line_end":111,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172620,"byte_end":172623,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ SPI6 is tied to the same GPIO pins as SPI1. It's not possible to enable both","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172624,"byte_end":172704,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ buses at the same time.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172705,"byte_end":172732,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172733,"byte_end":172736,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ### Alternative pins","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172737,"byte_end":172761,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172762,"byte_end":172765,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The GPIO pin numbers mentioned above are part of the default configuration.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172766,"byte_end":172845,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ Some of their functionality can be moved to different pins. Read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172846,"byte_end":172914,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ `/boot/overlays/README` for more information.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172915,"byte_end":172964,"line_start":120,"line_end":120,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172965,"byte_end":172968,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Buffer size limits","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172969,"byte_end":172994,"line_start":122,"line_end":122,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172995,"byte_end":172998,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ By default, `spidev` can handle up to 4096 bytes in a single transfer. You","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":172999,"byte_end":173077,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ can increase this limit to a maximum of 65536 bytes by appending","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173078,"byte_end":173146,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/ `spidev.bufsiz=65536` to the single line of parameters in `/boot/cmdline.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173147,"byte_end":173229,"line_start":126,"line_end":126,"column_start":1,"column_end":83}},{"value":"/ Remember to reboot the Raspberry Pi afterwards. The current value of bufsiz","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173230,"byte_end":173309,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ can be checked with `cat /sys/module/spidev/parameters/bufsiz`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173310,"byte_end":173377,"line_start":128,"line_end":128,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173378,"byte_end":173381,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ## Not supported","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173382,"byte_end":173402,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173403,"byte_end":173406,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Some features exposed by the generic `spidev` interface aren't fully","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173407,"byte_end":173479,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ supported by the underlying driver or the BCM283x SoC: `SPI_LSB_FIRST` (LSB","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173480,"byte_end":173559,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ first bit order), `SPI_3WIRE` (bidirectional mode), `SPI_LOOP` (loopback mode),","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173560,"byte_end":173643,"line_start":134,"line_end":134,"column_start":1,"column_end":84}},{"value":"/ `SPI_NO_CS` (no Slave Select), `SPI_READY` (slave ready signal),","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173644,"byte_end":173712,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/ `SPI_TX_DUAL`/`SPI_RX_DUAL` (dual SPI), `SPI_TX_QUAD`/`SPI_RX_QUAD` (quad SPI),","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173713,"byte_end":173796,"line_start":136,"line_end":136,"column_start":1,"column_end":84}},{"value":"/ and any number of bits per word other than 8.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173797,"byte_end":173846,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173847,"byte_end":173850,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ If your slave device requires `SPI_LSB_FIRST`, you can use the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173851,"byte_end":173917,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ [`reverse_bits`] function instead to reverse the bit order in software.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173918,"byte_end":173993,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173994,"byte_end":173997,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ `SPI_LOOP` mode can be achieved by connecting the MOSI and MISO pins","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":173998,"byte_end":174070,"line_start":142,"line_end":142,"column_start":1,"column_end":73}},{"value":"/ together.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174071,"byte_end":174084,"line_start":143,"line_end":143,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174085,"byte_end":174088,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ `SPI_NO_CS` can be implemented by connecting the Slave Select pin on your","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174089,"byte_end":174166,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ slave device to any other available GPIO pin on the Pi, and manually","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174167,"byte_end":174239,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/ changing it to high and low as needed.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174240,"byte_end":174282,"line_start":147,"line_end":147,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174283,"byte_end":174286,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Ss0`]: enum.SlaveSelect.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174287,"byte_end":174321,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/ [`Ss1`]: enum.SlaveSelect.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174322,"byte_end":174356,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/ [`Ss2`]: enum.SlaveSelect.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174357,"byte_end":174391,"line_start":151,"line_end":151,"column_start":1,"column_end":35}},{"value":"/ [`Mode1`]: enum.Mode.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174392,"byte_end":174421,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ [`Mode3`]: enum.Mode.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174422,"byte_end":174451,"line_start":153,"line_end":153,"column_start":1,"column_end":30}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174452,"byte_end":174494,"line_start":154,"line_end":154,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2229},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201410,"byte_end":201417,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Segment","qualname":"::spi::segment::Segment","value":"Segment {  }","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"decl_id":null,"docs":" Part of a multi-segment transfer.","sig":null,"attributes":[{"value":"/ Part of a multi-segment transfer.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200788,"byte_end":200825,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200826,"byte_end":200829,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Segment`s are transferred using the [`Spi::transfer_segments`] method.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200830,"byte_end":200905,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200906,"byte_end":200909,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Construct a new `Segment` for a simultaneous (full-duplex) read/write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200910,"byte_end":200983,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ transfer using [`new`]. For read operations without any outgoing data,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":200984,"byte_end":201058,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ use [`with_read`]. For write operations where any incoming data","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201059,"byte_end":201126,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ should be discarded, use [`with_write`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201127,"byte_end":201171,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201172,"byte_end":201175,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201176,"byte_end":201248,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ [`with_read`]: #method.with_read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201249,"byte_end":201285,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ [`with_write`]: #method.with_write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201286,"byte_end":201324,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201325,"byte_end":201349,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"repr(C)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":201388,"byte_end":201398,"line_start":38,"line_end":38,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203443,"byte_end":203446,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Segment>::new","value":"pub fn new(&'a mut [u8], &'b [u8]) -> Segment","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a simultaneous (full-duplex) read/write transfer.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202685,"byte_end":202760,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ for a simultaneous (full-duplex) read/write transfer.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202765,"byte_end":202822,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202827,"byte_end":202830,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For `Segment`s that only require either a read or write operation, call","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202835,"byte_end":202910,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ [`with_read`] or [`with_write`] instead of `new`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202915,"byte_end":202968,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202973,"byte_end":202976,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`] will only transfer as many bytes as the shortest of","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202981,"byte_end":203063,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ the two buffers contains.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203068,"byte_end":203097,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203102,"byte_end":203105,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203110,"byte_end":203185,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203190,"byte_end":203229,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203234,"byte_end":203237,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203242,"byte_end":203314,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203319,"byte_end":203347,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ [`with_read`]: #method.with_read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203352,"byte_end":203388,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/ [`with_write`]: #method.with_write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203393,"byte_end":203431,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204111,"byte_end":204120,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"with_read","qualname":"<Segment>::with_read","value":"pub fn with_read(&mut [u8]) -> Segment","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a read operation.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203616,"byte_end":203691,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ for a read operation.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203696,"byte_end":203721,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203726,"byte_end":203729,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Incoming data from the slave device is written to `buffer`. The total","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203734,"byte_end":203807,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ number of bytes read depends on the length of `buffer`. A zero-value","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203812,"byte_end":203884,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ byte is sent for every byte read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203889,"byte_end":203926,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203931,"byte_end":203934,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":203939,"byte_end":204014,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204019,"byte_end":204058,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204063,"byte_end":204066,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204071,"byte_end":204099,"line_start":97,"line_end":97,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204643,"byte_end":204653,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"with_write","qualname":"<Segment>::with_write","value":"pub fn with_write(&[u8]) -> Segment","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the default settings, and configures it\n for a write operation.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the default settings, and configures it","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204239,"byte_end":204314,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ for a write operation.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204319,"byte_end":204345,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204350,"byte_end":204353,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Outgoing data from `buffer` is sent to the slave device. Any","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204358,"byte_end":204422,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ incoming data is discarded.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204427,"byte_end":204458,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204463,"byte_end":204466,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ By default, all customizable settings are set to 0, which means it uses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204471,"byte_end":204546,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ the same values as set for [`Spi`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204551,"byte_end":204590,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204595,"byte_end":204598,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204603,"byte_end":204631,"line_start":111,"line_end":111,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205851,"byte_end":205864,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"with_settings","qualname":"<Segment>::with_settings","value":"pub fn with_settings(Option<&'a mut [u8]>, Option<&'b [u8]>, u32, u16, u8,\n                     bool) -> Segment","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Segment` with the specified settings.","sig":null,"attributes":[{"value":"/ Constructs a new `Segment` with the specified settings.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204768,"byte_end":204827,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204832,"byte_end":204835,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ These settings override the values set for [`Spi`], and are only used","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204840,"byte_end":204913,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ for this specific segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204918,"byte_end":204948,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204953,"byte_end":204956,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If `read_buffer` is set to `None`, any incoming data is discarded.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":204961,"byte_end":205031,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205036,"byte_end":205039,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If `write_buffer` is set to `None`, a zero-value byte is sent for every","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205044,"byte_end":205119,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ byte read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205124,"byte_end":205138,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205143,"byte_end":205146,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If both `read_buffer` and `write_buffer` are specified, [`Spi::transfer_segments`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205151,"byte_end":205237,"line_start":126,"line_end":126,"column_start":5,"column_end":91}},{"value":"/ will only transfer as many bytes as the shortest of the two buffers contains.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205242,"byte_end":205323,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205328,"byte_end":205331,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ `clock_speed` sets a custom clock speed in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205336,"byte_end":205394,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205399,"byte_end":205402,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ `delay` sets a delay in microseconds (µs).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205407,"byte_end":205454,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205459,"byte_end":205462,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ `bits_per_word` sets the number of bits per word. The Raspberry Pi currently only supports 8 bits per word.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205467,"byte_end":205578,"line_start":133,"line_end":133,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205583,"byte_end":205586,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ `ss_change` changes how Slave Select behaves in between two segments (toggle SS), or after the final segment (keep SS active).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205591,"byte_end":205721,"line_start":135,"line_end":135,"column_start":5,"column_end":135}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205726,"byte_end":205729,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205734,"byte_end":205806,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":205811,"byte_end":205839,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207362,"byte_end":207365,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"len","qualname":"<Segment>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that will be transferred.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that will be transferred.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207022,"byte_end":207079,"line_start":182,"line_end":182,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207084,"byte_end":207087,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If both a read buffer and write buffer are supplied,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207092,"byte_end":207148,"line_start":184,"line_end":184,"column_start":5,"column_end":61}},{"value":"/ [`Spi::transfer_segments`] only transfers as many bytes as the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207153,"byte_end":207219,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/ shortest of the two buffers contains.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207224,"byte_end":207265,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207270,"byte_end":207273,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`Spi::transfer_segments`]: struct.Spi.html#method.transfer_segments","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207278,"byte_end":207350,"line_start":188,"line_end":188,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207493,"byte_end":207501,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Segment>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this segment won't transfer any bytes.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this segment won't transfer any bytes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207421,"byte_end":207481,"line_start":193,"line_end":193,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207627,"byte_end":207638,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<Segment>::clock_speed","value":"pub fn clock_speed(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the custom clock speed in hertz (Hz) for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the custom clock speed in hertz (Hz) for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207552,"byte_end":207615,"line_start":198,"line_end":198,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208019,"byte_end":208034,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"set_clock_speed","qualname":"<Segment>::set_clock_speed","value":"pub fn set_clock_speed(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom clock speed in hertz (Hz) for this segment.","sig":null,"attributes":[{"value":"/ Sets a custom clock speed in hertz (Hz) for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207688,"byte_end":207749,"line_start":203,"line_end":203,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207754,"byte_end":207757,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The SPI driver will automatically select the closest valid frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207762,"byte_end":207835,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207840,"byte_end":207843,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ By default, `clock_speed` is set to `0`, which means","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207848,"byte_end":207904,"line_start":207,"line_end":207,"column_start":5,"column_end":61}},{"value":"/ it will use the same value as configured for [`Spi`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207909,"byte_end":207966,"line_start":208,"line_end":208,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207971,"byte_end":207974,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":207979,"byte_end":208007,"line_start":210,"line_end":210,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208184,"byte_end":208189,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"delay","qualname":"<Segment>::delay","value":"pub fn delay(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the delay in microseconds (µs) for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the delay in microseconds (µs) for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208114,"byte_end":208172,"line_start":215,"line_end":215,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208481,"byte_end":208490,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"set_delay","qualname":"<Segment>::set_delay","value":"pub fn set_delay(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Sets a delay in microseconds (µs) for this segment.","sig":null,"attributes":[{"value":"/ Sets a delay in microseconds (µs) for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208242,"byte_end":208298,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208303,"byte_end":208306,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ `set_delay` adds a delay at the end of this segment,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208311,"byte_end":208367,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ before the (optional) Slave Select change.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208372,"byte_end":208418,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208423,"byte_end":208426,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ By default, `delay` is set to `0`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208431,"byte_end":208469,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208627,"byte_end":208640,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"bits_per_word","qualname":"<Segment>::bits_per_word","value":"pub fn bits_per_word(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of bits per word for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the number of bits per word for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208561,"byte_end":208615,"line_start":230,"line_end":230,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209004,"byte_end":209021,"line_start":243,"line_end":243,"column_start":12,"column_end":29},"name":"set_bits_per_word","qualname":"<Segment>::set_bits_per_word","value":"pub fn set_bits_per_word(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits per word for this segment.","sig":null,"attributes":[{"value":"/ Sets the number of bits per word for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208694,"byte_end":208748,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208753,"byte_end":208756,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208761,"byte_end":208818,"line_start":237,"line_end":237,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208823,"byte_end":208826,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ By default, `bits_per_word` is set to `0`, which means","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208831,"byte_end":208889,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/ it will use the same value as configured for [`Spi`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208894,"byte_end":208951,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208956,"byte_end":208959,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Spi`]: struct.Spi.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":208964,"byte_end":208992,"line_start":242,"line_end":242,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209180,"byte_end":209189,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"ss_change","qualname":"<Segment>::ss_change","value":"pub fn ss_change(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the state of Slave Select change for this segment.\n","sig":null,"attributes":[{"value":"/ Gets the state of Slave Select change for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209109,"byte_end":209168,"line_start":247,"line_end":247,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209702,"byte_end":209715,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"set_ss_change","qualname":"<Segment>::set_ss_change","value":"pub fn set_ss_change(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Changes Slave Select's behavior for this segment.","sig":null,"attributes":[{"value":"/ Changes Slave Select's behavior for this segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209246,"byte_end":209299,"line_start":252,"line_end":252,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209304,"byte_end":209307,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If `ss_change` is set to `true`, and this is not the last","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209312,"byte_end":209373,"line_start":254,"line_end":254,"column_start":5,"column_end":66}},{"value":"/ segment of the transfer, the Slave Select line will briefly","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209378,"byte_end":209441,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ change to inactive between this segment and the next.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209446,"byte_end":209503,"line_start":256,"line_end":256,"column_start":5,"column_end":62}},{"value":"/ If this is the last segment, setting `ss_change` to true will","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209508,"byte_end":209573,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ keep Slave Select active after the transfer ends.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209578,"byte_end":209631,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209636,"byte_end":209639,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ By default, `ss_change` is set to `false`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209644,"byte_end":209690,"line_start":260,"line_end":260,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174890,"byte_end":174892,"line_start":176,"line_end":176,"column_start":5,"column_end":7},"name":"Io","qualname":"::spi::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174871,"byte_end":174885,"line_start":175,"line_end":175,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175092,"byte_end":175115,"line_start":181,"line_end":181,"column_start":5,"column_end":28},"name":"BitsPerWordNotSupported","qualname":"::spi::Error::BitsPerWordNotSupported","value":"Error::BitsPerWordNotSupported(u8)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The specified number of bits per word is not supported.","sig":null,"attributes":[{"value":"/ The specified number of bits per word is not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174909,"byte_end":174968,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174973,"byte_end":174976,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words. Any other value","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174981,"byte_end":175054,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ will trigger this error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175059,"byte_end":175087,"line_start":180,"line_end":180,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175681,"byte_end":175701,"line_start":193,"line_end":193,"column_start":5,"column_end":25},"name":"BitOrderNotSupported","qualname":"::spi::Error::BitOrderNotSupported","value":"Error::BitOrderNotSupported(BitOrder)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The specified bit order is not supported.","sig":null,"attributes":[{"value":"/ The specified bit order is not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175125,"byte_end":175170,"line_start":182,"line_end":182,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175175,"byte_end":175178,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports the [`MsbFirst`] bit order. If you","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175183,"byte_end":175262,"line_start":184,"line_end":184,"column_start":5,"column_end":84}},{"value":"/ need the [`LsbFirst`] bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175267,"byte_end":175345,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175350,"byte_end":175423,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175428,"byte_end":175504,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175509,"byte_end":175539,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175544,"byte_end":175547,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [`MsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175552,"byte_end":175588,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ [`LsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175593,"byte_end":175629,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175634,"byte_end":175676,"line_start":192,"line_end":192,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175769,"byte_end":175791,"line_start":195,"line_end":195,"column_start":5,"column_end":27},"name":"ClockSpeedNotSupported","qualname":"::spi::Error::ClockSpeedNotSupported","value":"Error::ClockSpeedNotSupported(u32)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The specified clock speed is not supported.\n","sig":null,"attributes":[{"value":"/ The specified clock speed is not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175717,"byte_end":175764,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175847,"byte_end":175863,"line_start":197,"line_end":197,"column_start":5,"column_end":21},"name":"ModeNotSupported","qualname":"::spi::Error::ModeNotSupported","value":"Error::ModeNotSupported(Mode)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The specified mode is not supported.\n","sig":null,"attributes":[{"value":"/ The specified mode is not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175802,"byte_end":175842,"line_start":196,"line_end":196,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175937,"byte_end":175957,"line_start":199,"line_end":199,"column_start":5,"column_end":25},"name":"PolarityNotSupported","qualname":"::spi::Error::PolarityNotSupported","value":"Error::PolarityNotSupported(Polarity)","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The specified Slave Select polarity is not supported.\n","sig":null,"attributes":[{"value":"/ The specified Slave Select polarity is not supported.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175875,"byte_end":175932,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2266},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174859,"byte_end":174864,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"pub enum Error {\n    Io(io::Error),\n    BitsPerWordNotSupported(u8),\n    BitOrderNotSupported(BitOrder),\n    ClockSpeedNotSupported(u32),\n    ModeNotSupported(Mode),\n    PolarityNotSupported(Polarity),\n}","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2282}],"decl_id":null,"docs":" Errors that can occur when accessing the SPI peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the SPI peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":174772,"byte_end":174832,"line_start":172,"line_end":172,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1184},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177081,"byte_end":177087,"line_start":232,"line_end":232,"column_start":10,"column_end":16},"name":"Result","qualname":"::spi::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `spi::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `spi::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177005,"byte_end":177071,"line_start":231,"line_end":231,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177315,"byte_end":177327,"line_start":239,"line_end":239,"column_start":8,"column_end":20},"name":"reverse_bits","qualname":"::spi::reverse_bits","value":"pub fn reverse_bits(&mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Reverses the bits of each byte in `buffer`.","sig":null,"attributes":[{"value":"/ Reverses the bits of each byte in `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177120,"byte_end":177167,"line_start":234,"line_end":234,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177168,"byte_end":177171,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Use this function to switch the bit order between most-significant bit first","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177172,"byte_end":177252,"line_start":236,"line_end":236,"column_start":1,"column_end":81}},{"value":"/ and least-significant bit first.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177253,"byte_end":177289,"line_start":237,"line_end":237,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177290,"byte_end":177307,"line_start":238,"line_end":238,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2288},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177689,"byte_end":177693,"line_start":253,"line_end":253,"column_start":5,"column_end":9},"name":"Spi0","qualname":"::spi::Bus::Spi0","value":"Bus::Spi0","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2291},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177703,"byte_end":177707,"line_start":254,"line_end":254,"column_start":5,"column_end":9},"name":"Spi1","qualname":"::spi::Bus::Spi1","value":"Bus::Spi1","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177717,"byte_end":177721,"line_start":255,"line_end":255,"column_start":5,"column_end":9},"name":"Spi2","qualname":"::spi::Bus::Spi2","value":"Bus::Spi2","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177731,"byte_end":177735,"line_start":256,"line_end":256,"column_start":5,"column_end":9},"name":"Spi3","qualname":"::spi::Bus::Spi3","value":"Bus::Spi3","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177745,"byte_end":177749,"line_start":257,"line_end":257,"column_start":5,"column_end":9},"name":"Spi4","qualname":"::spi::Bus::Spi4","value":"Bus::Spi4","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177759,"byte_end":177763,"line_start":258,"line_end":258,"column_start":5,"column_end":9},"name":"Spi5","qualname":"::spi::Bus::Spi5","value":"Bus::Spi5","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177773,"byte_end":177777,"line_start":259,"line_end":259,"column_start":5,"column_end":9},"name":"Spi6","qualname":"::spi::Bus::Spi6","value":"Bus::Spi6","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2287},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177679,"byte_end":177682,"line_start":252,"line_end":252,"column_start":10,"column_end":13},"name":"Bus","qualname":"::spi::Bus","value":"pub enum Bus {\n    Spi0 = ,\n    Spi1 = ,\n    Spi2 = ,\n    Spi3 = ,\n    Spi4 = ,\n    Spi5 = ,\n    Spi6 = ,\n}","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306}],"decl_id":null,"docs":" SPI buses.","sig":null,"attributes":[{"value":"/ SPI buses.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177420,"byte_end":177434,"line_start":245,"line_end":245,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177435,"byte_end":177438,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi exposes up to five SPI buses, depending on the model and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177439,"byte_end":177516,"line_start":247,"line_end":247,"column_start":1,"column_end":78}},{"value":"/ your `/boot/config.txt` configuration. More information can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177517,"byte_end":177597,"line_start":248,"line_end":248,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177598,"byte_end":177601,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177602,"byte_end":177624,"line_start":250,"line_end":250,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178967,"byte_end":178970,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"Ss0","qualname":"::spi::SlaveSelect::Ss0","value":"SlaveSelect::Ss0","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178980,"byte_end":178983,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"Ss1","qualname":"::spi::SlaveSelect::Ss1","value":"SlaveSelect::Ss1","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2327},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178993,"byte_end":178996,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"Ss2","qualname":"::spi::SlaveSelect::Ss2","value":"SlaveSelect::Ss2","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179006,"byte_end":179009,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"Ss3","qualname":"::spi::SlaveSelect::Ss3","value":"SlaveSelect::Ss3","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2333},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179019,"byte_end":179022,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"Ss4","qualname":"::spi::SlaveSelect::Ss4","value":"SlaveSelect::Ss4","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179032,"byte_end":179035,"line_start":297,"line_end":297,"column_start":5,"column_end":8},"name":"Ss5","qualname":"::spi::SlaveSelect::Ss5","value":"SlaveSelect::Ss5","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2339},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179045,"byte_end":179048,"line_start":298,"line_end":298,"column_start":5,"column_end":8},"name":"Ss6","qualname":"::spi::SlaveSelect::Ss6","value":"SlaveSelect::Ss6","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2342},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179058,"byte_end":179061,"line_start":299,"line_end":299,"column_start":5,"column_end":8},"name":"Ss7","qualname":"::spi::SlaveSelect::Ss7","value":"SlaveSelect::Ss7","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2345},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179071,"byte_end":179074,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"Ss8","qualname":"::spi::SlaveSelect::Ss8","value":"SlaveSelect::Ss8","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179084,"byte_end":179087,"line_start":301,"line_end":301,"column_start":5,"column_end":8},"name":"Ss9","qualname":"::spi::SlaveSelect::Ss9","value":"SlaveSelect::Ss9","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2351},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179097,"byte_end":179101,"line_start":302,"line_end":302,"column_start":5,"column_end":9},"name":"Ss10","qualname":"::spi::SlaveSelect::Ss10","value":"SlaveSelect::Ss10","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2354},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179112,"byte_end":179116,"line_start":303,"line_end":303,"column_start":5,"column_end":9},"name":"Ss11","qualname":"::spi::SlaveSelect::Ss11","value":"SlaveSelect::Ss11","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2357},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179127,"byte_end":179131,"line_start":304,"line_end":304,"column_start":5,"column_end":9},"name":"Ss12","qualname":"::spi::SlaveSelect::Ss12","value":"SlaveSelect::Ss12","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2360},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179142,"byte_end":179146,"line_start":305,"line_end":305,"column_start":5,"column_end":9},"name":"Ss13","qualname":"::spi::SlaveSelect::Ss13","value":"SlaveSelect::Ss13","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2363},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179157,"byte_end":179161,"line_start":306,"line_end":306,"column_start":5,"column_end":9},"name":"Ss14","qualname":"::spi::SlaveSelect::Ss14","value":"SlaveSelect::Ss14","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2366},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179172,"byte_end":179176,"line_start":307,"line_end":307,"column_start":5,"column_end":9},"name":"Ss15","qualname":"::spi::SlaveSelect::Ss15","value":"SlaveSelect::Ss15","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2320},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178949,"byte_end":178960,"line_start":291,"line_end":291,"column_start":10,"column_end":21},"name":"SlaveSelect","qualname":"::spi::SlaveSelect","value":"pub enum SlaveSelect {\n    Ss0 = ,\n    Ss1 = ,\n    Ss2 = ,\n    Ss3 = ,\n    Ss4 = ,\n    Ss5 = ,\n    Ss6 = ,\n    Ss7 = ,\n    Ss8 = ,\n    Ss9 = ,\n    Ss10 = ,\n    Ss11 = ,\n    Ss12 = ,\n    Ss13 = ,\n    Ss14 = ,\n    Ss15 = ,\n}","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366}],"decl_id":null,"docs":" Slave Select pins.","sig":null,"attributes":[{"value":"/ Slave Select pins.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178226,"byte_end":178248,"line_start":276,"line_end":276,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178249,"byte_end":178252,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ Slave Select is used to signal which slave device should pay attention to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178253,"byte_end":178330,"line_start":278,"line_end":278,"column_start":1,"column_end":78}},{"value":"/ the SPI bus. Slave Select (SS) is the more commonly used name, but","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178331,"byte_end":178401,"line_start":279,"line_end":279,"column_start":1,"column_end":71}},{"value":"/ it's also known as Chip Select (CS) or Chip Enable (CE). Throughout the Raspberry","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178402,"byte_end":178487,"line_start":280,"line_end":280,"column_start":1,"column_end":86}},{"value":"/ Pi's documentation, config files and BCM2835 datasheet, multiple different names","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178488,"byte_end":178572,"line_start":281,"line_end":281,"column_start":1,"column_end":85}},{"value":"/ are used. Any pins referred to as CE0, CE1, and CE2 or CS0, CS1, and CS2 are equivalent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178573,"byte_end":178664,"line_start":282,"line_end":282,"column_start":1,"column_end":92}},{"value":"/ to `Ss0`, `Ss1`, and `Ss2`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178665,"byte_end":178696,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178697,"byte_end":178700,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The number of available Slave Select pins for the selected SPI bus depends","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178701,"byte_end":178779,"line_start":285,"line_end":285,"column_start":1,"column_end":79}},{"value":"/ on your `/boot/config.txt` configuration. More information can be found","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178780,"byte_end":178855,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178856,"byte_end":178867,"line_start":287,"line_end":287,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178868,"byte_end":178871,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":178872,"byte_end":178894,"line_start":289,"line_end":289,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180236,"byte_end":180245,"line_start":336,"line_end":336,"column_start":5,"column_end":14},"name":"ActiveLow","qualname":"::spi::Polarity::ActiveLow","value":"Polarity::ActiveLow","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180255,"byte_end":180265,"line_start":337,"line_end":337,"column_start":5,"column_end":15},"name":"ActiveHigh","qualname":"::spi::Polarity::ActiveHigh","value":"Polarity::ActiveHigh","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2380},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180221,"byte_end":180229,"line_start":335,"line_end":335,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::spi::Polarity","value":"pub enum Polarity { ActiveLow = , ActiveHigh = , }","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2384}],"decl_id":null,"docs":" Slave Select polarities.\n","sig":null,"attributes":[{"value":"/ Slave Select polarities.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180138,"byte_end":180166,"line_start":333,"line_end":333,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2399},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181295,"byte_end":181300,"line_start":370,"line_end":370,"column_start":5,"column_end":10},"name":"Mode0","qualname":"::spi::Mode::Mode0","value":"Mode::Mode0","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2402},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181310,"byte_end":181315,"line_start":371,"line_end":371,"column_start":5,"column_end":10},"name":"Mode1","qualname":"::spi::Mode::Mode1","value":"Mode::Mode1","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2405},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181325,"byte_end":181330,"line_start":372,"line_end":372,"column_start":5,"column_end":10},"name":"Mode2","qualname":"::spi::Mode::Mode2","value":"Mode::Mode2","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2408},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181340,"byte_end":181345,"line_start":373,"line_end":373,"column_start":5,"column_end":10},"name":"Mode3","qualname":"::spi::Mode::Mode3","value":"Mode::Mode3","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2398},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181284,"byte_end":181288,"line_start":369,"line_end":369,"column_start":10,"column_end":14},"name":"Mode","qualname":"::spi::Mode","value":"pub enum Mode { Mode0 = , Mode1 = , Mode2 = , Mode3 = , }","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408}],"decl_id":null,"docs":" SPI modes indicating the clock polarity and phase.","sig":null,"attributes":[{"value":"/ SPI modes indicating the clock polarity and phase.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180531,"byte_end":180585,"line_start":349,"line_end":349,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180586,"byte_end":180589,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ Select the appropriate SPI mode for your device. Each mode configures the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180590,"byte_end":180667,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ clock polarity (CPOL) and clock phase (CPHA) as shown below:","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180668,"byte_end":180732,"line_start":352,"line_end":352,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180733,"byte_end":180736,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ * Mode0: CPOL 0, CPHA 0","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180737,"byte_end":180764,"line_start":354,"line_end":354,"column_start":1,"column_end":28}},{"value":"/ * Mode1: CPOL 0, CPHA 1","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180765,"byte_end":180792,"line_start":355,"line_end":355,"column_start":1,"column_end":28}},{"value":"/ * Mode2: CPOL 1, CPHA 0","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180793,"byte_end":180820,"line_start":356,"line_end":356,"column_start":1,"column_end":28}},{"value":"/ * Mode3: CPOL 1, CPHA 1","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180821,"byte_end":180848,"line_start":357,"line_end":357,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180849,"byte_end":180852,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ The [`Spi0`] bus supports all 4 modes. [`Spi1`] and [`Spi2`] only support","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180853,"byte_end":180930,"line_start":359,"line_end":359,"column_start":1,"column_end":78}},{"value":"/ `Mode0` and `Mode2`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180931,"byte_end":180955,"line_start":360,"line_end":360,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180956,"byte_end":180959,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ More information on clock polarity and phase can be found on [Wikipedia].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180960,"byte_end":181037,"line_start":362,"line_end":362,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181038,"byte_end":181041,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ [`Spi0`]: enum.Bus.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181042,"byte_end":181069,"line_start":364,"line_end":364,"column_start":1,"column_end":28}},{"value":"/ [`Spi1`]: enum.Bus.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181070,"byte_end":181097,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/ [`Spi2`]: enum.Bus.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181098,"byte_end":181125,"line_start":366,"line_end":366,"column_start":1,"column_end":28}},{"value":"/ [Wikipedia]: https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus#Clock_polarity_and_phase","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181126,"byte_end":181229,"line_start":367,"line_end":367,"column_start":1,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182448,"byte_end":182456,"line_start":405,"line_end":405,"column_start":5,"column_end":13},"name":"MsbFirst","qualname":"::spi::BitOrder::MsbFirst","value":"BitOrder::MsbFirst","parent":{"krate":0,"index":2422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2426},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182466,"byte_end":182474,"line_start":406,"line_end":406,"column_start":5,"column_end":13},"name":"LsbFirst","qualname":"::spi::BitOrder::LsbFirst","value":"BitOrder::LsbFirst","parent":{"krate":0,"index":2422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2422},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182433,"byte_end":182441,"line_start":404,"line_end":404,"column_start":10,"column_end":18},"name":"BitOrder","qualname":"::spi::BitOrder","value":"pub enum BitOrder { MsbFirst = , LsbFirst = , }","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2426}],"decl_id":null,"docs":" Bit orders.","sig":null,"attributes":[{"value":"/ Bit orders.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181675,"byte_end":181690,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181691,"byte_end":181694,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The bit order determines in what order data is shifted out and shifted in.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181695,"byte_end":181773,"line_start":389,"line_end":389,"column_start":1,"column_end":79}},{"value":"/ Select the bit order that's appropriate for the device you're","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181774,"byte_end":181839,"line_start":390,"line_end":390,"column_start":1,"column_end":66}},{"value":"/ communicating with.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181840,"byte_end":181863,"line_start":391,"line_end":391,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181864,"byte_end":181867,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ `MsbFirst` will transfer the most-significant bit first. `LsbFirst` will","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181868,"byte_end":181944,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ transfer the least-significant bit first.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181945,"byte_end":181990,"line_start":394,"line_end":394,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181991,"byte_end":181994,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi currently only supports the `MsbFirst` bit order. If you","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181995,"byte_end":182072,"line_start":396,"line_end":396,"column_start":1,"column_end":78}},{"value":"/ need the `LsbFirst` bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182073,"byte_end":182149,"line_start":397,"line_end":397,"column_start":1,"column_end":77}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182150,"byte_end":182223,"line_start":398,"line_end":398,"column_start":1,"column_end":74}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182224,"byte_end":182300,"line_start":399,"line_end":399,"column_start":1,"column_end":77}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182301,"byte_end":182331,"line_start":400,"line_end":400,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182332,"byte_end":182335,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182336,"byte_end":182378,"line_start":402,"line_end":402,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183504,"byte_end":183507,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's SPI peripherals.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's SPI peripherals.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182734,"byte_end":182792,"line_start":418,"line_end":418,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182793,"byte_end":182796,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ Before using `Spi`, make sure your Raspberry Pi has the necessary SPI buses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182797,"byte_end":182876,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ and Slave Select pins enabled. More information can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182877,"byte_end":182949,"line_start":421,"line_end":421,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182950,"byte_end":182953,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`blocking::spi::Transfer<u8>`], [`blocking::spi::Write<u8>`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182954,"byte_end":183038,"line_start":423,"line_end":423,"column_start":1,"column_end":85}},{"value":"/ and [`spi::FullDuplex<u8>`] trait","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183039,"byte_end":183076,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/ implementations for `Spi` can be enabled by specifying the optional `hal`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183077,"byte_end":183154,"line_start":425,"line_end":425,"column_start":1,"column_end":78}},{"value":"/ feature in the dependency declaration for the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183155,"byte_end":183219,"line_start":426,"line_end":426,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183220,"byte_end":183223,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ [here]: index.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183224,"byte_end":183246,"line_start":428,"line_end":428,"column_start":1,"column_end":23}},{"value":"/ [`blocking::spi::Transfer<u8>`]: ../../embedded_hal/blocking/spi/trait.Transfer.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183247,"byte_end":183335,"line_start":429,"line_end":429,"column_start":1,"column_end":89}},{"value":"/ [`blocking::spi::Write<u8>`]: ../../embedded_hal/blocking/spi/trait.Write.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183336,"byte_end":183418,"line_start":430,"line_end":430,"column_start":1,"column_end":83}},{"value":"/ [`spi::FullDuplex<u8>`]: ../../embedded_hal/spi/trait.FullDuplex.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183419,"byte_end":183492,"line_start":431,"line_end":431,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184336,"byte_end":184339,"line_start":453,"line_end":453,"column_start":12,"column_end":15},"name":"new","qualname":"<Spi>::new","value":"pub fn new(Bus, SlaveSelect, u32, Mode) -> Result<Spi>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Spi`.","sig":null,"attributes":[{"value":"/ Constructs a new `Spi`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183947,"byte_end":183974,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183979,"byte_end":183982,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ `bus` and `slave_select` specify the selected SPI bus and one of its","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183987,"byte_end":184059,"line_start":446,"line_end":446,"column_start":5,"column_end":77}},{"value":"/ associated Slave Select pins.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184064,"byte_end":184097,"line_start":447,"line_end":447,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184102,"byte_end":184105,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ `clock_speed` defines the maximum clock frequency in hertz (Hz). The SPI driver","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184110,"byte_end":184193,"line_start":449,"line_end":449,"column_start":5,"column_end":88}},{"value":"/ will automatically round down to the closest valid frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184198,"byte_end":184263,"line_start":450,"line_end":450,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184268,"byte_end":184271,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ `mode` selects the clock polarity and phase.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":184276,"byte_end":184324,"line_start":452,"line_end":452,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":185841,"byte_end":185850,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"bit_order","qualname":"<Spi>::bit_order","value":"pub fn bit_order(&Self) -> Result<BitOrder>","parent":null,"children":[],"decl_id":null,"docs":" Gets the bit order.\n","sig":null,"attributes":[{"value":"/ Gets the bit order.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":185806,"byte_end":185829,"line_start":492,"line_end":492,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186745,"byte_end":186758,"line_start":516,"line_end":516,"column_start":12,"column_end":25},"name":"set_bit_order","qualname":"<Spi>::set_bit_order","value":"pub fn set_bit_order(&Self, BitOrder) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the order in which bits are shifted out and in.","sig":null,"attributes":[{"value":"/ Sets the order in which bits are shifted out and in.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186109,"byte_end":186165,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186170,"byte_end":186173,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports the [`MsbFirst`] bit order. If you","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186178,"byte_end":186257,"line_start":505,"line_end":505,"column_start":5,"column_end":84}},{"value":"/ need the [`LsbFirst`] bit order, you can use the [`reverse_bits`] function","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186262,"byte_end":186340,"line_start":506,"line_end":506,"column_start":5,"column_end":83}},{"value":"/ instead to reverse the bit order in software by converting your write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186345,"byte_end":186418,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ buffer before sending it to the slave device, and your read buffer after","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186423,"byte_end":186499,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ reading any incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186504,"byte_end":186534,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186539,"byte_end":186542,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ By default, `bit_order` is set to `MsbFirst`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186547,"byte_end":186596,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186601,"byte_end":186604,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ [`MsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186609,"byte_end":186645,"line_start":513,"line_end":513,"column_start":5,"column_end":41}},{"value":"/ [`LsbFirst`]: enum.BitOrder.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186650,"byte_end":186686,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/ [`reverse_bits`]: fn.reverse_bits.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":186691,"byte_end":186733,"line_start":515,"line_end":515,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187167,"byte_end":187180,"line_start":527,"line_end":527,"column_start":12,"column_end":25},"name":"bits_per_word","qualname":"<Spi>::bits_per_word","value":"pub fn bits_per_word(&Self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of bits per word.\n","sig":null,"attributes":[{"value":"/ Gets the number of bits per word.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187118,"byte_end":187155,"line_start":526,"line_end":526,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187533,"byte_end":187550,"line_start":539,"line_end":539,"column_start":12,"column_end":29},"name":"set_bits_per_word","qualname":"<Spi>::set_bits_per_word","value":"pub fn set_bits_per_word(&Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits per word.","sig":null,"attributes":[{"value":"/ Sets the number of bits per word.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187357,"byte_end":187394,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187399,"byte_end":187402,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The Raspberry Pi currently only supports 8 bit words.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187407,"byte_end":187464,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187469,"byte_end":187472,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ By default, `bits_per_word` is set to 8.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187477,"byte_end":187521,"line_start":538,"line_end":538,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187972,"byte_end":187983,"line_start":550,"line_end":550,"column_start":12,"column_end":23},"name":"clock_speed","qualname":"<Spi>::clock_speed","value":"pub fn clock_speed(&Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the clock frequency in hertz (Hz).\n","sig":null,"attributes":[{"value":"/ Gets the clock frequency in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":187917,"byte_end":187960,"line_start":549,"line_end":549,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188302,"byte_end":188317,"line_start":560,"line_end":560,"column_start":12,"column_end":27},"name":"set_clock_speed","qualname":"<Spi>::set_clock_speed","value":"pub fn set_clock_speed(&Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the clock frequency in hertz (Hz).","sig":null,"attributes":[{"value":"/ Sets the clock frequency in hertz (Hz).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188154,"byte_end":188197,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188202,"byte_end":188205,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The SPI driver will automatically round down to the closest valid frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188210,"byte_end":188290,"line_start":559,"line_end":559,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188710,"byte_end":188714,"line_start":571,"line_end":571,"column_start":12,"column_end":16},"name":"mode","qualname":"<Spi>::mode","value":"pub fn mode(&Self) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Gets the SPI mode.\n","sig":null,"attributes":[{"value":"/ Gets the SPI mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":188676,"byte_end":188698,"line_start":570,"line_end":570,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189199,"byte_end":189207,"line_start":587,"line_end":587,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<Spi>::set_mode","value":"pub fn set_mode(&Self, Mode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the SPI mode.","sig":null,"attributes":[{"value":"/ Sets the SPI mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189011,"byte_end":189033,"line_start":583,"line_end":583,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189038,"byte_end":189041,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The SPI mode indicates the serial clock polarity and phase. Some modes","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189046,"byte_end":189120,"line_start":585,"line_end":585,"column_start":5,"column_end":79}},{"value":"/ may not be available depending on the SPI bus that's used.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189125,"byte_end":189187,"line_start":586,"line_end":586,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189792,"byte_end":189803,"line_start":604,"line_end":604,"column_start":12,"column_end":23},"name":"ss_polarity","qualname":"<Spi>::ss_polarity","value":"pub fn ss_polarity(&Self) -> Result<Polarity>","parent":null,"children":[],"decl_id":null,"docs":" Gets the Slave Select polarity.\n","sig":null,"attributes":[{"value":"/ Gets the Slave Select polarity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":189745,"byte_end":189780,"line_start":603,"line_end":603,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190200,"byte_end":190215,"line_start":618,"line_end":618,"column_start":12,"column_end":27},"name":"set_ss_polarity","qualname":"<Spi>::set_ss_polarity","value":"pub fn set_ss_polarity(&Self, Polarity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets Slave Select polarity.","sig":null,"attributes":[{"value":"/ Sets Slave Select polarity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190080,"byte_end":190111,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190116,"byte_end":190119,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ By default, the Slave Select polarity is set to `ActiveLow`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190124,"byte_end":190188,"line_start":617,"line_end":617,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191417,"byte_end":191421,"line_start":650,"line_end":650,"column_start":12,"column_end":16},"name":"read","qualname":"<Spi>::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the slave device and writes it to `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the slave device and writes it to `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190823,"byte_end":190898,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190903,"byte_end":190906,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The SPI protocol doesn't indicate how much incoming data is waiting,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190911,"byte_end":190983,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ so the total number of bytes read depends on the length of `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":190988,"byte_end":191060,"line_start":640,"line_end":640,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191065,"byte_end":191068,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ During the read, the MOSI line is kept in a state that results in a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191073,"byte_end":191144,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ zero value byte shifted out for every byte `read` receives on the MISO","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191149,"byte_end":191223,"line_start":643,"line_end":643,"column_start":5,"column_end":79}},{"value":"/ line.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191228,"byte_end":191237,"line_start":644,"line_end":644,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191242,"byte_end":191245,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the read, and inactive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191250,"byte_end":191322,"line_start":646,"line_end":646,"column_start":5,"column_end":77}},{"value":"/ when the read completes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191327,"byte_end":191355,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191360,"byte_end":191363,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191368,"byte_end":191405,"line_start":649,"line_end":649,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191853,"byte_end":191858,"line_start":662,"line_end":662,"column_start":12,"column_end":17},"name":"write","qualname":"<Spi>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the outgoing data contained in `buffer` to the slave device.","sig":null,"attributes":[{"value":"/ Sends the outgoing data contained in `buffer` to the slave device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191520,"byte_end":191590,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191595,"byte_end":191598,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Any data received on the MISO line from the slave is ignored.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191603,"byte_end":191668,"line_start":656,"line_end":656,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191673,"byte_end":191676,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the write, and inactive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191681,"byte_end":191754,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ when the write completes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191759,"byte_end":191788,"line_start":659,"line_end":659,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191793,"byte_end":191796,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191801,"byte_end":191841,"line_start":661,"line_end":661,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192664,"byte_end":192672,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"transfer","qualname":"<Spi>::transfer","value":"pub fn transfer(&Self, &mut [u8], &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends and receives data at the same time.","sig":null,"attributes":[{"value":"/ Sends and receives data at the same time.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":191954,"byte_end":191999,"line_start":666,"line_end":666,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192004,"byte_end":192007,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ SPI is a full-duplex protocol that shifts out bits to the slave device","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192012,"byte_end":192086,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"/ on the MOSI line while simultaneously shifting in bits it receives on","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192091,"byte_end":192164,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ the MISO line. `transfer` stores the incoming data in `read_buffer`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192169,"byte_end":192241,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ and sends the outgoing data contained in `write_buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192246,"byte_end":192306,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192311,"byte_end":192314,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ Because data is sent and received simultaneously, `transfer` will only","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192319,"byte_end":192393,"line_start":673,"line_end":673,"column_start":5,"column_end":79}},{"value":"/ transfer as many bytes as the shortest of the two buffers contains.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192398,"byte_end":192469,"line_start":674,"line_end":674,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192474,"byte_end":192477,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Slave Select is set to active at the start of the transfer, and inactive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192482,"byte_end":192558,"line_start":676,"line_end":676,"column_start":5,"column_end":81}},{"value":"/ when the transfer completes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192563,"byte_end":192595,"line_start":677,"line_end":677,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192600,"byte_end":192603,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were transferred.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192608,"byte_end":192652,"line_start":679,"line_end":679,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193567,"byte_end":193584,"line_start":700,"line_end":700,"column_start":12,"column_end":29},"name":"transfer_segments","qualname":"<Spi>::transfer_segments","value":"pub fn transfer_segments(&Self, &[Segment]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Transfers multiple half-duplex or full-duplex segments.","sig":null,"attributes":[{"value":"/ Transfers multiple half-duplex or full-duplex segments.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192909,"byte_end":192968,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192973,"byte_end":192976,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `transfer_segments` transfers multiple segments in a single call. Each","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":192981,"byte_end":193055,"line_start":690,"line_end":690,"column_start":5,"column_end":79}},{"value":"/ [`Segment`] contains a reference to either a read buffer or a write buffer,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193060,"byte_end":193139,"line_start":691,"line_end":691,"column_start":5,"column_end":84}},{"value":"/ or both. Optional settings can be configured that override the SPI bus","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193144,"byte_end":193218,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ settings for that specific segment.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193223,"byte_end":193262,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193267,"byte_end":193270,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ By default, Slave Select stays active until all segments have been","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193275,"byte_end":193345,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ transferred. You can change this behavior using [`Segment::set_ss_change`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193350,"byte_end":193429,"line_start":696,"line_end":696,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193434,"byte_end":193437,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ [`Segment`]: struct.Segment.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193442,"byte_end":193478,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ [`Segment::set_ss_change`]: struct.Segment.html#method.set_ss_change","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193483,"byte_end":193555,"line_start":699,"line_end":699,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1219},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"system","qualname":"::system","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":2445},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":1251},{"krate":0,"index":2493},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":2515},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":1258}],"decl_id":null,"docs":" Raspberry Pi system-related tools.","sig":null,"attributes":[{"value":"/ Raspberry Pi system-related tools.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":211552,"byte_end":211590,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":211591,"byte_end":211594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Use [`DeviceInfo`] to identify the Raspberry Pi's model and SoC.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":211595,"byte_end":211663,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":211664,"byte_end":211667,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`DeviceInfo`]: struct.DeviceInfo.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":211668,"byte_end":211710,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212759,"byte_end":212771,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"UnknownModel","qualname":"::system::Error::UnknownModel","value":"Error::UnknownModel","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":" Unknown model.","sig":null,"attributes":[{"value":"/ Unknown model.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212119,"byte_end":212137,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212142,"byte_end":212145,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `DeviceInfo` was unable to identify the Raspberry Pi model based on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212150,"byte_end":212225,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ contents of `/proc/cpuinfo`, `/sys/firmware/devicetree/base/compatible`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212230,"byte_end":212305,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ and `/sys/firmware/devicetree/base/model`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212310,"byte_end":212356,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212361,"byte_end":212364,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Support for new models is usually added shortly after they are officially","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212369,"byte_end":212446,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ announced and available to the public. Make sure you're using the latest","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212451,"byte_end":212527,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ release of RPPAL.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212532,"byte_end":212553,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212558,"byte_end":212561,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ You may also encounter this error if your Linux distribution","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212566,"byte_end":212630,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/ doesn't provide any of the common user-accessible system files","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212635,"byte_end":212701,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ that are used to identify the model and SoC.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212706,"byte_end":212754,"line_start":54,"line_end":54,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2440},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212107,"byte_end":212112,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Error","qualname":"::system::Error","value":"pub enum Error { UnknownModel, }","parent":null,"children":[{"krate":0,"index":2441}],"decl_id":null,"docs":" Errors that can occur when trying to identify the Raspberry Pi hardware.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when trying to identify the Raspberry Pi hardware.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212004,"byte_end":212080,"line_start":39,"line_end":39,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1249},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213097,"byte_end":213103,"line_start":69,"line_end":69,"column_start":10,"column_end":16},"name":"Result","qualname":"::system::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `system::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `system::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213018,"byte_end":213087,"line_start":68,"line_end":68,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2446},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213460,"byte_end":213472,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"RaspberryPiA","qualname":"::system::Model::RaspberryPiA","value":"Model::RaspberryPiA","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2448},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213478,"byte_end":213494,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"RaspberryPiAPlus","qualname":"::system::Model::RaspberryPiAPlus","value":"Model::RaspberryPiAPlus","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213500,"byte_end":213516,"line_start":81,"line_end":81,"column_start":5,"column_end":21},"name":"RaspberryPiBRev1","qualname":"::system::Model::RaspberryPiBRev1","value":"Model::RaspberryPiBRev1","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213522,"byte_end":213538,"line_start":82,"line_end":82,"column_start":5,"column_end":21},"name":"RaspberryPiBRev2","qualname":"::system::Model::RaspberryPiBRev2","value":"Model::RaspberryPiBRev2","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2454},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213544,"byte_end":213560,"line_start":83,"line_end":83,"column_start":5,"column_end":21},"name":"RaspberryPiBPlus","qualname":"::system::Model::RaspberryPiBPlus","value":"Model::RaspberryPiBPlus","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213566,"byte_end":213579,"line_start":84,"line_end":84,"column_start":5,"column_end":18},"name":"RaspberryPi2B","qualname":"::system::Model::RaspberryPi2B","value":"Model::RaspberryPi2B","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2458},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213585,"byte_end":213602,"line_start":85,"line_end":85,"column_start":5,"column_end":22},"name":"RaspberryPi3APlus","qualname":"::system::Model::RaspberryPi3APlus","value":"Model::RaspberryPi3APlus","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213608,"byte_end":213621,"line_start":86,"line_end":86,"column_start":5,"column_end":18},"name":"RaspberryPi3B","qualname":"::system::Model::RaspberryPi3B","value":"Model::RaspberryPi3B","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213627,"byte_end":213644,"line_start":87,"line_end":87,"column_start":5,"column_end":22},"name":"RaspberryPi3BPlus","qualname":"::system::Model::RaspberryPi3BPlus","value":"Model::RaspberryPi3BPlus","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2464},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213650,"byte_end":213663,"line_start":88,"line_end":88,"column_start":5,"column_end":18},"name":"RaspberryPi4B","qualname":"::system::Model::RaspberryPi4B","value":"Model::RaspberryPi4B","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213669,"byte_end":213683,"line_start":89,"line_end":89,"column_start":5,"column_end":19},"name":"RaspberryPi400","qualname":"::system::Model::RaspberryPi400","value":"Model::RaspberryPi400","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2468},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213689,"byte_end":213713,"line_start":90,"line_end":90,"column_start":5,"column_end":29},"name":"RaspberryPiComputeModule","qualname":"::system::Model::RaspberryPiComputeModule","value":"Model::RaspberryPiComputeModule","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2470},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213719,"byte_end":213744,"line_start":91,"line_end":91,"column_start":5,"column_end":30},"name":"RaspberryPiComputeModule3","qualname":"::system::Model::RaspberryPiComputeModule3","value":"Model::RaspberryPiComputeModule3","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2472},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213750,"byte_end":213779,"line_start":92,"line_end":92,"column_start":5,"column_end":34},"name":"RaspberryPiComputeModule3Plus","qualname":"::system::Model::RaspberryPiComputeModule3Plus","value":"Model::RaspberryPiComputeModule3Plus","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2474},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213785,"byte_end":213810,"line_start":93,"line_end":93,"column_start":5,"column_end":30},"name":"RaspberryPiComputeModule4","qualname":"::system::Model::RaspberryPiComputeModule4","value":"Model::RaspberryPiComputeModule4","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2476},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213816,"byte_end":213831,"line_start":94,"line_end":94,"column_start":5,"column_end":20},"name":"RaspberryPiZero","qualname":"::system::Model::RaspberryPiZero","value":"Model::RaspberryPiZero","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213837,"byte_end":213853,"line_start":95,"line_end":95,"column_start":5,"column_end":21},"name":"RaspberryPiZeroW","qualname":"::system::Model::RaspberryPiZeroW","value":"Model::RaspberryPiZeroW","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213859,"byte_end":213876,"line_start":96,"line_end":96,"column_start":5,"column_end":22},"name":"RaspberryPiZero2W","qualname":"::system::Model::RaspberryPiZero2W","value":"Model::RaspberryPiZero2W","parent":{"krate":0,"index":2445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2445},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213448,"byte_end":213453,"line_start":78,"line_end":78,"column_start":10,"column_end":15},"name":"Model","qualname":"::system::Model","value":"pub enum Model {\n    RaspberryPiA,\n    RaspberryPiAPlus,\n    RaspberryPiBRev1,\n    RaspberryPiBRev2,\n    RaspberryPiBPlus,\n    RaspberryPi2B,\n    RaspberryPi3APlus,\n    RaspberryPi3B,\n    RaspberryPi3BPlus,\n    RaspberryPi4B,\n    RaspberryPi400,\n    RaspberryPiComputeModule,\n    RaspberryPiComputeModule3,\n    RaspberryPiComputeModule3Plus,\n    RaspberryPiComputeModule4,\n    RaspberryPiZero,\n    RaspberryPiZeroW,\n    RaspberryPiZero2W,\n}","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480}],"decl_id":null,"docs":" Identifiable Raspberry Pi models.","sig":null,"attributes":[{"value":"/ Identifiable Raspberry Pi models.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213136,"byte_end":213173,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213174,"byte_end":213177,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `Model` might be extended with additional variants in a minor or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213178,"byte_end":213246,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213247,"byte_end":213312,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213313,"byte_end":213375,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"non_exhaustive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213421,"byte_end":213438,"line_start":77,"line_end":77,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2494},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215685,"byte_end":215692,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"Bcm2835","qualname":"::system::SoC::Bcm2835","value":"SoC::Bcm2835","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2496},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215698,"byte_end":215705,"line_start":133,"line_end":133,"column_start":5,"column_end":12},"name":"Bcm2836","qualname":"::system::SoC::Bcm2836","value":"SoC::Bcm2836","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2498},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215711,"byte_end":215720,"line_start":134,"line_end":134,"column_start":5,"column_end":14},"name":"Bcm2837A1","qualname":"::system::SoC::Bcm2837A1","value":"SoC::Bcm2837A1","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2500},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215726,"byte_end":215735,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"Bcm2837B0","qualname":"::system::SoC::Bcm2837B0","value":"SoC::Bcm2837B0","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215741,"byte_end":215748,"line_start":136,"line_end":136,"column_start":5,"column_end":12},"name":"Bcm2711","qualname":"::system::SoC::Bcm2711","value":"SoC::Bcm2711","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2493},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215675,"byte_end":215678,"line_start":131,"line_end":131,"column_start":10,"column_end":13},"name":"SoC","qualname":"::system::SoC","value":"pub enum SoC { Bcm2835, Bcm2836, Bcm2837A1, Bcm2837B0, Bcm2711, }","parent":null,"children":[{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502}],"decl_id":null,"docs":" Identifiable Raspberry Pi SoCs.","sig":null,"attributes":[{"value":"/ Identifiable Raspberry Pi SoCs.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215367,"byte_end":215402,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215403,"byte_end":215406,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ `SoC` might be extended with additional variants in a minor or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215407,"byte_end":215473,"line_start":126,"line_end":126,"column_start":1,"column_end":67}},{"value":"/ patch revision, and must not be exhaustively matched against.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215474,"byte_end":215539,"line_start":127,"line_end":127,"column_start":1,"column_end":66}},{"value":"/ Instead, add a `_` catch-all arm to match future variants.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215540,"byte_end":215602,"line_start":128,"line_end":128,"column_start":1,"column_end":63}},{"value":"non_exhaustive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215648,"byte_end":215665,"line_start":130,"line_end":130,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223627,"byte_end":223637,"line_start":311,"line_end":311,"column_start":12,"column_end":22},"name":"DeviceInfo","qualname":"::system::DeviceInfo","value":"DeviceInfo {  }","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519}],"decl_id":null,"docs":" Retrieves Raspberry Pi device information.\n","sig":null,"attributes":[{"value":"/ Retrieves Raspberry Pi device information.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223524,"byte_end":223570,"line_start":309,"line_end":309,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":224011,"byte_end":224014,"line_start":324,"line_end":324,"column_start":12,"column_end":15},"name":"new","qualname":"<DeviceInfo>::new","value":"pub fn new() -> Result<DeviceInfo>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `DeviceInfo`.","sig":null,"attributes":[{"value":"/ Constructs a new `DeviceInfo`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223745,"byte_end":223779,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223784,"byte_end":223787,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify the Raspberry Pi's model and SoC based on","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223792,"byte_end":223864,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ the contents of `/proc/cpuinfo`, `/sys/firmware/devicetree/base/compatible`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223869,"byte_end":223948,"line_start":322,"line_end":322,"column_start":5,"column_end":84}},{"value":"/ and `/sys/firmware/devicetree/base/model`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223953,"byte_end":223999,"line_start":323,"line_end":323,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":226084,"byte_end":226089,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"model","qualname":"<DeviceInfo>::model","value":"pub fn model(&Self) -> Model","parent":null,"children":[],"decl_id":null,"docs":" Returns the Raspberry Pi's model.\n","sig":null,"attributes":[{"value":"/ Returns the Raspberry Pi's model.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":226035,"byte_end":226072,"line_start":377,"line_end":377,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":226185,"byte_end":226188,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"soc","qualname":"<DeviceInfo>::soc","value":"pub fn soc(&Self) -> SoC","parent":null,"children":[],"decl_id":null,"docs":" Returns the Raspberry Pi's SoC.\n","sig":null,"attributes":[{"value":"/ Returns the Raspberry Pi's SoC.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":226138,"byte_end":226173,"line_start":382,"line_end":382,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":1266},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uart","qualname":"::uart","value":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":2532},{"krate":0,"index":2541},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":2543},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":1674},{"krate":0,"index":2565},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":1676},{"krate":0,"index":2585},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1689},{"krate":0,"index":2603},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":1691}],"decl_id":null,"docs":" Interface for the UART peripherals and any USB to serial adapters.","sig":null,"attributes":[{"value":"/ Interface for the UART peripherals and any USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227663,"byte_end":227733,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227734,"byte_end":227737,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ RPPAL controls the Raspberry Pi's UART peripherals through the `ttyAMA0`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227738,"byte_end":227814,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ (PL011) and `ttyS0` (mini UART) character devices. USB to serial adapters","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227815,"byte_end":227892,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ are controlled using the `ttyUSBx` and `ttyACMx` character devices.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227893,"byte_end":227964,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227965,"byte_end":227968,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## UART peripherals","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227969,"byte_end":227992,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227993,"byte_end":227996,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The Raspberry Pi's BCM283x SoC features two UART peripherals.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":227997,"byte_end":228062,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ `/dev/ttyAMA0` represents the PL011 UART, which offers a full set of","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228063,"byte_end":228135,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ features. `/dev/ttyS0` represents an auxiliary peripheral that's referred","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228136,"byte_end":228213,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ to as mini UART, with limited capabilities. More details on the differences","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228214,"byte_end":228293,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ between the PL011 and mini UART can be found in the official Raspberry Pi","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228294,"byte_end":228371,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ [documentation].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228372,"byte_end":228392,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228393,"byte_end":228396,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ On earlier Raspberry Pi models without Bluetooth, `/dev/ttyAMA0` is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228397,"byte_end":228468,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ configured as a Linux serial console. On more recent models with Bluetooth,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228469,"byte_end":228548,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ `/dev/ttyAMA0` is connected to the Bluetooth","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228549,"byte_end":228597,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/ module, and `/dev/ttyS0` is used as a serial console instead. Due to the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228598,"byte_end":228674,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ limitations of `/dev/ttyS0` and the requirement for a fixed core frequency,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228675,"byte_end":228754,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ in most cases you'll want to use `/dev/ttyAMA0` for serial communication.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228755,"byte_end":228832,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228833,"byte_end":228836,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ By default, TX (outgoing data) is tied to BCM GPIO 14 (physical pin 8) and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228837,"byte_end":228915,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ RX (incoming data) is tied to BCM GPIO 15 (physical pin 10). You can move","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228916,"byte_end":228993,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ these lines to different GPIO pins using the `uart0` and `uart1` overlays,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":228994,"byte_end":229072,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ but the alternative pin options aren't exposed through the GPIO header on","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229073,"byte_end":229150,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ any of the current Raspberry Pi models. They are only available on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229151,"byte_end":229225,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ Compute Module's SO-DIMM pads.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229226,"byte_end":229260,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229261,"byte_end":229264,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Configure `/dev/ttyAMA0` for serial communication (recommended)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229265,"byte_end":229335,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229336,"byte_end":229339,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Disable the Linux serial console by either deactivating it through","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229340,"byte_end":229410,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ `sudo raspi-config`, or manually removing the parameter","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229411,"byte_end":229470,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ `console=serial0,115200` from `/boot/cmdline.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229471,"byte_end":229525,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229526,"byte_end":229529,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Remove any lines containing `enable_uart=0` or `enable_uart=1` from","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229530,"byte_end":229601,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229602,"byte_end":229625,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229626,"byte_end":229629,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ On Raspberry Pi models with a Bluetooth module, an extra step is required","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229630,"byte_end":229707,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ to either disable Bluetooth or move it to `/dev/ttyS0`, so `/dev/ttyAMA0`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229708,"byte_end":229785,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ becomes available for serial communication.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229786,"byte_end":229833,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229834,"byte_end":229837,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ To disable Bluetooth, add `dtoverlay=pi3-disable-bt` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229838,"byte_end":229917,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ You'll also need to disable the service that initializes Bluetooth with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229918,"byte_end":229993,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ `sudo systemctl disable hciuart`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":229994,"byte_end":230031,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230032,"byte_end":230035,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ To move the Bluetooth module to `/dev/ttyS0`, instead of disabling it with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230036,"byte_end":230114,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the above-mentioned steps, add `dtoverlay=pi3-miniuart-bt` and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230115,"byte_end":230181,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ `core_freq=250` to `/boot/config.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230182,"byte_end":230224,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230225,"byte_end":230228,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Remember to reboot the Raspberry Pi after making any changes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230229,"byte_end":230294,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230295,"byte_end":230298,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Configure `/dev/ttyS0` for serial communication","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230299,"byte_end":230353,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230354,"byte_end":230357,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ If you prefer to leave the Bluetooth module connected to `/dev/ttyAMA0`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230358,"byte_end":230434,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ you can configure `/dev/ttyS0` for serial communication instead.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230435,"byte_end":230503,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230504,"byte_end":230507,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Disable the Linux serial console by either deactivating it through","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230508,"byte_end":230578,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ `sudo raspi-config`, or manually removing the parameter","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230579,"byte_end":230638,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/ `console=serial0,115200` from `/boot/cmdline.txt`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230639,"byte_end":230693,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230694,"byte_end":230697,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Add the line `enable_uart=1` to `/boot/config.txt` to enable serial","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230698,"byte_end":230769,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/ communication on `/dev/ttyS0`, which also sets a fixed core frequency.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230770,"byte_end":230844,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230845,"byte_end":230848,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Remember to reboot the Raspberry Pi after making any changes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230849,"byte_end":230914,"line_start":85,"line_end":85,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230915,"byte_end":230918,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## USB to serial adapters","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230919,"byte_end":230948,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230949,"byte_end":230952,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ In addition to controlling the hardware UART peripherals, [`Uart`] can","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":230953,"byte_end":231027,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ also be used for USB to serial adapters. Depending on the type of","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231028,"byte_end":231097,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ device, these can be accessed either through `/dev/ttyUSBx` or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231098,"byte_end":231164,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ `/dev/ttyACMx`, where `x` is an index starting at `0`. The numbering is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231165,"byte_end":231240,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ based on the order in which the devices are discovered by the kernel.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231241,"byte_end":231314,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231315,"byte_end":231318,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ When you have multiple USB to serial adapters connected at the same time,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231319,"byte_end":231396,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ you can uniquely identify a specific device by searching for the relevant","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231397,"byte_end":231474,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ symlink in the `/dev/serial/by-id` directory, or by adding your own","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231475,"byte_end":231546,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ `udev` rules.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231547,"byte_end":231564,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231565,"byte_end":231568,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Support for automatic software (XON/XOFF) and hardware (RTS/CTS) flow","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231569,"byte_end":231642,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ control for USB to serial adapters depends on the USB interface IC on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231643,"byte_end":231720,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ device, and the relevant Linux driver. Some ICs use an older,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231721,"byte_end":231786,"line_start":102,"line_end":102,"column_start":1,"column_end":66}},{"value":"/ incompatible RTS/CTS implementation, sometimes referred to as legacy or","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231787,"byte_end":231862,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ simplex mode, where RTS is used to indicate data is about to be","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231863,"byte_end":231930,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/ transmitted, rather than to request the external device to resume its","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":231931,"byte_end":232004,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ transmission.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232005,"byte_end":232022,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232023,"byte_end":232026,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Hardware flow control","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232027,"byte_end":232055,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232056,"byte_end":232059,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The RTS/CTS hardware flow control implementation supported by [`Uart`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232060,"byte_end":232134,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ and used by the Raspberry Pi's UART peripherals requires RTS on one","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232135,"byte_end":232206,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ device to be connected to CTS on the other device. The RTS signal is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232207,"byte_end":232279,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/ used to request the other device to pause or resume its transmission.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232280,"byte_end":232353,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232354,"byte_end":232357,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Some devices use an older, incompatible RTS/CTS implementation, sometimes","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232358,"byte_end":232435,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/ referred to as legacy or simplex mode, where RTS is connected to RTS, and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232436,"byte_end":232513,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ CTS to CTS. The RTS signal is used to indicate data is about to be","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232514,"byte_end":232584,"line_start":117,"line_end":117,"column_start":1,"column_end":71}},{"value":"/ transmitted. [`Uart`] is not compatible with this implementation.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232585,"byte_end":232654,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ Connecting the Raspberry Pi's RTS and CTS pins incorrectly could damage","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232655,"byte_end":232730,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ the Pi or the external device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232731,"byte_end":232765,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232766,"byte_end":232769,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ When [`Uart`] is controlling a UART peripheral, enabling hardware flow","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232770,"byte_end":232844,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ control will also configure the RTS and CTS pins. On Raspberry Pi models","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232845,"byte_end":232921,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ with a 40-pin GPIO header, RTS is tied to BCM GPIO 17 (physical pin 11)","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232922,"byte_end":232997,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/ and CTS is tied to BCM GPIO 16 (physical pin 36). RTS and CTS aren't","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":232998,"byte_end":233070,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ available on models with a 26-pin header, except for the Raspberry Pi B","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233071,"byte_end":233146,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ Rev 2, which exposes RTS and CTS through its unpopulated P5 header with","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233147,"byte_end":233222,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ RTS on BCM GPIO 31 (physical pin 6) and CTS on BCM GPIO 30 (physical pin","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233223,"byte_end":233299,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ 5).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233300,"byte_end":233307,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233308,"byte_end":233311,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The RTS and CTS pins are reset to their original state when [`Uart`] goes","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233312,"byte_end":233389,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ out of scope. Note that `drop` methods aren't called when a process is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233390,"byte_end":233464,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ abnormally terminated, for instance when a user presses <kbd>Ctrl</kbd> +","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233465,"byte_end":233542,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ <kbd>C</kbd> and the `SIGINT` signal isn't caught, which prevents [`Uart`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233543,"byte_end":233621,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ from resetting the pins. You can catch those using crates such as","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233622,"byte_end":233691,"line_start":135,"line_end":135,"column_start":1,"column_end":70}},{"value":"/ [`simple_signal`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233692,"byte_end":233714,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233715,"byte_end":233718,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Troubleshooting","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233719,"byte_end":233741,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233742,"byte_end":233745,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ### Permission denied","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233746,"byte_end":233771,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233772,"byte_end":233775,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ If [`new`] or [`with_path`] returns an `io::ErrorKind::PermissionDenied`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233776,"byte_end":233852,"line_start":142,"line_end":142,"column_start":1,"column_end":77}},{"value":"/ error, make sure the file permissions for the specified device are correct,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233853,"byte_end":233932,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ and the current user is a member of the group that owns the device, which is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":233933,"byte_end":234013,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ usually either `dialout` or `tty`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234014,"byte_end":234052,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234053,"byte_end":234056,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [documentation]: https://www.raspberrypi.org/documentation/configuration/uart.md","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234057,"byte_end":234141,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ [`simple_signal`]: https://crates.io/crates/simple-signal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234142,"byte_end":234203,"line_start":148,"line_end":148,"column_start":1,"column_end":62}},{"value":"/ [`Uart`]: struct.Uart.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234204,"byte_end":234234,"line_start":149,"line_end":149,"column_start":1,"column_end":31}},{"value":"/ [`new`]: struct.Uart.html#method.new","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234235,"byte_end":234275,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"/ [`with_path`]: struct.Uart.html#method.with_path","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":234276,"byte_end":234328,"line_start":151,"line_end":151,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2533},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235262,"byte_end":235264,"line_start":190,"line_end":190,"column_start":5,"column_end":7},"name":"Io","qualname":"::uart::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" I/O error.\n","sig":null,"attributes":[{"value":"/ I/O error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235243,"byte_end":235257,"line_start":189,"line_end":189,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2536},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235301,"byte_end":235305,"line_start":192,"line_end":192,"column_start":5,"column_end":9},"name":"Gpio","qualname":"::uart::Error::Gpio","value":"Error::Gpio(gpio::Error)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" GPIO error.\n","sig":null,"attributes":[{"value":"/ GPIO error.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235281,"byte_end":235296,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2539},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235362,"byte_end":235374,"line_start":194,"line_end":194,"column_start":5,"column_end":17},"name":"InvalidValue","qualname":"::uart::Error::InvalidValue","value":"Error::InvalidValue","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" Invalid or unsupported value.\n","sig":null,"attributes":[{"value":"/ Invalid or unsupported value.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235324,"byte_end":235357,"line_start":193,"line_end":193,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":2532},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235231,"byte_end":235236,"line_start":188,"line_end":188,"column_start":10,"column_end":15},"name":"Error","qualname":"::uart::Error","value":"pub enum Error { Io(io::Error), Gpio(gpio::Error), InvalidValue, }","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2539}],"decl_id":null,"docs":" Errors that can occur when accessing the UART peripheral.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when accessing the UART peripheral.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235143,"byte_end":235204,"line_start":186,"line_end":186,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1672},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236188,"byte_end":236194,"line_start":228,"line_end":228,"column_start":10,"column_end":16},"name":"Result","qualname":"::uart::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned from methods that can have `uart::Error`s.\n","sig":null,"attributes":[{"value":"/ Result type returned from methods that can have `uart::Error`s.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236111,"byte_end":236178,"line_start":227,"line_end":227,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2544},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236598,"byte_end":236602,"line_start":240,"line_end":240,"column_start":5,"column_end":9},"name":"None","qualname":"::uart::Parity::None","value":"Parity::None","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":" No parity bit.\n","sig":null,"attributes":[{"value":"/ No parity bit.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236575,"byte_end":236593,"line_start":239,"line_end":239,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236629,"byte_end":236633,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"Even","qualname":"::uart::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":" Even parity.\n","sig":null,"attributes":[{"value":"/ Even parity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236608,"byte_end":236624,"line_start":241,"line_end":241,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236659,"byte_end":236662,"line_start":244,"line_end":244,"column_start":5,"column_end":8},"name":"Odd","qualname":"::uart::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":" Odd parity.\n","sig":null,"attributes":[{"value":"/ Odd parity.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236639,"byte_end":236654,"line_start":243,"line_end":243,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2550},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236700,"byte_end":236704,"line_start":246,"line_end":246,"column_start":5,"column_end":9},"name":"Mark","qualname":"::uart::Parity::Mark","value":"Parity::Mark","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":" Sets parity bit to `1`.\n","sig":null,"attributes":[{"value":"/ Sets parity bit to `1`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236668,"byte_end":236695,"line_start":245,"line_end":245,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2552},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236742,"byte_end":236747,"line_start":248,"line_end":248,"column_start":5,"column_end":10},"name":"Space","qualname":"::uart::Parity::Space","value":"Parity::Space","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":" Sets parity bit to `0`.\n","sig":null,"attributes":[{"value":"/ Sets parity bit to `0`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236710,"byte_end":236737,"line_start":247,"line_end":247,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2543},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236562,"byte_end":236568,"line_start":238,"line_end":238,"column_start":10,"column_end":16},"name":"Parity","qualname":"::uart::Parity","value":"pub enum Parity { None, Even, Odd, Mark, Space, }","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552}],"decl_id":null,"docs":" Parity bit modes.","sig":null,"attributes":[{"value":"/ Parity bit modes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236227,"byte_end":236248,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236249,"byte_end":236252,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The parity bit mode determines how the parity bit is calculated.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236253,"byte_end":236321,"line_start":232,"line_end":232,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236322,"byte_end":236325,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ `None` omits the parity bit. `Even` and `Odd` count the total number of","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236326,"byte_end":236401,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ 1-bits in the data bits. `Mark` and `Space` always set the parity","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236402,"byte_end":236471,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ bit to `1` or `0` respectively.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236472,"byte_end":236507,"line_start":236,"line_end":236,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237321,"byte_end":237325,"line_start":269,"line_end":269,"column_start":5,"column_end":9},"name":"None","qualname":"::uart::ParityCheck::None","value":"ParityCheck::None","parent":{"krate":0,"index":2565},"children":[],"decl_id":null,"docs":" Ignores parity errors.\n","sig":null,"attributes":[{"value":"/ Ignores parity errors.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237290,"byte_end":237316,"line_start":268,"line_end":268,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237394,"byte_end":237399,"line_start":271,"line_end":271,"column_start":5,"column_end":10},"name":"Strip","qualname":"::uart::ParityCheck::Strip","value":"ParityCheck::Strip","parent":{"krate":0,"index":2565},"children":[],"decl_id":null,"docs":" Removes bytes with parity errors from the input queue.\n","sig":null,"attributes":[{"value":"/ Removes bytes with parity errors from the input queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237331,"byte_end":237389,"line_start":270,"line_end":270,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237464,"byte_end":237471,"line_start":273,"line_end":273,"column_start":5,"column_end":12},"name":"Replace","qualname":"::uart::ParityCheck::Replace","value":"ParityCheck::Replace","parent":{"krate":0,"index":2565},"children":[],"decl_id":null,"docs":" Replaces bytes with parity errors with a `0` byte.\n","sig":null,"attributes":[{"value":"/ Replaces bytes with parity errors with a `0` byte.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237405,"byte_end":237459,"line_start":272,"line_end":272,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2572},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237669,"byte_end":237673,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"Mark","qualname":"::uart::ParityCheck::Mark","value":"ParityCheck::Mark","parent":{"krate":0,"index":2565},"children":[],"decl_id":null,"docs":" Marks bytes with parity errors with a preceding `255` and `0` byte.","sig":null,"attributes":[{"value":"/ Marks bytes with parity errors with a preceding `255` and `0` byte.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237477,"byte_end":237548,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237553,"byte_end":237556,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Actual `255` bytes are replaced with two `255` bytes to avoid confusion","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237561,"byte_end":237636,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ with parity errors.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237641,"byte_end":237664,"line_start":277,"line_end":277,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":2565},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237272,"byte_end":237283,"line_start":267,"line_end":267,"column_start":10,"column_end":21},"name":"ParityCheck","qualname":"::uart::ParityCheck","value":"pub enum ParityCheck { None, Strip, Replace, Mark, }","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572}],"decl_id":null,"docs":" Parity check modes.","sig":null,"attributes":[{"value":"/ Parity check modes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237122,"byte_end":237145,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237146,"byte_end":237149,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The parity check mode determines how parity errors are handled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237150,"byte_end":237217,"line_start":265,"line_end":265,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238138,"byte_end":238143,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Input","qualname":"::uart::Queue::Input","value":"Queue::Input","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":" Input queue.\n","sig":null,"attributes":[{"value":"/ Input queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238117,"byte_end":238133,"line_start":295,"line_end":295,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238171,"byte_end":238177,"line_start":298,"line_end":298,"column_start":5,"column_end":11},"name":"Output","qualname":"::uart::Queue::Output","value":"Queue::Output","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":" Output queue.\n","sig":null,"attributes":[{"value":"/ Output queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238149,"byte_end":238166,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238204,"byte_end":238208,"line_start":300,"line_end":300,"column_start":5,"column_end":9},"name":"Both","qualname":"::uart::Queue::Both","value":"Queue::Both","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":" Both queues.\n","sig":null,"attributes":[{"value":"/ Both queues.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238183,"byte_end":238199,"line_start":299,"line_end":299,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":2585},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238105,"byte_end":238110,"line_start":294,"line_end":294,"column_start":10,"column_end":15},"name":"Queue","qualname":"::uart::Queue","value":"pub enum Queue { Input, Output, Both, }","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590}],"decl_id":null,"docs":" Queue types.\n","sig":null,"attributes":[{"value":"/ Queue types.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238034,"byte_end":238050,"line_start":292,"line_end":292,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238529,"byte_end":238535,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"Status","qualname":"::uart::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":1681}],"decl_id":null,"docs":" Control signal status.\n","sig":null,"attributes":[{"value":"/ Control signal status.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238491,"byte_end":238517,"line_start":313,"line_end":313,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238803,"byte_end":238806,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"rts","qualname":"<Status>::rts","value":"pub fn rts(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RTS is active.","sig":null,"attributes":[{"value":"/ Returns `true` if RTS is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238577,"byte_end":238613,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238618,"byte_end":238621,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ RTS (active low) is controlled by [`Uart`]. An active signal indicates","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238626,"byte_end":238700,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ [`Uart`] is ready to receive more data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238705,"byte_end":238748,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238753,"byte_end":238756,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`Uart`]: struct.Uart.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238761,"byte_end":238791,"line_start":324,"line_end":324,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239075,"byte_end":239078,"line_start":333,"line_end":333,"column_start":12,"column_end":15},"name":"cts","qualname":"<Status>::cts","value":"pub fn cts(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if CTS is active.","sig":null,"attributes":[{"value":"/ Returns `true` if CTS is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238870,"byte_end":238906,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238911,"byte_end":238914,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ CTS (active low) is controlled by the external device. An active signal","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238919,"byte_end":238994,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ indicates the external device is ready to receive more data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238999,"byte_end":239063,"line_start":332,"line_end":332,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239640,"byte_end":239643,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"dtr","qualname":"<Status>::dtr","value":"pub fn dtr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DTR is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DTR is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239142,"byte_end":239178,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239183,"byte_end":239186,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ DTR (active low) is controlled by [`Uart`]. When communicating with a","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239191,"byte_end":239264,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ modem, an active signal is used to place or accept a call. An inactive","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239269,"byte_end":239343,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/ signal causes the modem to hang up. Other devices may use DTR and DSR","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239348,"byte_end":239421,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ for flow control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239426,"byte_end":239447,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239452,"byte_end":239455,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ DTR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239460,"byte_end":239524,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239529,"byte_end":239585,"line_start":345,"line_end":345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239590,"byte_end":239593,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`Uart`]: struct.Uart.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239598,"byte_end":239628,"line_start":347,"line_end":347,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240142,"byte_end":240145,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"dsr","qualname":"<Status>::dsr","value":"pub fn dsr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DSR is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DSR is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239707,"byte_end":239743,"line_start":352,"line_end":352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239748,"byte_end":239751,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ DSR (active low) is controlled by the external device. When","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239756,"byte_end":239819,"line_start":354,"line_end":354,"column_start":5,"column_end":68}},{"value":"/ communicating with a modem, an active signal indicates the modem is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239824,"byte_end":239895,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ ready for data transmission. Other devices may use DTR and DSR for flow","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239900,"byte_end":239975,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239980,"byte_end":239992,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":239997,"byte_end":240000,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ DSR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240005,"byte_end":240069,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240074,"byte_end":240130,"line_start":360,"line_end":360,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240571,"byte_end":240574,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"dcd","qualname":"<Status>::dcd","value":"pub fn dcd(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if DCD is active.","sig":null,"attributes":[{"value":"/ Returns `true` if DCD is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240209,"byte_end":240245,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240250,"byte_end":240253,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ DCD (active low) is controlled by the external device. When","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240258,"byte_end":240321,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ communicating with a modem, an active signal indicates a connection is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240326,"byte_end":240400,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ established.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240405,"byte_end":240421,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240426,"byte_end":240429,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ DCD is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240434,"byte_end":240498,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240503,"byte_end":240559,"line_start":372,"line_end":372,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240986,"byte_end":240988,"line_start":385,"line_end":385,"column_start":12,"column_end":14},"name":"ri","qualname":"<Status>::ri","value":"pub fn ri(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RI is active.","sig":null,"attributes":[{"value":"/ Returns `true` if RI is active.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240638,"byte_end":240673,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240678,"byte_end":240681,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ RI (active low) is controlled by the external device. When","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240686,"byte_end":240748,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/ communicating with a modem, an active signal indicates an incoming","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240753,"byte_end":240823,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ call.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240828,"byte_end":240837,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240842,"byte_end":240845,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ RI is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240850,"byte_end":240913,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":240918,"byte_end":240974,"line_start":384,"line_end":384,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2619},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242403,"byte_end":242407,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"Uart","qualname":"::uart::Uart","value":"Uart {  }","parent":null,"children":[{"krate":0,"index":2620}],"decl_id":null,"docs":" Provides access to the Raspberry Pi's UART peripherals and any USB to\n serial adapters.","sig":null,"attributes":[{"value":"/ Provides access to the Raspberry Pi's UART peripherals and any USB to","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241816,"byte_end":241889,"line_start":420,"line_end":420,"column_start":1,"column_end":74}},{"value":"/ serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241890,"byte_end":241910,"line_start":421,"line_end":421,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241911,"byte_end":241914,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ The `embedded-hal` [`serial::Read`], [`serial::Write`] and [`blocking::serial::Write`] trait","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241915,"byte_end":242011,"line_start":423,"line_end":423,"column_start":1,"column_end":97}},{"value":"/ implementations for `Uart` can be enabled by specifying the optional `hal` feature in the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242012,"byte_end":242105,"line_start":424,"line_end":424,"column_start":1,"column_end":94}},{"value":"/ dependency declaration for the `rppal` crate.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242106,"byte_end":242155,"line_start":425,"line_end":425,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242156,"byte_end":242159,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ [`serial::Read`]: ../../embedded_hal/serial/trait.Read.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242160,"byte_end":242223,"line_start":427,"line_end":427,"column_start":1,"column_end":64}},{"value":"/ [`serial::Write`]: ../../embedded_hal/serial/trait.Write.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242224,"byte_end":242289,"line_start":428,"line_end":428,"column_start":1,"column_end":66}},{"value":"/ [`blocking::serial::Write`]: ../../embedded_hal/blocking/serial/trait.Write.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242290,"byte_end":242374,"line_start":429,"line_end":429,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242702,"byte_end":242705,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"new","qualname":"<Uart>::new","value":"pub fn new(u32, Parity, u8, u8) -> Result<Uart>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Uart`.","sig":null,"attributes":[{"value":"/ Constructs a new `Uart`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242451,"byte_end":242479,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242484,"byte_end":242487,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ `new` attempts to identify the UART peripheral tied to BCM GPIO 14 and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242492,"byte_end":242566,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ 15, and then calls [`with_path`] with the appropriate device path.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242571,"byte_end":242641,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242646,"byte_end":242649,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`with_path`]: #method.with_path","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242654,"byte_end":242690,"line_start":441,"line_end":441,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243451,"byte_end":243460,"line_start":457,"line_end":457,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Uart>::with_path","value":"pub fn with_path<P: AsRef<Path>>(P, u32, Parity, u8, u8) -> Result<Uart>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Uart` connected to the serial character device\n specified by `path`.","sig":null,"attributes":[{"value":"/ Constructs a new `Uart` connected to the serial character device","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242878,"byte_end":242946,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/ specified by `path`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242951,"byte_end":242975,"line_start":447,"line_end":447,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242980,"byte_end":242983,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ `with_path` can be used to connect to either a UART peripheral or a USB","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242988,"byte_end":243063,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ to serial adapter.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243068,"byte_end":243090,"line_start":450,"line_end":450,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243095,"byte_end":243098,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ When a new `Uart` is constructed, the specified device is configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243103,"byte_end":243175,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ for non-canonical mode which processes input per character, ignores any","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243180,"byte_end":243255,"line_start":453,"line_end":453,"column_start":5,"column_end":80}},{"value":"/ special terminal input or output characters and disables local echo. DCD","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243260,"byte_end":243336,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ is ignored, all flow control is disabled, and the input and output queues","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243341,"byte_end":243418,"line_start":455,"line_end":455,"column_start":5,"column_end":82}},{"value":"/ are flushed.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":243423,"byte_end":243439,"line_start":456,"line_end":456,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":245935,"byte_end":245944,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"baud_rate","qualname":"<Uart>::baud_rate","value":"pub fn baud_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the line speed in baud (Bd).\n","sig":null,"attributes":[{"value":"/ Returns the line speed in baud (Bd).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":245883,"byte_end":245923,"line_start":536,"line_end":536,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246601,"byte_end":246614,"line_start":554,"line_end":554,"column_start":12,"column_end":25},"name":"set_baud_rate","qualname":"<Uart>::set_baud_rate","value":"pub fn set_baud_rate(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the line speed in baud (Bd).","sig":null,"attributes":[{"value":"/ Sets the line speed in baud (Bd).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246001,"byte_end":246038,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246043,"byte_end":246046,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ On the Raspberry Pi, baud rate is equivalent to bit rate in bits per","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246051,"byte_end":246123,"line_start":543,"line_end":543,"column_start":5,"column_end":77}},{"value":"/ second (bit/s).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246128,"byte_end":246147,"line_start":544,"line_end":544,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246152,"byte_end":246155,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Accepted values:","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246160,"byte_end":246180,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/ `0`, `50`, `75`, `110`, `134`, `150`, `200`, `300`, `600`, `1_200`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246185,"byte_end":246256,"line_start":547,"line_end":547,"column_start":5,"column_end":76}},{"value":"/ `1_800`, `2_400`, `4_800`, `9_600`, `19_200`, `38_400`, `57_600`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246261,"byte_end":246330,"line_start":548,"line_end":548,"column_start":5,"column_end":74}},{"value":"/ `115_200`, `230_400`, `460_800`, `500_000`, `576_000`, `921_600`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246335,"byte_end":246404,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/ `1_000_000`, `1_152_000`, `1_500_000`, `2_000_000`, `2_500_000`,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246409,"byte_end":246477,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ `3_000_000`, `3_500_000`, `4_000_000`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246482,"byte_end":246524,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246529,"byte_end":246532,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246537,"byte_end":246589,"line_start":553,"line_end":553,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246832,"byte_end":246838,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"parity","qualname":"<Uart>::parity","value":"pub fn parity(&Self) -> Parity","parent":null,"children":[],"decl_id":null,"docs":" Returns the parity bit mode.\n","sig":null,"attributes":[{"value":"/ Returns the parity bit mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246788,"byte_end":246820,"line_start":562,"line_end":562,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247081,"byte_end":247091,"line_start":572,"line_end":572,"column_start":12,"column_end":22},"name":"set_parity","qualname":"<Uart>::set_parity","value":"pub fn set_parity(&mut Self, Parity) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the parity bit mode.","sig":null,"attributes":[{"value":"/ Sets the parity bit mode.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246895,"byte_end":246924,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246929,"byte_end":246932,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The parity bit mode determines how the parity bit is calculated.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":246937,"byte_end":247005,"line_start":569,"line_end":569,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247010,"byte_end":247013,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Support for some modes may be device-dependent.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247018,"byte_end":247069,"line_start":571,"line_end":571,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247316,"byte_end":247328,"line_start":581,"line_end":581,"column_start":12,"column_end":24},"name":"parity_check","qualname":"<Uart>::parity_check","value":"pub fn parity_check(&Self) -> ParityCheck","parent":null,"children":[],"decl_id":null,"docs":" Returns the parity check mode for incoming data.\n","sig":null,"attributes":[{"value":"/ Returns the parity check mode for incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247252,"byte_end":247304,"line_start":580,"line_end":580,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247725,"byte_end":247741,"line_start":594,"line_end":594,"column_start":12,"column_end":28},"name":"set_parity_check","qualname":"<Uart>::set_parity_check","value":"pub fn set_parity_check(&mut Self, ParityCheck) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures parity checking for incoming data.","sig":null,"attributes":[{"value":"/ Configures parity checking for incoming data.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247396,"byte_end":247445,"line_start":585,"line_end":585,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247450,"byte_end":247453,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The parity check mode determines how parity errors are handled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247458,"byte_end":247525,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247530,"byte_end":247533,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ By default, `parity_check` is set to [`None`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247538,"byte_end":247588,"line_start":589,"line_end":589,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247593,"byte_end":247596,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Support for some modes may be device-dependent.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247601,"byte_end":247652,"line_start":591,"line_end":591,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247657,"byte_end":247660,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ [`None`]: enum.ParityCheck.html#variant.None","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247665,"byte_end":247713,"line_start":593,"line_end":593,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247985,"byte_end":247994,"line_start":603,"line_end":603,"column_start":12,"column_end":21},"name":"data_bits","qualname":"<Uart>::data_bits","value":"pub fn data_bits(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of data bits.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":247937,"byte_end":247973,"line_start":602,"line_end":602,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248213,"byte_end":248226,"line_start":612,"line_end":612,"column_start":12,"column_end":25},"name":"set_data_bits","qualname":"<Uart>::set_data_bits","value":"pub fn set_data_bits(&mut Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of data bits.","sig":null,"attributes":[{"value":"/ Sets the number of data bits.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248050,"byte_end":248083,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248088,"byte_end":248091,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Accepted values: `5`, `6`, `7`, `8`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248096,"byte_end":248136,"line_start":609,"line_end":609,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248141,"byte_end":248144,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248149,"byte_end":248201,"line_start":611,"line_end":611,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248446,"byte_end":248455,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"stop_bits","qualname":"<Uart>::stop_bits","value":"pub fn stop_bits(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of stop bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of stop bits.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248398,"byte_end":248434,"line_start":620,"line_end":620,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248664,"byte_end":248677,"line_start":630,"line_end":630,"column_start":12,"column_end":25},"name":"set_stop_bits","qualname":"<Uart>::set_stop_bits","value":"pub fn set_stop_bits(&mut Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of stop bits.","sig":null,"attributes":[{"value":"/ Sets the number of stop bits.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248511,"byte_end":248544,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248549,"byte_end":248552,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Accepted values: `1`, `2`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248557,"byte_end":248587,"line_start":627,"line_end":627,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248592,"byte_end":248595,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Support for some values may be device-dependent.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248600,"byte_end":248652,"line_start":629,"line_end":629,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248907,"byte_end":248913,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"status","qualname":"<Uart>::status","value":"pub fn status(&Self) -> Result<Status>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of the control signals.\n","sig":null,"attributes":[{"value":"/ Returns the status of the control signals.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":248849,"byte_end":248895,"line_start":638,"line_end":638,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249239,"byte_end":249246,"line_start":649,"line_end":649,"column_start":12,"column_end":19},"name":"set_dtr","qualname":"<Uart>::set_dtr","value":"pub fn set_dtr(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets DTR to active (`true`) or inactive (`false`).","sig":null,"attributes":[{"value":"/ Sets DTR to active (`true`) or inactive (`false`).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249035,"byte_end":249089,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249094,"byte_end":249097,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ DTR is not supported by the Raspberry Pi's UART peripherals,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249102,"byte_end":249166,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ but may be available on some USB to serial adapters.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249171,"byte_end":249227,"line_start":648,"line_end":648,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249407,"byte_end":249414,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"set_rts","qualname":"<Uart>::set_rts","value":"pub fn set_rts(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets RTS to active (`true`) or inactive (`false`).\n","sig":null,"attributes":[{"value":"/ Sets RTS to active (`true`) or inactive (`false`).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249341,"byte_end":249395,"line_start":653,"line_end":653,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249585,"byte_end":249606,"line_start":659,"line_end":659,"column_start":12,"column_end":33},"name":"software_flow_control","qualname":"<Uart>::software_flow_control","value":"pub fn software_flow_control(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if XON/XOFF software flow control is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if XON/XOFF software flow control is enabled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249509,"byte_end":249573,"line_start":658,"line_end":658,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250842,"byte_end":250867,"line_start":686,"line_end":686,"column_start":12,"column_end":37},"name":"set_software_flow_control","qualname":"<Uart>::set_software_flow_control","value":"pub fn set_software_flow_control(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables XON/XOFF software flow control.","sig":null,"attributes":[{"value":"/ Enables or disables XON/XOFF software flow control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249676,"byte_end":249731,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249736,"byte_end":249739,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ When software flow control is enabled, incoming XON (decimal 17) and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249744,"byte_end":249816,"line_start":665,"line_end":665,"column_start":5,"column_end":77}},{"value":"/ XOFF (decimal 19) control characters are filtered from the input queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249821,"byte_end":249896,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ When XOFF is received, the transmission of data in the output queue is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249901,"byte_end":249975,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ paused until the external device sends XON. XOFF is automatically sent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":249980,"byte_end":250054,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"/ to the external device to prevent the input queue from overflowing.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250059,"byte_end":250130,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ XON is sent when the input queue is ready for more data. You can also","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250135,"byte_end":250208,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/ manually send these control characters by calling [`send_stop`] and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250213,"byte_end":250284,"line_start":671,"line_end":671,"column_start":5,"column_end":76}},{"value":"/ [`send_start`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250289,"byte_end":250308,"line_start":672,"line_end":672,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250313,"byte_end":250316,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ By default, software flow control is disabled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250321,"byte_end":250371,"line_start":674,"line_end":674,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250376,"byte_end":250379,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Support for XON/XOFF software flow control is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250384,"byte_end":250433,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/ device-dependent. You can manually implement XON/XOFF by disabling","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250438,"byte_end":250508,"line_start":677,"line_end":677,"column_start":5,"column_end":75}},{"value":"/ software flow control, parsing incoming XON/XOFF control characters","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250513,"byte_end":250584,"line_start":678,"line_end":678,"column_start":5,"column_end":76}},{"value":"/ received with [`read`], and sending XON/XOFF when needed using","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250589,"byte_end":250655,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250660,"byte_end":250674,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250679,"byte_end":250682,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`send_start`]: #method.send_start","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250687,"byte_end":250725,"line_start":682,"line_end":682,"column_start":5,"column_end":43}},{"value":"/ [`send_stop`]: #method.send_stop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250730,"byte_end":250766,"line_start":683,"line_end":683,"column_start":5,"column_end":41}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250771,"byte_end":250797,"line_start":684,"line_end":684,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":250802,"byte_end":250830,"line_start":685,"line_end":685,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251246,"byte_end":251267,"line_start":699,"line_end":699,"column_start":12,"column_end":33},"name":"hardware_flow_control","qualname":"<Uart>::hardware_flow_control","value":"pub fn hardware_flow_control(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if RTS/CTS hardware flow control is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if RTS/CTS hardware flow control is enabled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251171,"byte_end":251234,"line_start":698,"line_end":698,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252768,"byte_end":252793,"line_start":731,"line_end":731,"column_start":12,"column_end":37},"name":"set_hardware_flow_control","qualname":"<Uart>::set_hardware_flow_control","value":"pub fn set_hardware_flow_control(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables RTS/CTS hardware flow control.","sig":null,"attributes":[{"value":"/ Enables or disables RTS/CTS hardware flow control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251337,"byte_end":251391,"line_start":703,"line_end":703,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251396,"byte_end":251399,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ When hardware flow control is enabled, the RTS line (active low) is","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251404,"byte_end":251475,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/ automatically driven high to prevent the input queue from overflowing,","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251480,"byte_end":251554,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ and driven low when the input queue is ready for more data. When the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251559,"byte_end":251631,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ CTS line (active low) is driven high by the external device, all data","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251636,"byte_end":251709,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ in the output queue is held until CTS is driven low. You can also","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251714,"byte_end":251783,"line_start":709,"line_end":709,"column_start":5,"column_end":74}},{"value":"/ manually change the active state of RTS by calling [`send_stop`] and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251788,"byte_end":251860,"line_start":710,"line_end":710,"column_start":5,"column_end":77}},{"value":"/ [`send_start`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251865,"byte_end":251884,"line_start":711,"line_end":711,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251889,"byte_end":251892,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ When `Uart` is controlling a UART peripheral, enabling hardware flow","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251897,"byte_end":251969,"line_start":713,"line_end":713,"column_start":5,"column_end":77}},{"value":"/ control will also configure the RTS and CTS pins.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":251974,"byte_end":252027,"line_start":714,"line_end":714,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252032,"byte_end":252035,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ More information on hardware flow control can be found [here].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252040,"byte_end":252106,"line_start":716,"line_end":716,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252111,"byte_end":252114,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ By default, hardware flow control is disabled.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252119,"byte_end":252169,"line_start":718,"line_end":718,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252174,"byte_end":252177,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Support for RTS/CTS hardware flow control is device-dependent. You can","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252182,"byte_end":252256,"line_start":720,"line_end":720,"column_start":5,"column_end":79}},{"value":"/ manually implement RTS/CTS using [`cts`], [`send_stop`] and","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252261,"byte_end":252324,"line_start":721,"line_end":721,"column_start":5,"column_end":68}},{"value":"/ [`send_start`], or by disabling hardware flow control and configuring","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252329,"byte_end":252402,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ an [`OutputPin`] for RTS and an [`InputPin`] for CTS.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252407,"byte_end":252464,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252469,"byte_end":252472,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ [here]: index.html#hardware-flow-control","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252477,"byte_end":252521,"line_start":725,"line_end":725,"column_start":5,"column_end":49}},{"value":"/ [`cts`]: struct.Status.html#method.cts","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252526,"byte_end":252568,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/ [`send_start`]: #method.send_start","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252573,"byte_end":252611,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/ [`send_stop`]: #method.send_stop","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252616,"byte_end":252652,"line_start":728,"line_end":728,"column_start":5,"column_end":41}},{"value":"/ [`OutputPin`]: ../gpio/struct.OutputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252657,"byte_end":252705,"line_start":729,"line_end":729,"column_start":5,"column_end":53}},{"value":"/ [`InputPin`]: ../gpio/struct.InputPin.html","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":252710,"byte_end":252756,"line_start":730,"line_end":730,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254411,"byte_end":254420,"line_start":770,"line_end":770,"column_start":12,"column_end":21},"name":"send_stop","qualname":"<Uart>::send_stop","value":"pub fn send_stop(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Requests the external device to pause its transmission using flow control.","sig":null,"attributes":[{"value":"/ Requests the external device to pause its transmission using flow control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254109,"byte_end":254187,"line_start":763,"line_end":763,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254192,"byte_end":254195,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If software flow control is enabled, `send_stop`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254200,"byte_end":254252,"line_start":765,"line_end":765,"column_start":5,"column_end":57}},{"value":"/ sends the XOFF control character.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254257,"byte_end":254294,"line_start":766,"line_end":766,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254299,"byte_end":254302,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If hardware flow control is enabled, `send_stop` sets RTS to its","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254307,"byte_end":254375,"line_start":768,"line_end":768,"column_start":5,"column_end":73}},{"value":"/ inactive state.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254380,"byte_end":254399,"line_start":769,"line_end":769,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254987,"byte_end":254997,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"send_start","qualname":"<Uart>::send_start","value":"pub fn send_start(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Requests the external device to resume its transmission using flow control.","sig":null,"attributes":[{"value":"/ Requests the external device to resume its transmission using flow control.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254685,"byte_end":254764,"line_start":782,"line_end":782,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254769,"byte_end":254772,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ If software flow control is enabled, `send_start`","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254777,"byte_end":254830,"line_start":784,"line_end":784,"column_start":5,"column_end":58}},{"value":"/ sends the XON control character.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254835,"byte_end":254871,"line_start":785,"line_end":785,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254876,"byte_end":254879,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ If hardware flow control is enabled, `send_start` sets RTS to its","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254884,"byte_end":254953,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ active state.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":254958,"byte_end":254975,"line_start":788,"line_end":788,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255380,"byte_end":255396,"line_start":804,"line_end":804,"column_start":12,"column_end":28},"name":"is_read_blocking","qualname":"<Uart>::is_read_blocking","value":"pub fn is_read_blocking(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [`read`] is configured to block when needed.","sig":null,"attributes":[{"value":"/ Returns `true` if [`read`] is configured to block when needed.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255262,"byte_end":255328,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255333,"byte_end":255336,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255341,"byte_end":255368,"line_start":803,"line_end":803,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255578,"byte_end":255595,"line_start":811,"line_end":811,"column_start":12,"column_end":29},"name":"is_write_blocking","qualname":"<Uart>::is_write_blocking","value":"pub fn is_write_blocking(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [`write`] is configured to block when needed.","sig":null,"attributes":[{"value":"/ Returns `true` if [`write`] is configured to block when needed.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255458,"byte_end":255525,"line_start":808,"line_end":808,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255530,"byte_end":255533,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255538,"byte_end":255566,"line_start":810,"line_end":810,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257292,"byte_end":257305,"line_start":847,"line_end":847,"column_start":12,"column_end":25},"name":"set_read_mode","qualname":"<Uart>::set_read_mode","value":"pub fn set_read_mode(&mut Self, u8, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode for subsequent calls to [`read`].","sig":null,"attributes":[{"value":"/ Sets the blocking mode for subsequent calls to [`read`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255658,"byte_end":255718,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255723,"byte_end":255726,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `min_length` indicates the minimum number of requested bytes. This","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255731,"byte_end":255801,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ value may differ from the actual buffer length. Maximum value: 255","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255806,"byte_end":255876,"line_start":818,"line_end":818,"column_start":5,"column_end":75}},{"value":"/ bytes.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255881,"byte_end":255891,"line_start":819,"line_end":819,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255896,"byte_end":255899,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ `timeout` indicates how long [`read`] blocks while waiting for","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255904,"byte_end":255970,"line_start":821,"line_end":821,"column_start":5,"column_end":71}},{"value":"/ incoming data. `timeout` uses a 0.1 second resolution. Maximum","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":255975,"byte_end":256041,"line_start":822,"line_end":822,"column_start":5,"column_end":71}},{"value":"/ value: 25.5 seconds.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256046,"byte_end":256070,"line_start":823,"line_end":823,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256075,"byte_end":256078,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ [`read`] operates in one of four modes, depending on the specified","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256083,"byte_end":256153,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/ `min_length` and `timeout` values:","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256158,"byte_end":256196,"line_start":826,"line_end":826,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256201,"byte_end":256204,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ * **Non-blocking read** (`min_length` = 0, `timeout` = 0). [`read`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256209,"byte_end":256280,"line_start":828,"line_end":828,"column_start":5,"column_end":76}},{"value":"/ retrieves any available data and returns immediately.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256285,"byte_end":256342,"line_start":829,"line_end":829,"column_start":5,"column_end":62}},{"value":"/ * **Blocking read** (`min_length` > 0, `timeout` = 0). [`read`] blocks","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256347,"byte_end":256421,"line_start":830,"line_end":830,"column_start":5,"column_end":79}},{"value":"/ until at least `min_length` bytes are available, or the provided buffer","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256426,"byte_end":256501,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/ is full.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256506,"byte_end":256518,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/ * **Read with timeout** (`min_length` = 0, `timeout` > 0). [`read`]","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256523,"byte_end":256594,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ blocks until at least one byte is available, or the `timeout` duration","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256599,"byte_end":256673,"line_start":834,"line_end":834,"column_start":5,"column_end":79}},{"value":"/ elapses.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256678,"byte_end":256690,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/ * **Read with inter-byte timeout** (`min_length` > 0, `timeout` > 0).","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256695,"byte_end":256768,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ [`read`] blocks until at least `min_length` bytes are available, the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256773,"byte_end":256845,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ provided buffer is full, or the `timeout` duration elapses","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256850,"byte_end":256912,"line_start":838,"line_end":838,"column_start":5,"column_end":67}},{"value":"/ after receiving one or more bytes. The timer is started after an","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256917,"byte_end":256985,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ initial byte becomes available, and is restarted after each additional","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":256990,"byte_end":257064,"line_start":840,"line_end":840,"column_start":5,"column_end":79}},{"value":"/ byte. That means [`read`] will block indefinitely until at least one","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257069,"byte_end":257141,"line_start":841,"line_end":841,"column_start":5,"column_end":77}},{"value":"/ byte has been received.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257146,"byte_end":257173,"line_start":842,"line_end":842,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257178,"byte_end":257181,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ By default, [`read`] is configured as non-blocking.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257186,"byte_end":257241,"line_start":844,"line_end":844,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257246,"byte_end":257249,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":257254,"byte_end":257280,"line_start":846,"line_end":846,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258927,"byte_end":258941,"line_start":885,"line_end":885,"column_start":12,"column_end":26},"name":"set_write_mode","qualname":"<Uart>::set_write_mode","value":"pub fn set_write_mode(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode for subsequent calls to [`write`].","sig":null,"attributes":[{"value":"/ Sets the blocking mode for subsequent calls to [`write`].","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258106,"byte_end":258167,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258172,"byte_end":258175,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ [`write`] operates in one of two modes, depending on the specified","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258180,"byte_end":258250,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ `blocking` value:","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258255,"byte_end":258276,"line_start":872,"line_end":872,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258281,"byte_end":258284,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ * **Non-blocking write**. [`write`] returns immediately after","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258289,"byte_end":258354,"line_start":874,"line_end":874,"column_start":5,"column_end":70}},{"value":"/ copying as much of the contents of the provided buffer to the output queue","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258359,"byte_end":258437,"line_start":875,"line_end":875,"column_start":5,"column_end":83}},{"value":"/ as it's able to fit.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258442,"byte_end":258466,"line_start":876,"line_end":876,"column_start":5,"column_end":29}},{"value":"/ * **Blocking write**. [`write`] blocks until the entire contents of the provided buffer","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258471,"byte_end":258562,"line_start":877,"line_end":877,"column_start":5,"column_end":96}},{"value":"/ can be copied to the output queue. If flow control is enabled and the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258567,"byte_end":258640,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ external device has sent a stop request, the transmission of any waiting data","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258645,"byte_end":258726,"line_start":879,"line_end":879,"column_start":5,"column_end":86}},{"value":"/ in the output queue is paused until a start request has been received.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258731,"byte_end":258805,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258810,"byte_end":258813,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ By default, [`write`] is configured as non-blocking.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258818,"byte_end":258874,"line_start":882,"line_end":882,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258879,"byte_end":258882,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":258887,"byte_end":258915,"line_start":884,"line_end":884,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":259692,"byte_end":259701,"line_start":906,"line_end":906,"column_start":12,"column_end":21},"name":"input_len","qualname":"<Uart>::input_len","value":"pub fn input_len(&Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes waiting in the input queue.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes waiting in the input queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":259621,"byte_end":259680,"line_start":905,"line_end":905,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":259853,"byte_end":259863,"line_start":911,"line_end":911,"column_start":12,"column_end":22},"name":"output_len","qualname":"<Uart>::output_len","value":"pub fn output_len(&Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes waiting in the output queue.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes waiting in the output queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":259781,"byte_end":259841,"line_start":910,"line_end":910,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260342,"byte_end":260346,"line_start":925,"line_end":925,"column_start":12,"column_end":16},"name":"read","qualname":"<Uart>::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives incoming data from the external device and stores it in\n `buffer`.","sig":null,"attributes":[{"value":"/ Receives incoming data from the external device and stores it in","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":259944,"byte_end":260012,"line_start":915,"line_end":915,"column_start":5,"column_end":73}},{"value":"/ `buffer`.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260017,"byte_end":260030,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260035,"byte_end":260038,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ `read` operates in one of four (non)blocking modes, depending on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260043,"byte_end":260115,"line_start":918,"line_end":918,"column_start":5,"column_end":77}},{"value":"/ settings configured by [`set_read_mode`]. By default, `read` is configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260120,"byte_end":260198,"line_start":919,"line_end":919,"column_start":5,"column_end":83}},{"value":"/ as non-blocking.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260203,"byte_end":260223,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260228,"byte_end":260231,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were read.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260236,"byte_end":260273,"line_start":922,"line_end":922,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260278,"byte_end":260281,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ [`set_read_mode`]: #method.set_read_mode","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260286,"byte_end":260330,"line_start":924,"line_end":924,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":261000,"byte_end":261005,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"write","qualname":"<Uart>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends the contents of `buffer` to the external device.","sig":null,"attributes":[{"value":"/ Sends the contents of `buffer` to the external device.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260617,"byte_end":260675,"line_start":935,"line_end":935,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260680,"byte_end":260683,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ `write` operates in either blocking or non-blocking mode, depending on the","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260688,"byte_end":260766,"line_start":937,"line_end":937,"column_start":5,"column_end":83}},{"value":"/ settings configured by [`set_write_mode`]. By default, `write` is configured","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260771,"byte_end":260851,"line_start":938,"line_end":938,"column_start":5,"column_end":85}},{"value":"/ as non-blocking.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260856,"byte_end":260876,"line_start":939,"line_end":939,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260881,"byte_end":260884,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Returns how many bytes were written.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260889,"byte_end":260929,"line_start":941,"line_end":941,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260934,"byte_end":260937,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ [`set_write_mode`]: #method.set_write_mode","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":260942,"byte_end":260988,"line_start":943,"line_end":943,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":261958,"byte_end":261963,"line_start":972,"line_end":972,"column_start":12,"column_end":17},"name":"drain","qualname":"<Uart>::drain","value":"pub fn drain(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Blocks until all data in the output queue has been transmitted.\n","sig":null,"attributes":[{"value":"/ Blocks until all data in the output queue has been transmitted.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":261879,"byte_end":261946,"line_start":971,"line_end":971,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":262103,"byte_end":262108,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"flush","qualname":"<Uart>::flush","value":"pub fn flush(&Self, Queue) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Discards all data in the input and/or output queue.\n","sig":null,"attributes":[{"value":"/ Discards all data in the input and/or output queue.","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":262036,"byte_end":262091,"line_start":976,"line_end":976,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24294,"byte_end":24301,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24735,"byte_end":24742,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24899,"byte_end":24904,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":26408,"byte_end":26413,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":28059,"byte_end":28068,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":29309,"byte_end":29318,"line_start":96,"line_end":96,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":29660,"byte_end":29669,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":34422,"byte_end":34436,"line_start":250,"line_end":250,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":36158,"byte_end":36172,"line_start":304,"line_end":304,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":40394,"byte_end":40402,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":40755,"byte_end":40763,"line_start":106,"line_end":106,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":41429,"byte_end":41437,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":41662,"byte_end":41670,"line_start":142,"line_end":142,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":42487,"byte_end":42500,"line_start":170,"line_end":170,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":44657,"byte_end":44670,"line_start":243,"line_end":243,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":44749,"byte_end":44762,"line_start":249,"line_end":249,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":45494,"byte_end":45504,"line_start":274,"line_end":274,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":45640,"byte_end":45650,"line_start":282,"line_end":282,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":46194,"byte_end":46206,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47261,"byte_end":47273,"line_start":338,"line_end":338,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47352,"byte_end":47364,"line_start":344,"line_end":344,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47969,"byte_end":47978,"line_start":366,"line_end":366,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":48767,"byte_end":48772,"line_start":399,"line_end":399,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":53630,"byte_end":53637,"line_start":57,"line_end":57,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":53910,"byte_end":53917,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62221,"byte_end":62228,"line_start":309,"line_end":309,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62458,"byte_end":62465,"line_start":318,"line_end":318,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62491,"byte_end":62498,"line_start":320,"line_end":320,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72558,"byte_end":72561,"line_start":290,"line_end":290,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76437,"byte_end":76440,"line_start":417,"line_end":417,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77748,"byte_end":77756,"line_start":454,"line_end":454,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83938,"byte_end":83947,"line_start":615,"line_end":615,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":1856},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87094,"byte_end":87099,"line_start":708,"line_end":708,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":1886},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":90670,"byte_end":90677,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":95419,"byte_end":95426,"line_start":189,"line_end":189,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":95944,"byte_end":95951,"line_start":202,"line_end":202,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13686,"byte_end":13691,"line_start":201,"line_end":201,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14204,"byte_end":14209,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14239,"byte_end":14244,"line_start":215,"line_end":215,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14347,"byte_end":14352,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14819,"byte_end":14823,"line_start":244,"line_end":244,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15438,"byte_end":15443,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15658,"byte_end":15663,"line_start":276,"line_end":276,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15819,"byte_end":15824,"line_start":286,"line_end":286,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16195,"byte_end":16205,"line_start":305,"line_end":305,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16671,"byte_end":16678,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":17298,"byte_end":17307,"line_start":344,"line_end":344,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":18101,"byte_end":18105,"line_start":368,"line_end":368,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127142,"byte_end":127154,"line_start":66,"line_end":66,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130468,"byte_end":130480,"line_start":174,"line_end":174,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":133511,"byte_end":133522,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103529,"byte_end":103534,"line_start":182,"line_end":182,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103994,"byte_end":103999,"line_start":193,"line_end":193,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104029,"byte_end":104034,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104137,"byte_end":104142,"line_start":201,"line_end":201,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105896,"byte_end":105899,"line_start":244,"line_end":244,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124428,"byte_end":124431,"line_start":707,"line_end":707,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146664,"byte_end":146669,"line_start":104,"line_end":104,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146865,"byte_end":146870,"line_start":112,"line_end":112,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146900,"byte_end":146905,"line_start":114,"line_end":114,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147351,"byte_end":147358,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147699,"byte_end":147707,"line_start":151,"line_end":151,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148725,"byte_end":148728,"line_start":182,"line_end":182,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158928,"byte_end":158931,"line_start":484,"line_end":484,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202663,"byte_end":202670,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209825,"byte_end":209832,"line_start":266,"line_end":266,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175994,"byte_end":175999,"line_start":202,"line_end":202,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":176891,"byte_end":176896,"line_start":223,"line_end":223,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":176926,"byte_end":176931,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177808,"byte_end":177811,"line_start":262,"line_end":262,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179208,"byte_end":179219,"line_start":310,"line_end":310,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180296,"byte_end":180304,"line_start":340,"line_end":340,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181376,"byte_end":181380,"line_start":376,"line_end":376,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182505,"byte_end":182513,"line_start":409,"line_end":409,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183937,"byte_end":183940,"line_start":443,"line_end":443,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193855,"byte_end":193858,"line_start":709,"line_end":709,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193883,"byte_end":193886,"line_start":711,"line_end":711,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212798,"byte_end":212803,"line_start":58,"line_end":58,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213008,"byte_end":213013,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213903,"byte_end":213908,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215775,"byte_end":215778,"line_start":139,"line_end":139,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223728,"byte_end":223738,"line_start":318,"line_end":318,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235401,"byte_end":235406,"line_start":197,"line_end":197,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235750,"byte_end":235755,"line_start":207,"line_end":207,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235785,"byte_end":235790,"line_start":209,"line_end":209,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235891,"byte_end":235896,"line_start":215,"line_end":215,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236003,"byte_end":236008,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236774,"byte_end":236780,"line_start":251,"line_end":251,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237700,"byte_end":237711,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238235,"byte_end":238240,"line_start":303,"line_end":303,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238564,"byte_end":238570,"line_start":318,"line_end":318,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241070,"byte_end":241076,"line_start":390,"line_end":390,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242440,"byte_end":242444,"line_start":435,"line_end":435,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2056,"byte_end":2060,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2107,"byte_end":2110,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":702}},{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2120,"byte_end":2123,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":913}},{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2133,"byte_end":2136,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1031}},{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2146,"byte_end":2152,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1219}},{"kind":"Mod","span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/lib.rs","byte_start":2162,"byte_end":2166,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1266}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24294,"byte_end":24301,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24735,"byte_end":24742,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1726},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":24899,"byte_end":24904,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/epoll.rs","byte_start":26408,"byte_end":26413,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":28059,"byte_end":28068,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":29309,"byte_end":29318,"line_start":96,"line_end":96,"column_start":21,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":29660,"byte_end":29669,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":34422,"byte_end":34436,"line_start":250,"line_end":250,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/interrupt.rs","byte_start":36158,"byte_end":36172,"line_start":304,"line_end":304,"column_start":15,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1747},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":40394,"byte_end":40402,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":40755,"byte_end":40763,"line_start":106,"line_end":106,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1752},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":41429,"byte_end":41437,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":41662,"byte_end":41670,"line_start":142,"line_end":142,"column_start":21,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":42487,"byte_end":42500,"line_start":170,"line_end":170,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":44657,"byte_end":44670,"line_start":243,"line_end":243,"column_start":15,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":44749,"byte_end":44762,"line_start":249,"line_end":249,"column_start":21,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":45494,"byte_end":45504,"line_start":274,"line_end":274,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":45640,"byte_end":45650,"line_start":282,"line_end":282,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1775},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":46194,"byte_end":46206,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47261,"byte_end":47273,"line_start":338,"line_end":338,"column_start":15,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47352,"byte_end":47364,"line_start":344,"line_end":344,"column_start":21,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":47969,"byte_end":47978,"line_start":366,"line_end":366,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/ioctl.rs","byte_start":48767,"byte_end":48772,"line_start":399,"line_end":399,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":53630,"byte_end":53637,"line_start":57,"line_end":57,"column_start":21,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":53910,"byte_end":53917,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62221,"byte_end":62228,"line_start":309,"line_end":309,"column_start":15,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62458,"byte_end":62465,"line_start":318,"line_end":318,"column_start":22,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/mem.rs","byte_start":62491,"byte_end":62498,"line_start":320,"line_end":320,"column_start":22,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":72558,"byte_end":72561,"line_start":290,"line_end":290,"column_start":6,"column_end":9},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":76437,"byte_end":76440,"line_start":417,"line_end":417,"column_start":15,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1809},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":77748,"byte_end":77756,"line_start":454,"line_end":454,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":83938,"byte_end":83947,"line_start":615,"line_end":615,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/pin.rs","byte_start":87094,"byte_end":87099,"line_start":708,"line_end":708,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":90670,"byte_end":90677,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":95419,"byte_end":95426,"line_start":189,"line_end":189,"column_start":15,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio/soft_pwm.rs","byte_start":95944,"byte_end":95951,"line_start":202,"line_end":202,"column_start":22,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":13686,"byte_end":13691,"line_start":201,"line_end":201,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1934},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14204,"byte_end":14209,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14239,"byte_end":14244,"line_start":215,"line_end":215,"column_start":26,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1934},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14347,"byte_end":14352,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1934},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":14819,"byte_end":14823,"line_start":244,"line_end":244,"column_start":23,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15438,"byte_end":15443,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1986},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15658,"byte_end":15663,"line_start":276,"line_end":276,"column_start":19,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1986},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":15819,"byte_end":15824,"line_start":286,"line_end":286,"column_start":14,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1986},"to":{"krate":2,"index":3108}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16195,"byte_end":16205,"line_start":305,"line_end":305,"column_start":23,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2004},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":16671,"byte_end":16678,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2025},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":17298,"byte_end":17307,"line_start":344,"line_end":344,"column_start":21,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/gpio.rs","byte_start":18101,"byte_end":18105,"line_start":368,"line_end":368,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":127142,"byte_end":127154,"line_start":66,"line_end":66,"column_start":6,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":130468,"byte_end":130480,"line_start":174,"line_end":174,"column_start":21,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c/ioctl.rs","byte_start":133511,"byte_end":133522,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103529,"byte_end":103534,"line_start":182,"line_end":182,"column_start":23,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2162},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":103994,"byte_end":103999,"line_start":193,"line_end":193,"column_start":23,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2162},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104029,"byte_end":104034,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2162},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":104137,"byte_end":104142,"line_start":201,"line_end":201,"column_start":30,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2162},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":105896,"byte_end":105899,"line_start":244,"line_end":244,"column_start":6,"column_end":9},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/i2c.rs","byte_start":124428,"byte_end":124431,"line_start":707,"line_end":707,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146664,"byte_end":146669,"line_start":104,"line_end":104,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146865,"byte_end":146870,"line_start":112,"line_end":112,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2184},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":146900,"byte_end":146905,"line_start":114,"line_end":114,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147351,"byte_end":147358,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":147699,"byte_end":147707,"line_start":151,"line_end":151,"column_start":23,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":148725,"byte_end":148728,"line_start":182,"line_end":182,"column_start":6,"column_end":9},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/pwm.rs","byte_start":158928,"byte_end":158931,"line_start":484,"line_end":484,"column_start":15,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":202663,"byte_end":202670,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi/segment.rs","byte_start":209825,"byte_end":209832,"line_start":266,"line_end":266,"column_start":29,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2229},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":175994,"byte_end":175999,"line_start":202,"line_end":202,"column_start":23,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2266},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":176891,"byte_end":176896,"line_start":223,"line_end":223,"column_start":23,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2266},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":176926,"byte_end":176931,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2266},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":177808,"byte_end":177811,"line_start":262,"line_end":262,"column_start":23,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2287},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":179208,"byte_end":179219,"line_start":310,"line_end":310,"column_start":23,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":180296,"byte_end":180304,"line_start":340,"line_end":340,"column_start":23,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":181376,"byte_end":181380,"line_start":376,"line_end":376,"column_start":23,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":182505,"byte_end":182513,"line_start":409,"line_end":409,"column_start":23,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2422},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":183937,"byte_end":183940,"line_start":443,"line_end":443,"column_start":6,"column_end":9},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193855,"byte_end":193858,"line_start":709,"line_end":709,"column_start":22,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/spi.rs","byte_start":193883,"byte_end":193886,"line_start":711,"line_end":711,"column_start":21,"column_end":24},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":212798,"byte_end":212803,"line_start":58,"line_end":58,"column_start":23,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213008,"byte_end":213013,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2440},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":213903,"byte_end":213908,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2445},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":215775,"byte_end":215778,"line_start":139,"line_end":139,"column_start":23,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/system.rs","byte_start":223728,"byte_end":223738,"line_start":318,"line_end":318,"column_start":6,"column_end":16},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235401,"byte_end":235406,"line_start":197,"line_end":197,"column_start":23,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235750,"byte_end":235755,"line_start":207,"line_end":207,"column_start":23,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2532},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235785,"byte_end":235790,"line_start":209,"line_end":209,"column_start":26,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":235891,"byte_end":235896,"line_start":215,"line_end":215,"column_start":28,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236003,"byte_end":236008,"line_start":221,"line_end":221,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":236774,"byte_end":236780,"line_start":251,"line_end":251,"column_start":23,"column_end":29},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":237700,"byte_end":237711,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2565},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238235,"byte_end":238240,"line_start":303,"line_end":303,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":9307}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":238564,"byte_end":238570,"line_start":318,"line_end":318,"column_start":6,"column_end":12},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":241070,"byte_end":241076,"line_start":390,"line_end":390,"column_start":21,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dpop/.cargo/registry/src/github.com-1ecc6299db9ec823/rppal-0.13.1/src/uart.rs","byte_start":242440,"byte_end":242444,"line_start":435,"line_end":435,"column_start":6,"column_end":10},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2619},"to":{"krate":4294967295,"index":4294967295}}]}